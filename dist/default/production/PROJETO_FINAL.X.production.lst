

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Dec 16 21:59:35 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4520 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	smallconst
    76  000600                     __psmallconst:
    77                           	callstack 0
    78  000600  00                 	db	0
    79  000601                     _valor@ssd$F183:
    80                           	callstack 0
    81  000601  3F                 	db	63
    82  000602  06                 	db	6
    83  000603  5B                 	db	91
    84  000604  4F                 	db	79
    85  000605  66                 	db	102
    86  000606  6D                 	db	109
    87  000607  7D                 	db	125
    88  000608  07                 	db	7
    89  000609  7F                 	db	127
    90  00060A  6F                 	db	111
    91  00060B  77                 	db	119
    92  00060C  7C                 	db	124
    93  00060D  39                 	db	57
    94  00060E  5E                 	db	94
    95  00060F  79                 	db	121
    96  000610  71                 	db	113
    97  000611                     __end_of_valor@ssd$F183:
    98                           	callstack 0
    99  000611                     _valor:
   100                           	callstack 0
   101  000611  3F                 	db	63
   102  000612  06                 	db	6
   103  000613  5B                 	db	91
   104  000614  4F                 	db	79
   105  000615  66                 	db	102
   106  000616  6D                 	db	109
   107  000617  7D                 	db	125
   108  000618  07                 	db	7
   109  000619  7F                 	db	127
   110  00061A  6F                 	db	111
   111  00061B  77                 	db	119
   112  00061C  7C                 	db	124
   113  00061D  39                 	db	57
   114  00061E  5E                 	db	94
   115  00061F  79                 	db	121
   116  000620  71                 	db	113
   117  000621                     __end_of_valor:
   118                           	callstack 0
   119  000621                     _charKey:
   120                           	callstack 0
   121  000621  55                 	db	85
   122  000622  4C                 	db	76
   123  000623  44                 	db	68
   124  000624  52                 	db	82
   125  000625  53                 	db	83
   126  000626  58                 	db	88
   127  000627  41                 	db	65
   128  000628  42                 	db	66
   129  000629  59                 	db	89
   130  00062A  73                 	db	115
   131  00062B                     __end_of_charKey:
   132                           	callstack 0
   133  0000                     _T0CON	set	4053
   134  0000                     _TMR0L	set	4054
   135  0000                     _TMR0H	set	4055
   136  0000                     _INTCON	set	4082
   137  0000                     _ADCON1	set	4033
   138  0000                     _TRISE	set	3990
   139  0000                     _TRISD	set	3989
   140  0000                     _TRISC	set	3988
   141  0000                     _TRISB	set	3987
   142  0000                     _TRISA	set	3986
   143  0000                     _PORTE	set	3972
   144  0000                     _PORTC	set	3970
   145  0000                     _PORTB	set	3969
   146  0000                     _PORTA	set	3968
   147  0000                     _PORTD	set	3971
   148  00062B                     STR_4:
   149  00062B  54                 	db	84	;'T'
   150  00062C  45                 	db	69	;'E'
   151  00062D  4D                 	db	77	;'M'
   152  00062E  50                 	db	80	;'P'
   153  00062F  4F                 	db	79	;'O'
   154  000630  20                 	db	32
   155  000631  52                 	db	82	;'R'
   156  000632  45                 	db	69	;'E'
   157  000633  53                 	db	83	;'S'
   158  000634  54                 	db	84	;'T'
   159  000635  41                 	db	65	;'A'
   160  000636  4E                 	db	78	;'N'
   161  000637  54                 	db	84	;'T'
   162  000638  45                 	db	69	;'E'
   163  000639  20                 	db	32
   164  00063A  3D                 	db	61	;'='
   165  00063B  00                 	db	0
   166  00063C                     STR_5:
   167  00063C  42                 	db	66	;'B'
   168  00063D  41                 	db	65	;'A'
   169  00063E  4E                 	db	78	;'N'
   170  00063F  48                 	db	72	;'H'
   171  000640  4F                 	db	79	;'O'
   172  000641  20                 	db	32
   173  000642  46                 	db	70	;'F'
   174  000643  49                 	db	73	;'I'
   175  000644  4E                 	db	78	;'N'
   176  000645  41                 	db	65	;'A'
   177  000646  4C                 	db	76	;'L'
   178  000647  49                 	db	73	;'I'
   179  000648  5A                 	db	90	;'Z'
   180  000649  41                 	db	65	;'A'
   181  00064A  44                 	db	68	;'D'
   182  00064B  4F                 	db	79	;'O'
   183  00064C  00                 	db	0
   184  00064D                     STR_6:
   185  00064D  41                 	db	65	;'A'
   186  00064E  47                 	db	71	;'G'
   187  00064F  55                 	db	85	;'U'
   188  000650  41                 	db	65	;'A'
   189  000651  52                 	db	82	;'R'
   190  000652  44                 	db	68	;'D'
   191  000653  45                 	db	69	;'E'
   192  000654  20                 	db	32
   193  000655  31                 	db	49	;'1'
   194  000656  20                 	db	32
   195  000657  4D                 	db	77	;'M'
   196  000658  49                 	db	73	;'I'
   197  000659  4E                 	db	78	;'N'
   198  00065A  55                 	db	85	;'U'
   199  00065B  54                 	db	84	;'T'
   200  00065C  4F                 	db	79	;'O'
   201  00065D  00                 	db	0
   202  00065E                     STR_1:
   203  00065E  42                 	db	66	;'B'
   204  00065F  41                 	db	65	;'A'
   205  000660  4E                 	db	78	;'N'
   206  000661  48                 	db	72	;'H'
   207  000662  4F                 	db	79	;'O'
   208  000663  20                 	db	32
   209  000664  45                 	db	69	;'E'
   210  000665  43                 	db	67	;'C'
   211  000666  4F                 	db	79	;'O'
   212  000667  4E                 	db	78	;'N'
   213  000668  4F                 	db	79	;'O'
   214  000669  4D                 	db	77	;'M'
   215  00066A  49                 	db	73	;'I'
   216  00066B  43                 	db	67	;'C'
   217  00066C  4F                 	db	79	;'O'
   218  00066D  00                 	db	0
   219  00066E                     STR_2:
   220  00066E  20                 	db	32
   221  00066F  53                 	db	83	;'S'
   222  000670  20                 	db	32
   223  000671  50                 	db	80	;'P'
   224  000672  41                 	db	65	;'A'
   225  000673  52                 	db	82	;'R'
   226  000674  41                 	db	65	;'A'
   227  000675  20                 	db	32
   228  000676  43                 	db	67	;'C'
   229  000677  4F                 	db	79	;'O'
   230  000678  4D                 	db	77	;'M'
   231  000679  45                 	db	69	;'E'
   232  00067A  43                 	db	67	;'C'
   233  00067B  41                 	db	65	;'A'
   234  00067C  52                 	db	82	;'R'
   235  00067D  00                 	db	0
   236  00067E                     STR_3:
   237  00067E  42                 	db	66	;'B'
   238  00067F  41                 	db	65	;'A'
   239  000680  4E                 	db	78	;'N'
   240  000681  48                 	db	72	;'H'
   241  000682  4F                 	db	79	;'O'
   242  000683  20                 	db	32
   243  000684  49                 	db	73	;'I'
   244  000685  4E                 	db	78	;'N'
   245  000686  49                 	db	73	;'I'
   246  000687  43                 	db	67	;'C'
   247  000688  49                 	db	73	;'I'
   248  000689  41                 	db	65	;'A'
   249  00068A  44                 	db	68	;'D'
   250  00068B  4F                 	db	79	;'O'
   251  00068C  00                 	db	0
   252  00068D  00                 	db	0	; dummy byte at the end
   253  0000                     
   254                           ; #config settings
   255                           
   256                           	psect	cinit
   257  001C94                     __pcinit:
   258                           	callstack 0
   259  001C94                     start_initialization:
   260                           	callstack 0
   261  001C94                     __initialization:
   262                           	callstack 0
   263                           
   264                           ; Clear objects allocated to COMRAM (18 bytes)
   265  001C94  EE00  F01E         	lfsr	0,__pbssCOMRAM
   266  001C98  0E12               	movlw	18
   267  001C9A                     clear_0:
   268  001C9A  6AEE               	clrf	postinc0,c
   269  001C9C  06E8               	decf	wreg,f,c
   270  001C9E  E1FD               	bnz	clear_0
   271  001CA0                     end_of_initialization:
   272                           	callstack 0
   273  001CA0                     __end_of__initialization:
   274                           	callstack 0
   275  001CA0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   276  001CA2  6EF8               	movwf	tblptru,c
   277  001CA4  0100               	movlb	0
   278  001CA6  EF0D  F00B         	goto	_main	;jump to C main() function
   279                           
   280                           	psect	bssCOMRAM
   281  00001E                     __pbssCOMRAM:
   282                           	callstack 0
   283  00001E                     kpDebounce@oldRead:
   284                           	callstack 0
   285  00001E                     	ds	2
   286  000020                     kpDebounce@newRead:
   287                           	callstack 0
   288  000020                     	ds	2
   289  000022                     _keys:
   290                           	callstack 0
   291  000022                     	ds	2
   292  000024                     _Teclado:
   293                           	callstack 0
   294  000024                     	ds	2
   295  000026                     kpDebounce@tempo:
   296                           	callstack 0
   297  000026                     	ds	1
   298  000027                     _v3:
   299                           	callstack 0
   300  000027                     	ds	1
   301  000028                     _v2@ssd$F187:
   302                           	callstack 0
   303  000028                     	ds	1
   304  000029                     _v1@ssd$F186:
   305                           	callstack 0
   306  000029                     	ds	1
   307  00002A                     _v0@ssd$F185:
   308                           	callstack 0
   309  00002A                     	ds	1
   310  00002B                     _display@ssd$F184:
   311                           	callstack 0
   312  00002B                     	ds	1
   313  00002C                     _v2:
   314                           	callstack 0
   315  00002C                     	ds	1
   316  00002D                     _v1:
   317                           	callstack 0
   318  00002D                     	ds	1
   319  00002E                     _v0:
   320                           	callstack 0
   321  00002E                     	ds	1
   322  00002F                     _display:
   323                           	callstack 0
   324  00002F                     	ds	1
   325                           
   326                           	psect	cstackCOMRAM
   327  000001                     __pcstackCOMRAM:
   328                           	callstack 0
   329  000001                     ??_kpReadKey:
   330  000001                     ?_digitalRead:
   331                           	callstack 0
   332  000001                     ?___awdiv:
   333                           	callstack 0
   334  000001                     ?___fladd:
   335                           	callstack 0
   336  000001                     digitalWrite@pin:
   337                           	callstack 0
   338  000001                     digitalRead@pin:
   339                           	callstack 0
   340  000001                     pinMode@pin:
   341                           	callstack 0
   342  000001                     delayMicro@a:
   343                           	callstack 0
   344  000001                     delayMili@a:
   345                           	callstack 0
   346  000001                     ___awdiv@dividend:
   347                           	callstack 0
   348  000001                     ___flge@ff1:
   349                           	callstack 0
   350  000001                     ___fladd@b:
   351                           	callstack 0
   352                           
   353                           ; 4 bytes @ 0x0
   354  000001                     	ds	2
   355  000003                     ??_digitalRead:
   356  000003                     ??_delayMili:
   357  000003                     digitalWrite@value:
   358                           	callstack 0
   359  000003                     pinMode@type:
   360                           	callstack 0
   361  000003                     ___awdiv@divisor:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x2
   365  000003                     	ds	1
   366  000004                     delayMili@i:
   367                           	callstack 0
   368  000004                     kpReadKey@i:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x3
   372  000004                     	ds	1
   373  000005                     ??_digitalWrite:
   374  000005                     ??_pinMode:
   375  000005                     ___awdiv@counter:
   376                           	callstack 0
   377  000005                     ___flge@ff2:
   378                           	callstack 0
   379  000005                     ___fladd@a:
   380                           	callstack 0
   381                           
   382                           ; 4 bytes @ 0x4
   383  000005                     	ds	1
   384  000006                     ___awdiv@sign:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x5
   388  000006                     	ds	1
   389  000007                     soWrite@value:
   390                           	callstack 0
   391  000007                     ___awdiv@quotient:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x6
   395  000007                     	ds	2
   396  000009                     ??___fladd:
   397  000009                     ??___flge:
   398  000009                     ?___awmod:
   399                           	callstack 0
   400  000009                     soWrite@i:
   401                           	callstack 0
   402  000009                     ___awmod@dividend:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x8
   406  000009                     	ds	1
   407  00000A                     ??_kpDebounce:
   408  00000A                     pushNibble@rs:
   409                           	callstack 0
   410  00000A                     pushByte@rs:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x9
   414  00000A                     	ds	1
   415  00000B                     ___awmod@divisor:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0xA
   419  00000B                     	ds	1
   420  00000C                     ??_pushByte:
   421  00000C                     pushNibble@value:
   422                           	callstack 0
   423                           
   424                           ; 1 bytes @ 0xB
   425  00000C                     	ds	1
   426  00000D                     pushByte@value:
   427                           	callstack 0
   428  00000D                     ___awmod@counter:
   429                           	callstack 0
   430  00000D                     ___fladd@signs:
   431                           	callstack 0
   432  00000D                     kpDebounce@i:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0xC
   436  00000D                     	ds	1
   437  00000E                     lcdCommand@value:
   438                           	callstack 0
   439  00000E                     lcdChar@value:
   440                           	callstack 0
   441  00000E                     ___awmod@sign:
   442                           	callstack 0
   443  00000E                     ___fladd@aexp:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0xD
   447  00000E                     	ds	1
   448  00000F                     ___fladd@bexp:
   449                           	callstack 0
   450  00000F                     lcdString@msg:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0xE
   454  00000F                     	ds	1
   455  000010                     ___fladd@grs:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0xF
   459  000010                     	ds	1
   460  000011                     ??_lcdString:
   461  000011                     cronometro@contador:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x10
   465  000011                     	ds	2
   466  000013                     ??_cronometro:
   467  000013                     lcdString@i:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x12
   471  000013                     	ds	2
   472  000015                     cronometro@tempo:
   473                           	callstack 0
   474                           
   475                           ; 4 bytes @ 0x14
   476  000015                     	ds	4
   477  000019                     cronometro@cont:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x18
   481  000019                     	ds	2
   482  00001B                     ??_main:
   483                           
   484                           ; 1 bytes @ 0x1A
   485  00001B                     	ds	2
   486  00001D                     main@tecla:
   487                           	callstack 0
   488                           
   489                           ; 1 bytes @ 0x1C
   490  00001D                     	ds	1
   491                           
   492 ;;
   493 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   494 ;;
   495 ;; *************** function _main *****************
   496 ;; Defined at:
   497 ;;		line 57 in file "newmain.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;		None
   500 ;; Auto vars:     Size  Location     Type
   501 ;;  tecla           1   28[COMRAM] unsigned char 
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      void 
   504 ;; Registers used:
   505 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   506 ;; Tracked objects:
   507 ;;		On entry : 0/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   511 ;;      Params:         0       0       0       0       0       0       0
   512 ;;      Locals:         1       0       0       0       0       0       0
   513 ;;      Temps:          2       0       0       0       0       0       0
   514 ;;      Totals:         3       0       0       0       0       0       0
   515 ;;Total ram usage:        3 bytes
   516 ;; Hardware stack levels required when called: 6
   517 ;; This function calls:
   518 ;;		_cronometro
   519 ;;		_kpDebounce
   520 ;;		_kpInit
   521 ;;		_kpReadKey
   522 ;;		_lcdCommand
   523 ;;		_lcdInit
   524 ;;		_lcdString
   525 ;;		_ssdInit
   526 ;; This function is called by:
   527 ;;		Startup code after reset
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531                           	psect	text0
   532  00161A                     __ptext0:
   533                           	callstack 0
   534  00161A                     _main:
   535                           	callstack 25
   536  00161A                     
   537                           ;newmain.c: 58:     lcdInit();
   538  00161A  ECE6  F00B         	call	_lcdInit	;wreg free
   539                           
   540                           ;newmain.c: 59:     kpInit();
   541  00161E  ECBE  F00D         	call	_kpInit	;wreg free
   542                           
   543                           ;newmain.c: 60:     ssdInit();
   544  001622  EC01  F00D         	call	_ssdInit	;wreg free
   545  001626                     
   546                           ;newmain.c: 62:     unsigned char tecla = 0;
   547  001626  0E00               	movlw	0
   548  001628  6E1D               	movwf	main@tecla^0,c
   549  00162A                     l2302:
   550                           
   551                           ;newmain.c: 64:         PORTD = 0b00000010;
   552  00162A  0E02               	movlw	2
   553  00162C  6E83               	movwf	131,c	;volatile
   554                           
   555                           ;newmain.c: 65:         lcdCommand(0x80);
   556  00162E  0E80               	movlw	128
   557  001630  EC3B  F00E         	call	_lcdCommand
   558  001634                     
   559                           ;newmain.c: 66:         lcdString("BANHO ECONOMICO");
   560  001634  0E5E               	movlw	low STR_1
   561  001636  6E0F               	movwf	lcdString@msg^0,c
   562  001638  0E06               	movlw	high STR_1
   563  00163A  6E10               	movwf	(lcdString@msg+1)^0,c
   564  00163C  EC2C  F00D         	call	_lcdString	;wreg free
   565  001640                     
   566                           ;newmain.c: 67:         lcdCommand(0xC0);
   567  001640  0EC0               	movlw	192
   568  001642  EC3B  F00E         	call	_lcdCommand
   569                           
   570                           ;newmain.c: 68:         lcdString(" S PARA COMECAR");
   571  001646  0E6E               	movlw	low STR_2
   572  001648  6E0F               	movwf	lcdString@msg^0,c
   573  00164A  0E06               	movlw	high STR_2
   574  00164C  6E10               	movwf	(lcdString@msg+1)^0,c
   575  00164E  EC2C  F00D         	call	_lcdString	;wreg free
   576  001652                     
   577                           ;newmain.c: 69:         kpDebounce();
   578  001652  ECF0  F009         	call	_kpDebounce	;wreg free
   579  001656                     
   580                           ;newmain.c: 70:         if (kpReadKey() != tecla) {
   581  001656  EC98  F00C         	call	_kpReadKey	;wreg free
   582  00165A  181D               	xorwf	main@tecla^0,w,c
   583  00165C  B4D8               	btfsc	status,2,c
   584  00165E  EF33  F00B         	goto	u2531
   585  001662  EF35  F00B         	goto	u2530
   586  001666                     u2531:
   587  001666  EF15  F00B         	goto	l2302
   588  00166A                     u2530:
   589  00166A                     
   590                           ;newmain.c: 71:             tecla = kpReadKey();
   591  00166A  EC98  F00C         	call	_kpReadKey	;wreg free
   592  00166E  6E1D               	movwf	main@tecla^0,c
   593                           
   594                           ;newmain.c: 72:             switch(tecla){
   595  001670  EF71  F00B         	goto	l2340
   596  001674                     l2314:
   597                           
   598                           ;newmain.c: 74:                     tecla = 0;
   599  001674  0E00               	movlw	0
   600  001676  6E1D               	movwf	main@tecla^0,c
   601  001678                     
   602                           ;newmain.c: 75:                     lcdCommand(0x80);
   603  001678  0E80               	movlw	128
   604  00167A  EC3B  F00E         	call	_lcdCommand
   605  00167E                     
   606                           ;newmain.c: 76:                     lcdString("BANHO INICIADO");
   607  00167E  0E7E               	movlw	low STR_3
   608  001680  6E0F               	movwf	lcdString@msg^0,c
   609  001682  0E06               	movlw	high STR_3
   610  001684  6E10               	movwf	(lcdString@msg+1)^0,c
   611  001686  EC2C  F00D         	call	_lcdString	;wreg free
   612  00168A                     
   613                           ;newmain.c: 77:                     lcdCommand(0xC0);
   614  00168A  0EC0               	movlw	192
   615  00168C  EC3B  F00E         	call	_lcdCommand
   616  001690                     
   617                           ;newmain.c: 78:                     lcdString("TEMPO RESTANTE =");
   618  001690  0E2B               	movlw	low STR_4
   619  001692  6E0F               	movwf	lcdString@msg^0,c
   620  001694  0E06               	movlw	high STR_4
   621  001696  6E10               	movwf	(lcdString@msg+1)^0,c
   622  001698  EC2C  F00D         	call	_lcdString	;wreg free
   623  00169C                     
   624                           ;newmain.c: 79:                     cronometro(6100);
   625  00169C  0E17               	movlw	23
   626  00169E  6E12               	movwf	(cronometro@contador+1)^0,c
   627  0016A0  0ED4               	movlw	212
   628  0016A2  6E11               	movwf	cronometro@contador^0,c
   629  0016A4  ECA7  F005         	call	_cronometro	;wreg free
   630  0016A8                     
   631                           ;newmain.c: 80:                     lcdCommand(0x80);
   632  0016A8  0E80               	movlw	128
   633  0016AA  EC3B  F00E         	call	_lcdCommand
   634  0016AE                     
   635                           ;newmain.c: 81:                     lcdString("BANHO FINALIZADO");
   636  0016AE  0E3C               	movlw	low STR_5
   637  0016B0  6E0F               	movwf	lcdString@msg^0,c
   638  0016B2  0E06               	movlw	high STR_5
   639  0016B4  6E10               	movwf	(lcdString@msg+1)^0,c
   640  0016B6  EC2C  F00D         	call	_lcdString	;wreg free
   641  0016BA                     
   642                           ;newmain.c: 82:                     lcdCommand(0xC0);
   643  0016BA  0EC0               	movlw	192
   644  0016BC  EC3B  F00E         	call	_lcdCommand
   645  0016C0                     
   646                           ;newmain.c: 83:                     lcdString("AGUARDE 1 MINUTO");
   647  0016C0  0E4D               	movlw	low STR_6
   648  0016C2  6E0F               	movwf	lcdString@msg^0,c
   649  0016C4  0E06               	movlw	high STR_6
   650  0016C6  6E10               	movwf	(lcdString@msg+1)^0,c
   651  0016C8  EC2C  F00D         	call	_lcdString	;wreg free
   652  0016CC                     
   653                           ;newmain.c: 84:                     cronometro(6100);
   654  0016CC  0E17               	movlw	23
   655  0016CE  6E12               	movwf	(cronometro@contador+1)^0,c
   656  0016D0  0ED4               	movlw	212
   657  0016D2  6E11               	movwf	cronometro@contador^0,c
   658  0016D4  ECA7  F005         	call	_cronometro	;wreg free
   659  0016D8                     
   660                           ;newmain.c: 85:                     lcdCommand(0x01);
   661  0016D8  0E01               	movlw	1
   662  0016DA  EC3B  F00E         	call	_lcdCommand
   663                           
   664                           ;newmain.c: 86:                     break;
   665  0016DE  EF15  F00B         	goto	l2302
   666  0016E2                     l2340:
   667  0016E2  501D               	movf	main@tecla^0,w,c
   668  0016E4  6E1B               	movwf	??_main^0,c
   669  0016E6  6A1C               	clrf	(??_main+1)^0,c
   670                           
   671                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   672                           ; Switch size 1, requested type "simple"
   673                           ; Number of cases is 1, Range of values is 0 to 0
   674                           ; switch strategies available:
   675                           ; Name         Instructions Cycles
   676                           ; simple_byte            4     3 (average)
   677                           ;	Chosen strategy is simple_byte
   678  0016E8  501C               	movf	(??_main+1)^0,w,c
   679  0016EA  0A00               	xorlw	0	; case 0
   680  0016EC  B4D8               	btfsc	status,2,c
   681  0016EE  EF7B  F00B         	goto	l2404
   682  0016F2  EF15  F00B         	goto	l2302
   683  0016F6                     l2404:
   684                           
   685                           ; Switch size 1, requested type "simple"
   686                           ; Number of cases is 1, Range of values is 83 to 83
   687                           ; switch strategies available:
   688                           ; Name         Instructions Cycles
   689                           ; simple_byte            4     3 (average)
   690                           ;	Chosen strategy is simple_byte
   691  0016F6  501B               	movf	??_main^0,w,c
   692  0016F8  0A53               	xorlw	83	; case 83
   693  0016FA  B4D8               	btfsc	status,2,c
   694  0016FC  EF3A  F00B         	goto	l2314
   695  001700  EF15  F00B         	goto	l2302
   696  001704  EF00  F000         	goto	start
   697  001708                     __end_of_main:
   698                           	callstack 0
   699                           
   700 ;; *************** function _ssdInit *****************
   701 ;; Defined at:
   702 ;;		line 94 in file "ssd.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;		None
   705 ;; Auto vars:     Size  Location     Type
   706 ;;		None
   707 ;; Return value:  Size  Location     Type
   708 ;;                  1    wreg      void 
   709 ;; Registers used:
   710 ;;		wreg, status,2, status,0, cstack
   711 ;; Tracked objects:
   712 ;;		On entry : 0/0
   713 ;;		On exit  : 0/0
   714 ;;		Unchanged: 0/0
   715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   716 ;;      Params:         0       0       0       0       0       0       0
   717 ;;      Locals:         0       0       0       0       0       0       0
   718 ;;      Temps:          0       0       0       0       0       0       0
   719 ;;      Totals:         0       0       0       0       0       0       0
   720 ;;Total ram usage:        0 bytes
   721 ;; Hardware stack levels used: 1
   722 ;; Hardware stack levels required when called: 2
   723 ;; This function calls:
   724 ;;		_pinMode
   725 ;;		_soInit
   726 ;; This function is called by:
   727 ;;		_main
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           	psect	text1
   732  001A02                     __ptext1:
   733                           	callstack 0
   734  001A02                     _ssdInit:
   735                           	callstack 28
   736  001A02                     
   737                           ;ssd.c: 96:     pinMode(PIN_D0, 0);
   738  001A02  0E00               	movlw	0
   739  001A04  6E02               	movwf	(pinMode@pin+1)^0,c
   740  001A06  0E18               	movlw	24
   741  001A08  6E01               	movwf	pinMode@pin^0,c
   742  001A0A  0E00               	movlw	0
   743  001A0C  6E04               	movwf	(pinMode@type+1)^0,c
   744  001A0E  0E00               	movlw	0
   745  001A10  6E03               	movwf	pinMode@type^0,c
   746  001A12  ECED  F006         	call	_pinMode	;wreg free
   747                           
   748                           ;ssd.c: 97:     pinMode(PIN_D1, 0);
   749  001A16  0E00               	movlw	0
   750  001A18  6E02               	movwf	(pinMode@pin+1)^0,c
   751  001A1A  0E19               	movlw	25
   752  001A1C  6E01               	movwf	pinMode@pin^0,c
   753  001A1E  0E00               	movlw	0
   754  001A20  6E04               	movwf	(pinMode@type+1)^0,c
   755  001A22  0E00               	movlw	0
   756  001A24  6E03               	movwf	pinMode@type^0,c
   757  001A26  ECED  F006         	call	_pinMode	;wreg free
   758                           
   759                           ;ssd.c: 98:     pinMode(PIN_D2, 0);
   760  001A2A  0E00               	movlw	0
   761  001A2C  6E02               	movwf	(pinMode@pin+1)^0,c
   762  001A2E  0E1A               	movlw	26
   763  001A30  6E01               	movwf	pinMode@pin^0,c
   764  001A32  0E00               	movlw	0
   765  001A34  6E04               	movwf	(pinMode@type+1)^0,c
   766  001A36  0E00               	movlw	0
   767  001A38  6E03               	movwf	pinMode@type^0,c
   768  001A3A  ECED  F006         	call	_pinMode	;wreg free
   769                           
   770                           ;ssd.c: 99:     pinMode(PIN_D3, 0);
   771  001A3E  0E00               	movlw	0
   772  001A40  6E02               	movwf	(pinMode@pin+1)^0,c
   773  001A42  0E1B               	movlw	27
   774  001A44  6E01               	movwf	pinMode@pin^0,c
   775  001A46  0E00               	movlw	0
   776  001A48  6E04               	movwf	(pinMode@type+1)^0,c
   777  001A4A  0E00               	movlw	0
   778  001A4C  6E03               	movwf	pinMode@type^0,c
   779  001A4E  ECED  F006         	call	_pinMode	;wreg free
   780                           
   781                           ;ssd.c: 102:     soInit();
   782  001A52  EC9F  F00D         	call	_soInit	;wreg free
   783  001A56  0012               	return		;funcret
   784  001A58                     __end_of_ssdInit:
   785                           	callstack 0
   786                           
   787 ;; *************** function _lcdString *****************
   788 ;; Defined at:
   789 ;;		line 57 in file "lcd.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;  msg             2   14[COMRAM] PTR unsigned char 
   792 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(15), 
   793 ;;		 -> STR_2(16), STR_1(16), 
   794 ;; Auto vars:     Size  Location     Type
   795 ;;  i               2   18[COMRAM] int 
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   805 ;;      Params:         2       0       0       0       0       0       0
   806 ;;      Locals:         2       0       0       0       0       0       0
   807 ;;      Temps:          2       0       0       0       0       0       0
   808 ;;      Totals:         6       0       0       0       0       0       0
   809 ;;Total ram usage:        6 bytes
   810 ;; Hardware stack levels used: 1
   811 ;; Hardware stack levels required when called: 5
   812 ;; This function calls:
   813 ;;		_lcdChar
   814 ;; This function is called by:
   815 ;;		_main
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           	psect	text2
   820  001A58                     __ptext2:
   821                           	callstack 0
   822  001A58                     _lcdString:
   823                           	callstack 25
   824  001A58                     
   825                           ;lcd.c: 58:  int i = 0;
   826  001A58  0E00               	movlw	0
   827  001A5A  6E14               	movwf	(lcdString@i+1)^0,c
   828  001A5C  0E00               	movlw	0
   829  001A5E  6E13               	movwf	lcdString@i^0,c
   830                           
   831                           ;lcd.c: 59:  while (msg[i] != 0) {
   832  001A60  EF42  F00D         	goto	l2268
   833  001A64                     l2264:
   834                           
   835                           ;lcd.c: 60:   lcdChar(msg[i]);
   836  001A64  5013               	movf	lcdString@i^0,w,c
   837  001A66  240F               	addwf	lcdString@msg^0,w,c
   838  001A68  6E11               	movwf	??_lcdString^0,c
   839  001A6A  5014               	movf	(lcdString@i+1)^0,w,c
   840  001A6C  2010               	addwfc	(lcdString@msg+1)^0,w,c
   841  001A6E  6E12               	movwf	(??_lcdString+1)^0,c
   842  001A70  C011  FFF6         	movff	??_lcdString,tblptrl
   843  001A74  C012  FFF7         	movff	??_lcdString+1,tblptrh
   844  001A78                     	if	0	;tblptru may be non-zero
   845  001A78                     	endif
   846  001A78                     	if	0	;tblptru may be non-zero
   847  001A78                     	endif
   848  001A78  0008               	tblrd		*
   849  001A7A  50F5               	movf	tablat,w,c
   850  001A7C  EC2C  F00E         	call	_lcdChar
   851  001A80                     
   852                           ;lcd.c: 61:   i++;
   853  001A80  4A13               	infsnz	lcdString@i^0,f,c
   854  001A82  2A14               	incf	(lcdString@i+1)^0,f,c
   855  001A84                     l2268:
   856                           
   857                           ;lcd.c: 59:  while (msg[i] != 0) {
   858  001A84  5013               	movf	lcdString@i^0,w,c
   859  001A86  240F               	addwf	lcdString@msg^0,w,c
   860  001A88  6E11               	movwf	??_lcdString^0,c
   861  001A8A  5014               	movf	(lcdString@i+1)^0,w,c
   862  001A8C  2010               	addwfc	(lcdString@msg+1)^0,w,c
   863  001A8E  6E12               	movwf	(??_lcdString+1)^0,c
   864  001A90  C011  FFF6         	movff	??_lcdString,tblptrl
   865  001A94  C012  FFF7         	movff	??_lcdString+1,tblptrh
   866  001A98                     	if	0	;tblptru may be non-zero
   867  001A98                     	endif
   868  001A98                     	if	0	;tblptru may be non-zero
   869  001A98                     	endif
   870  001A98  0008               	tblrd		*
   871  001A9A  50F5               	movf	tablat,w,c
   872  001A9C  0900               	iorlw	0
   873  001A9E  A4D8               	btfss	status,2,c
   874  001AA0  EF54  F00D         	goto	u2441
   875  001AA4  EF56  F00D         	goto	u2440
   876  001AA8                     u2441:
   877  001AA8  EF32  F00D         	goto	l2264
   878  001AAC                     u2440:
   879  001AAC  0012               	return		;funcret
   880  001AAE                     __end_of_lcdString:
   881                           	callstack 0
   882                           
   883 ;; *************** function _lcdChar *****************
   884 ;; Defined at:
   885 ;;		line 52 in file "lcd.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  value           1    wreg     unsigned char 
   888 ;; Auto vars:     Size  Location     Type
   889 ;;  value           1   13[COMRAM] unsigned char 
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      void 
   892 ;; Registers used:
   893 ;;		wreg, status,2, status,0, cstack
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   899 ;;      Params:         0       0       0       0       0       0       0
   900 ;;      Locals:         1       0       0       0       0       0       0
   901 ;;      Temps:          0       0       0       0       0       0       0
   902 ;;      Totals:         1       0       0       0       0       0       0
   903 ;;Total ram usage:        1 bytes
   904 ;; Hardware stack levels used: 1
   905 ;; Hardware stack levels required when called: 4
   906 ;; This function calls:
   907 ;;		_delayMicro
   908 ;;		_pushByte
   909 ;; This function is called by:
   910 ;;		_lcdString
   911 ;;		_lcdNumber
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text3
   916  001C58                     __ptext3:
   917                           	callstack 0
   918  001C58                     _lcdChar:
   919                           	callstack 25
   920                           
   921                           ;incstack = 0
   922                           ;lcdChar@value stored from wreg
   923  001C58  6E0E               	movwf	lcdChar@value^0,c
   924  001C5A                     
   925                           ;lcd.c: 53:  pushByte(value, 1);
   926  001C5A  0E00               	movlw	0
   927  001C5C  6E0B               	movwf	(pushByte@rs+1)^0,c
   928  001C5E  0E01               	movlw	1
   929  001C60  6E0A               	movwf	pushByte@rs^0,c
   930  001C62  500E               	movf	lcdChar@value^0,w,c
   931  001C64  ECD4  F00C         	call	_pushByte
   932  001C68                     
   933                           ;lcd.c: 54:  delayMicro(80);
   934  001C68  0E00               	movlw	0
   935  001C6A  6E02               	movwf	(delayMicro@a+1)^0,c
   936  001C6C  0E50               	movlw	80
   937  001C6E  6E01               	movwf	delayMicro@a^0,c
   938  001C70  EC55  F00E         	call	_delayMicro	;wreg free
   939  001C74  0012               	return		;funcret
   940  001C76                     __end_of_lcdChar:
   941                           	callstack 0
   942                           
   943 ;; *************** function _lcdInit *****************
   944 ;; Defined at:
   945 ;;		line 72 in file "lcd.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;		None
   948 ;; Auto vars:     Size  Location     Type
   949 ;;		None
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      void 
   952 ;; Registers used:
   953 ;;		wreg, status,2, status,0, cstack
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   959 ;;      Params:         0       0       0       0       0       0       0
   960 ;;      Locals:         0       0       0       0       0       0       0
   961 ;;      Temps:          0       0       0       0       0       0       0
   962 ;;      Totals:         0       0       0       0       0       0       0
   963 ;;Total ram usage:        0 bytes
   964 ;; Hardware stack levels used: 1
   965 ;; Hardware stack levels required when called: 5
   966 ;; This function calls:
   967 ;;		_delayMicro
   968 ;;		_delayMili
   969 ;;		_lcdCommand
   970 ;;		_pinMode
   971 ;;		_pushNibble
   972 ;;		_soInit
   973 ;; This function is called by:
   974 ;;		_main
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           	psect	text4
   979  0017CC                     __ptext4:
   980                           	callstack 0
   981  0017CC                     _lcdInit:
   982                           	callstack 25
   983  0017CC                     
   984                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
   985  0017CC  0E00               	movlw	0
   986  0017CE  6E02               	movwf	(pinMode@pin+1)^0,c
   987  0017D0  0E1C               	movlw	28
   988  0017D2  6E01               	movwf	pinMode@pin^0,c
   989  0017D4  0E00               	movlw	0
   990  0017D6  6E04               	movwf	(pinMode@type+1)^0,c
   991  0017D8  0E00               	movlw	0
   992  0017DA  6E03               	movwf	pinMode@type^0,c
   993  0017DC  ECED  F006         	call	_pinMode	;wreg free
   994                           
   995                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
   996  0017E0  0E00               	movlw	0
   997  0017E2  6E02               	movwf	(pinMode@pin+1)^0,c
   998  0017E4  0E1D               	movlw	29
   999  0017E6  6E01               	movwf	pinMode@pin^0,c
  1000  0017E8  0E00               	movlw	0
  1001  0017EA  6E04               	movwf	(pinMode@type+1)^0,c
  1002  0017EC  0E00               	movlw	0
  1003  0017EE  6E03               	movwf	pinMode@type^0,c
  1004  0017F0  ECED  F006         	call	_pinMode	;wreg free
  1005                           
  1006                           ;lcd.c: 75:  soInit();
  1007  0017F4  EC9F  F00D         	call	_soInit	;wreg free
  1008                           
  1009                           ;lcd.c: 76:  delayMili(15);
  1010  0017F8  0E00               	movlw	0
  1011  0017FA  6E02               	movwf	(delayMili@a+1)^0,c
  1012  0017FC  0E0F               	movlw	15
  1013  0017FE  6E01               	movwf	delayMili@a^0,c
  1014  001800  ECD7  F00D         	call	_delayMili	;wreg free
  1015                           
  1016                           ;lcd.c: 78:  pushNibble(0x03, 0);
  1017  001804  0E00               	movlw	0
  1018  001806  6E0B               	movwf	(pushNibble@rs+1)^0,c
  1019  001808  0E00               	movlw	0
  1020  00180A  6E0A               	movwf	pushNibble@rs^0,c
  1021  00180C  0E03               	movlw	3
  1022  00180E  EC19  F00E         	call	_pushNibble
  1023                           
  1024                           ;lcd.c: 79:  delayMili(5);
  1025  001812  0E00               	movlw	0
  1026  001814  6E02               	movwf	(delayMili@a+1)^0,c
  1027  001816  0E05               	movlw	5
  1028  001818  6E01               	movwf	delayMili@a^0,c
  1029  00181A  ECD7  F00D         	call	_delayMili	;wreg free
  1030                           
  1031                           ;lcd.c: 80:  pushNibble(0x03, 0);
  1032  00181E  0E00               	movlw	0
  1033  001820  6E0B               	movwf	(pushNibble@rs+1)^0,c
  1034  001822  0E00               	movlw	0
  1035  001824  6E0A               	movwf	pushNibble@rs^0,c
  1036  001826  0E03               	movlw	3
  1037  001828  EC19  F00E         	call	_pushNibble
  1038  00182C                     
  1039                           ;lcd.c: 81:  delayMicro(160);
  1040  00182C  0E00               	movlw	0
  1041  00182E  6E02               	movwf	(delayMicro@a+1)^0,c
  1042  001830  0EA0               	movlw	160
  1043  001832  6E01               	movwf	delayMicro@a^0,c
  1044  001834  EC55  F00E         	call	_delayMicro	;wreg free
  1045  001838                     
  1046                           ;lcd.c: 82:  pushNibble(0x03, 0);
  1047  001838  0E00               	movlw	0
  1048  00183A  6E0B               	movwf	(pushNibble@rs+1)^0,c
  1049  00183C  0E00               	movlw	0
  1050  00183E  6E0A               	movwf	pushNibble@rs^0,c
  1051  001840  0E03               	movlw	3
  1052  001842  EC19  F00E         	call	_pushNibble
  1053                           
  1054                           ;lcd.c: 83:  delayMicro(160);
  1055  001846  0E00               	movlw	0
  1056  001848  6E02               	movwf	(delayMicro@a+1)^0,c
  1057  00184A  0EA0               	movlw	160
  1058  00184C  6E01               	movwf	delayMicro@a^0,c
  1059  00184E  EC55  F00E         	call	_delayMicro	;wreg free
  1060  001852                     
  1061                           ;lcd.c: 85:  pushNibble(0x02, 0);
  1062  001852  0E00               	movlw	0
  1063  001854  6E0B               	movwf	(pushNibble@rs+1)^0,c
  1064  001856  0E00               	movlw	0
  1065  001858  6E0A               	movwf	pushNibble@rs^0,c
  1066  00185A  0E02               	movlw	2
  1067  00185C  EC19  F00E         	call	_pushNibble
  1068  001860                     
  1069                           ;lcd.c: 86:  delayMili(10);
  1070  001860  0E00               	movlw	0
  1071  001862  6E02               	movwf	(delayMili@a+1)^0,c
  1072  001864  0E0A               	movlw	10
  1073  001866  6E01               	movwf	delayMili@a^0,c
  1074  001868  ECD7  F00D         	call	_delayMili	;wreg free
  1075  00186C                     
  1076                           ;lcd.c: 88:  lcdCommand(0x28);
  1077  00186C  0E28               	movlw	40
  1078  00186E  EC3B  F00E         	call	_lcdCommand
  1079  001872                     
  1080                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  1081  001872  0E0C               	movlw	12
  1082  001874  EC3B  F00E         	call	_lcdCommand
  1083  001878                     
  1084                           ;lcd.c: 90:  lcdCommand(0x01);
  1085  001878  0E01               	movlw	1
  1086  00187A  EC3B  F00E         	call	_lcdCommand
  1087  00187E  0012               	return		;funcret
  1088  001880                     __end_of_lcdInit:
  1089                           	callstack 0
  1090                           
  1091 ;; *************** function _pushNibble *****************
  1092 ;; Defined at:
  1093 ;;		line 25 in file "lcd.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;  value           1    wreg     unsigned char 
  1096 ;;  rs              2    9[COMRAM] int 
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;  value           1   11[COMRAM] unsigned char 
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      void 
  1101 ;; Registers used:
  1102 ;;		wreg, status,2, status,0, cstack
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1108 ;;      Params:         2       0       0       0       0       0       0
  1109 ;;      Locals:         1       0       0       0       0       0       0
  1110 ;;      Temps:          0       0       0       0       0       0       0
  1111 ;;      Totals:         3       0       0       0       0       0       0
  1112 ;;Total ram usage:        3 bytes
  1113 ;; Hardware stack levels used: 1
  1114 ;; Hardware stack levels required when called: 3
  1115 ;; This function calls:
  1116 ;;		_digitalWrite
  1117 ;;		_pulseEnablePin
  1118 ;;		_soWrite
  1119 ;; This function is called by:
  1120 ;;		_lcdInit
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           	psect	text5
  1125  001C32                     __ptext5:
  1126                           	callstack 0
  1127  001C32                     _pushNibble:
  1128                           	callstack 26
  1129                           
  1130                           ;incstack = 0
  1131                           ;pushNibble@value stored from wreg
  1132  001C32  6E0C               	movwf	pushNibble@value^0,c
  1133  001C34                     
  1134                           ;lcd.c: 26:  soWrite(value);
  1135  001C34  C00C  F007         	movff	pushNibble@value,soWrite@value
  1136  001C38  6A08               	clrf	(soWrite@value+1)^0,c
  1137  001C3A  EC57  F00D         	call	_soWrite	;wreg free
  1138                           
  1139                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  1140  001C3E  0E00               	movlw	0
  1141  001C40  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1142  001C42  0E1D               	movlw	29
  1143  001C44  6E01               	movwf	digitalWrite@pin^0,c
  1144  001C46  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  1145  001C4A  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  1146  001C4E  EC14  F008         	call	_digitalWrite	;wreg free
  1147                           
  1148                           ;lcd.c: 28:  pulseEnablePin();
  1149  001C52  EC7E  F00D         	call	_pulseEnablePin	;wreg free
  1150  001C56  0012               	return		;funcret
  1151  001C58                     __end_of_pushNibble:
  1152                           	callstack 0
  1153                           
  1154 ;; *************** function _lcdCommand *****************
  1155 ;; Defined at:
  1156 ;;		line 40 in file "lcd.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;  value           1    wreg     unsigned char 
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;  value           1   13[COMRAM] unsigned char 
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg, status,2, status,0, cstack
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1170 ;;      Params:         0       0       0       0       0       0       0
  1171 ;;      Locals:         1       0       0       0       0       0       0
  1172 ;;      Temps:          0       0       0       0       0       0       0
  1173 ;;      Totals:         1       0       0       0       0       0       0
  1174 ;;Total ram usage:        1 bytes
  1175 ;; Hardware stack levels used: 1
  1176 ;; Hardware stack levels required when called: 4
  1177 ;; This function calls:
  1178 ;;		_delayMili
  1179 ;;		_pushByte
  1180 ;; This function is called by:
  1181 ;;		_main
  1182 ;;		_lcdInit
  1183 ;;		_lcdPosition
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           	psect	text6
  1188  001C76                     __ptext6:
  1189                           	callstack 0
  1190  001C76                     _lcdCommand:
  1191                           	callstack 25
  1192                           
  1193                           ;incstack = 0
  1194                           ;lcdCommand@value stored from wreg
  1195  001C76  6E0E               	movwf	lcdCommand@value^0,c
  1196  001C78                     
  1197                           ;lcd.c: 41:  pushByte(value, 0);
  1198  001C78  0E00               	movlw	0
  1199  001C7A  6E0B               	movwf	(pushByte@rs+1)^0,c
  1200  001C7C  0E00               	movlw	0
  1201  001C7E  6E0A               	movwf	pushByte@rs^0,c
  1202  001C80  500E               	movf	lcdCommand@value^0,w,c
  1203  001C82  ECD4  F00C         	call	_pushByte
  1204                           
  1205                           ;lcd.c: 42:  delayMili(2);
  1206  001C86  0E00               	movlw	0
  1207  001C88  6E02               	movwf	(delayMili@a+1)^0,c
  1208  001C8A  0E02               	movlw	2
  1209  001C8C  6E01               	movwf	delayMili@a^0,c
  1210  001C8E  ECD7  F00D         	call	_delayMili	;wreg free
  1211  001C92  0012               	return		;funcret
  1212  001C94                     __end_of_lcdCommand:
  1213                           	callstack 0
  1214                           
  1215 ;; *************** function _pushByte *****************
  1216 ;; Defined at:
  1217 ;;		line 31 in file "lcd.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;  value           1    wreg     unsigned char 
  1220 ;;  rs              2    9[COMRAM] int 
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;  value           1   12[COMRAM] unsigned char 
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, status,2, status,0, cstack
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1232 ;;      Params:         2       0       0       0       0       0       0
  1233 ;;      Locals:         1       0       0       0       0       0       0
  1234 ;;      Temps:          1       0       0       0       0       0       0
  1235 ;;      Totals:         4       0       0       0       0       0       0
  1236 ;;Total ram usage:        4 bytes
  1237 ;; Hardware stack levels used: 1
  1238 ;; Hardware stack levels required when called: 3
  1239 ;; This function calls:
  1240 ;;		_digitalWrite
  1241 ;;		_pulseEnablePin
  1242 ;;		_soWrite
  1243 ;; This function is called by:
  1244 ;;		_lcdCommand
  1245 ;;		_lcdChar
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           	psect	text7
  1250  0019A8                     __ptext7:
  1251                           	callstack 0
  1252  0019A8                     _pushByte:
  1253                           	callstack 25
  1254                           
  1255                           ;incstack = 0
  1256                           ;pushByte@value stored from wreg
  1257  0019A8  6E0D               	movwf	pushByte@value^0,c
  1258  0019AA                     
  1259                           ;lcd.c: 32:  soWrite(value >> 4);
  1260  0019AA  C00D  F00C         	movff	pushByte@value,??_pushByte
  1261  0019AE  3A0C               	swapf	??_pushByte^0,f,c
  1262  0019B0  0E0F               	movlw	15
  1263  0019B2  160C               	andwf	??_pushByte^0,f,c
  1264  0019B4  500C               	movf	??_pushByte^0,w,c
  1265  0019B6  6E07               	movwf	soWrite@value^0,c
  1266  0019B8  6A08               	clrf	(soWrite@value+1)^0,c
  1267  0019BA  EC57  F00D         	call	_soWrite	;wreg free
  1268                           
  1269                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  1270  0019BE  0E00               	movlw	0
  1271  0019C0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1272  0019C2  0E1D               	movlw	29
  1273  0019C4  6E01               	movwf	digitalWrite@pin^0,c
  1274  0019C6  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  1275  0019CA  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  1276  0019CE  EC14  F008         	call	_digitalWrite	;wreg free
  1277                           
  1278                           ;lcd.c: 34:  pulseEnablePin();
  1279  0019D2  EC7E  F00D         	call	_pulseEnablePin	;wreg free
  1280                           
  1281                           ;lcd.c: 36:  soWrite(value & 0x0F);
  1282  0019D6  C00D  F00C         	movff	pushByte@value,??_pushByte
  1283  0019DA  0E0F               	movlw	15
  1284  0019DC  160C               	andwf	??_pushByte^0,f,c
  1285  0019DE  500C               	movf	??_pushByte^0,w,c
  1286  0019E0  6E07               	movwf	soWrite@value^0,c
  1287  0019E2  6A08               	clrf	(soWrite@value+1)^0,c
  1288  0019E4  EC57  F00D         	call	_soWrite	;wreg free
  1289                           
  1290                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  1291  0019E8  0E00               	movlw	0
  1292  0019EA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1293  0019EC  0E1D               	movlw	29
  1294  0019EE  6E01               	movwf	digitalWrite@pin^0,c
  1295  0019F0  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  1296  0019F4  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  1297  0019F8  EC14  F008         	call	_digitalWrite	;wreg free
  1298                           
  1299                           ;lcd.c: 38:  pulseEnablePin();
  1300  0019FC  EC7E  F00D         	call	_pulseEnablePin	;wreg free
  1301  001A00  0012               	return		;funcret
  1302  001A02                     __end_of_pushByte:
  1303                           	callstack 0
  1304                           
  1305 ;; *************** function _pulseEnablePin *****************
  1306 ;; Defined at:
  1307 ;;		line 18 in file "lcd.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;		None
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;		None
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, status,2, status,0, cstack
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1321 ;;      Params:         0       0       0       0       0       0       0
  1322 ;;      Locals:         0       0       0       0       0       0       0
  1323 ;;      Temps:          0       0       0       0       0       0       0
  1324 ;;      Totals:         0       0       0       0       0       0       0
  1325 ;;Total ram usage:        0 bytes
  1326 ;; Hardware stack levels used: 1
  1327 ;; Hardware stack levels required when called: 1
  1328 ;; This function calls:
  1329 ;;		_delayMicro
  1330 ;;		_digitalWrite
  1331 ;; This function is called by:
  1332 ;;		_pushNibble
  1333 ;;		_pushByte
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text8
  1338  001AFC                     __ptext8:
  1339                           	callstack 0
  1340  001AFC                     _pulseEnablePin:
  1341                           	callstack 26
  1342  001AFC                     
  1343                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  1344  001AFC  0E00               	movlw	0
  1345  001AFE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1346  001B00  0E1C               	movlw	28
  1347  001B02  6E01               	movwf	digitalWrite@pin^0,c
  1348  001B04  0E00               	movlw	0
  1349  001B06  6E04               	movwf	(digitalWrite@value+1)^0,c
  1350  001B08  0E01               	movlw	1
  1351  001B0A  6E03               	movwf	digitalWrite@value^0,c
  1352  001B0C  EC14  F008         	call	_digitalWrite	;wreg free
  1353  001B10                     
  1354                           ;lcd.c: 20:  delayMicro(5);
  1355  001B10  0E00               	movlw	0
  1356  001B12  6E02               	movwf	(delayMicro@a+1)^0,c
  1357  001B14  0E05               	movlw	5
  1358  001B16  6E01               	movwf	delayMicro@a^0,c
  1359  001B18  EC55  F00E         	call	_delayMicro	;wreg free
  1360  001B1C                     
  1361                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  1362  001B1C  0E00               	movlw	0
  1363  001B1E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1364  001B20  0E1C               	movlw	28
  1365  001B22  6E01               	movwf	digitalWrite@pin^0,c
  1366  001B24  0E00               	movlw	0
  1367  001B26  6E04               	movwf	(digitalWrite@value+1)^0,c
  1368  001B28  0E00               	movlw	0
  1369  001B2A  6E03               	movwf	digitalWrite@value^0,c
  1370  001B2C  EC14  F008         	call	_digitalWrite	;wreg free
  1371                           
  1372                           ;lcd.c: 22:  delayMicro(5);
  1373  001B30  0E00               	movlw	0
  1374  001B32  6E02               	movwf	(delayMicro@a+1)^0,c
  1375  001B34  0E05               	movlw	5
  1376  001B36  6E01               	movwf	delayMicro@a^0,c
  1377  001B38  EC55  F00E         	call	_delayMicro	;wreg free
  1378  001B3C  0012               	return		;funcret
  1379  001B3E                     __end_of_pulseEnablePin:
  1380                           	callstack 0
  1381                           
  1382 ;; *************** function _delayMicro *****************
  1383 ;; Defined at:
  1384 ;;		line 5 in file "lcd.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;  a               2    0[COMRAM] int 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  i               2    0        volatile int 
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      void 
  1391 ;; Registers used:
  1392 ;;		None
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1398 ;;      Params:         2       0       0       0       0       0       0
  1399 ;;      Locals:         0       0       0       0       0       0       0
  1400 ;;      Temps:          0       0       0       0       0       0       0
  1401 ;;      Totals:         2       0       0       0       0       0       0
  1402 ;;Total ram usage:        2 bytes
  1403 ;; Hardware stack levels used: 1
  1404 ;; This function calls:
  1405 ;;		Nothing
  1406 ;; This function is called by:
  1407 ;;		_pulseEnablePin
  1408 ;;		_lcdChar
  1409 ;;		_lcdInit
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           	psect	text9
  1414  001CAA                     __ptext9:
  1415                           	callstack 0
  1416  001CAA                     _delayMicro:
  1417                           	callstack 26
  1418  001CAA  0012               	return		;funcret
  1419  001CAC                     __end_of_delayMicro:
  1420                           	callstack 0
  1421                           
  1422 ;; *************** function _delayMili *****************
  1423 ;; Defined at:
  1424 ;;		line 10 in file "lcd.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;  a               2    0[COMRAM] int 
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;  i               2    3[COMRAM] volatile int 
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      void 
  1431 ;; Registers used:
  1432 ;;		wreg, status,2, status,0
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1438 ;;      Params:         2       0       0       0       0       0       0
  1439 ;;      Locals:         2       0       0       0       0       0       0
  1440 ;;      Temps:          1       0       0       0       0       0       0
  1441 ;;      Totals:         5       0       0       0       0       0       0
  1442 ;;Total ram usage:        5 bytes
  1443 ;; Hardware stack levels used: 1
  1444 ;; This function calls:
  1445 ;;		Nothing
  1446 ;; This function is called by:
  1447 ;;		_lcdCommand
  1448 ;;		_lcdInit
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           	psect	text10
  1453  001BAE                     __ptext10:
  1454                           	callstack 0
  1455  001BAE                     _delayMili:
  1456                           	callstack 28
  1457  001BAE                     
  1458                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  1459  001BAE  0E00               	movlw	0
  1460  001BB0  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  1461  001BB2  0E00               	movlw	0
  1462  001BB4  6E04               	movwf	delayMili@i^0,c	;volatile
  1463  001BB6  EFDF  F00D         	goto	l1836
  1464  001BBA                     l1834:
  1465                           
  1466                           ;lcd.c: 15:  }
  1467  001BBA  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  1468  001BBC  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  1469  001BBE                     l1836:
  1470  001BBE  5001               	movf	delayMili@a^0,w,c
  1471  001BC0  5C04               	subwf	delayMili@i^0,w,c	;volatile
  1472  001BC2  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  1473  001BC4  0A80               	xorlw	128
  1474  001BC6  6E03               	movwf	??_delayMili^0,c
  1475  001BC8  5002               	movf	(delayMili@a+1)^0,w,c
  1476  001BCA  0A80               	xorlw	128
  1477  001BCC  5803               	subwfb	??_delayMili^0,w,c
  1478  001BCE  A0D8               	btfss	status,0,c
  1479  001BD0  EFEC  F00D         	goto	u1741
  1480  001BD4  EFEE  F00D         	goto	u1740
  1481  001BD8                     u1741:
  1482  001BD8  EFDD  F00D         	goto	l1834
  1483  001BDC                     u1740:
  1484  001BDC  0012               	return		;funcret
  1485  001BDE                     __end_of_delayMili:
  1486                           	callstack 0
  1487                           
  1488 ;; *************** function _kpReadKey *****************
  1489 ;; Defined at:
  1490 ;;		line 17 in file "keypad.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;		None
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;  i               2    3[COMRAM] int 
  1495 ;; Return value:  Size  Location     Type
  1496 ;;                  1    wreg      unsigned char 
  1497 ;; Registers used:
  1498 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1504 ;;      Params:         0       0       0       0       0       0       0
  1505 ;;      Locals:         2       0       0       0       0       0       0
  1506 ;;      Temps:          3       0       0       0       0       0       0
  1507 ;;      Totals:         5       0       0       0       0       0       0
  1508 ;;Total ram usage:        5 bytes
  1509 ;; Hardware stack levels used: 1
  1510 ;; This function calls:
  1511 ;;		Nothing
  1512 ;; This function is called by:
  1513 ;;		_main
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           	psect	text11
  1518  001930                     __ptext11:
  1519                           	callstack 0
  1520  001930                     _kpReadKey:
  1521                           	callstack 30
  1522  001930                     
  1523                           ;keypad.c: 18:  int i;;keypad.c: 19:  for(i=0;i<10;i++){
  1524  001930  0E00               	movlw	0
  1525  001932  6E05               	movwf	(kpReadKey@i+1)^0,c
  1526  001934  0E00               	movlw	0
  1527  001936  6E04               	movwf	kpReadKey@i^0,c
  1528  001938                     l1564:
  1529                           
  1530                           ;keypad.c: 20:   if (((keys) & (1<<(i)))){
  1531  001938  C004  F001         	movff	kpReadKey@i,??_kpReadKey
  1532  00193C  0E01               	movlw	1
  1533  00193E  6E02               	movwf	(??_kpReadKey+1)^0,c
  1534  001940  0E00               	movlw	0
  1535  001942  6E03               	movwf	(??_kpReadKey+2)^0,c
  1536  001944  2A01               	incf	??_kpReadKey^0,f,c
  1537  001946  EFA8  F00C         	goto	u1214
  1538  00194A                     u1215:
  1539  00194A  90D8               	bcf	status,0,c
  1540  00194C  3602               	rlcf	(??_kpReadKey+1)^0,f,c
  1541  00194E  3603               	rlcf	(??_kpReadKey+2)^0,f,c
  1542  001950                     u1214:
  1543  001950  2E01               	decfsz	??_kpReadKey^0,f,c
  1544  001952  EFA5  F00C         	goto	u1215
  1545  001956  5022               	movf	_keys^0,w,c
  1546  001958  1602               	andwf	(??_kpReadKey+1)^0,f,c
  1547  00195A  5023               	movf	(_keys+1)^0,w,c
  1548  00195C  1603               	andwf	(??_kpReadKey+2)^0,f,c
  1549  00195E  5002               	movf	(??_kpReadKey+1)^0,w,c
  1550  001960  1003               	iorwf	(??_kpReadKey+2)^0,w,c
  1551  001962  B4D8               	btfsc	status,2,c
  1552  001964  EFB6  F00C         	goto	u1221
  1553  001968  EFB8  F00C         	goto	u1220
  1554  00196C                     u1221:
  1555  00196C  EFC2  F00C         	goto	l1570
  1556  001970                     u1220:
  1557  001970                     
  1558                           ;keypad.c: 21:    return charKey[i];
  1559  001970  0E21               	movlw	low _charKey
  1560  001972  2404               	addwf	kpReadKey@i^0,w,c
  1561  001974  6EF6               	movwf	tblptrl,c
  1562  001976  0E06               	movlw	high _charKey
  1563  001978  2005               	addwfc	(kpReadKey@i+1)^0,w,c
  1564  00197A  6EF7               	movwf	tblptrh,c
  1565  00197C                     	if	0	;There are less than 3 active tblptr bytes
  1566  00197C                     	endif
  1567  00197C  0008               	tblrd		*
  1568  00197E  50F5               	movf	tablat,w,c
  1569  001980  EFD3  F00C         	goto	l266
  1570  001984                     l1570:
  1571                           
  1572                           ;keypad.c: 23:  }
  1573  001984  4A04               	infsnz	kpReadKey@i^0,f,c
  1574  001986  2A05               	incf	(kpReadKey@i+1)^0,f,c
  1575  001988  BE05               	btfsc	(kpReadKey@i+1)^0,7,c
  1576  00198A  EFD0  F00C         	goto	u1231
  1577  00198E  5005               	movf	(kpReadKey@i+1)^0,w,c
  1578  001990  E109               	bnz	u1230
  1579  001992  0E0A               	movlw	10
  1580  001994  5C04               	subwf	kpReadKey@i^0,w,c
  1581  001996  A0D8               	btfss	status,0,c
  1582  001998  EFD0  F00C         	goto	u1231
  1583  00199C  EFD2  F00C         	goto	u1230
  1584  0019A0                     u1231:
  1585  0019A0  EF9C  F00C         	goto	l1564
  1586  0019A4                     u1230:
  1587  0019A4                     
  1588                           ;keypad.c: 25:  return 0;
  1589  0019A4  0E00               	movlw	0
  1590  0019A6                     l266:
  1591  0019A6  0012               	return		;funcret
  1592  0019A8                     __end_of_kpReadKey:
  1593                           	callstack 0
  1594                           
  1595 ;; *************** function _kpInit *****************
  1596 ;; Defined at:
  1597 ;;		line 54 in file "keypad.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;		None
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;		None
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  1    wreg      void 
  1604 ;; Registers used:
  1605 ;;		wreg, status,2, status,0, cstack
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1611 ;;      Params:         0       0       0       0       0       0       0
  1612 ;;      Locals:         0       0       0       0       0       0       0
  1613 ;;      Temps:          0       0       0       0       0       0       0
  1614 ;;      Totals:         0       0       0       0       0       0       0
  1615 ;;Total ram usage:        0 bytes
  1616 ;; Hardware stack levels used: 1
  1617 ;; Hardware stack levels required when called: 2
  1618 ;; This function calls:
  1619 ;;		_pinMode
  1620 ;;		_soInit
  1621 ;; This function is called by:
  1622 ;;		_main
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text12
  1627  001B7C                     __ptext12:
  1628                           	callstack 0
  1629  001B7C                     _kpInit:
  1630                           	callstack 28
  1631  001B7C                     
  1632                           ;keypad.c: 55:   soInit();
  1633  001B7C  EC9F  F00D         	call	_soInit	;wreg free
  1634                           
  1635                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  1636  001B80  0E00               	movlw	0
  1637  001B82  6E02               	movwf	(pinMode@pin+1)^0,c
  1638  001B84  0E0A               	movlw	10
  1639  001B86  6E01               	movwf	pinMode@pin^0,c
  1640  001B88  0E00               	movlw	0
  1641  001B8A  6E04               	movwf	(pinMode@type+1)^0,c
  1642  001B8C  0E01               	movlw	1
  1643  001B8E  6E03               	movwf	pinMode@type^0,c
  1644  001B90  ECED  F006         	call	_pinMode	;wreg free
  1645                           
  1646                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  1647  001B94  0E00               	movlw	0
  1648  001B96  6E02               	movwf	(pinMode@pin+1)^0,c
  1649  001B98  0E09               	movlw	9
  1650  001B9A  6E01               	movwf	pinMode@pin^0,c
  1651  001B9C  0E00               	movlw	0
  1652  001B9E  6E04               	movwf	(pinMode@type+1)^0,c
  1653  001BA0  0E01               	movlw	1
  1654  001BA2  6E03               	movwf	pinMode@type^0,c
  1655  001BA4  ECED  F006         	call	_pinMode	;wreg free
  1656  001BA8                     
  1657                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  1658  001BA8  0E0C               	movlw	12
  1659  001BAA  6EC1               	movwf	193,c	;volatile
  1660  001BAC  0012               	return		;funcret
  1661  001BAE                     __end_of_kpInit:
  1662                           	callstack 0
  1663                           
  1664 ;; *************** function _soInit *****************
  1665 ;; Defined at:
  1666 ;;		line 3 in file "so.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;		None
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;		None
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  1    wreg      void 
  1673 ;; Registers used:
  1674 ;;		wreg, status,2, status,0, cstack
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1680 ;;      Params:         0       0       0       0       0       0       0
  1681 ;;      Locals:         0       0       0       0       0       0       0
  1682 ;;      Temps:          0       0       0       0       0       0       0
  1683 ;;      Totals:         0       0       0       0       0       0       0
  1684 ;;Total ram usage:        0 bytes
  1685 ;; Hardware stack levels used: 1
  1686 ;; Hardware stack levels required when called: 1
  1687 ;; This function calls:
  1688 ;;		_pinMode
  1689 ;; This function is called by:
  1690 ;;		_ssdInit
  1691 ;;		_lcdInit
  1692 ;;		_kpInit
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           	psect	text13
  1697  001B3E                     __ptext13:
  1698                           	callstack 0
  1699  001B3E                     _soInit:
  1700                           	callstack 28
  1701  001B3E                     
  1702                           ;so.c: 4:  pinMode(PIN_D7, 0);
  1703  001B3E  0E00               	movlw	0
  1704  001B40  6E02               	movwf	(pinMode@pin+1)^0,c
  1705  001B42  0E1F               	movlw	31
  1706  001B44  6E01               	movwf	pinMode@pin^0,c
  1707  001B46  0E00               	movlw	0
  1708  001B48  6E04               	movwf	(pinMode@type+1)^0,c
  1709  001B4A  0E00               	movlw	0
  1710  001B4C  6E03               	movwf	pinMode@type^0,c
  1711  001B4E  ECED  F006         	call	_pinMode	;wreg free
  1712                           
  1713                           ;so.c: 5:  pinMode(PIN_B0, 0);
  1714  001B52  0E00               	movlw	0
  1715  001B54  6E02               	movwf	(pinMode@pin+1)^0,c
  1716  001B56  0E08               	movlw	8
  1717  001B58  6E01               	movwf	pinMode@pin^0,c
  1718  001B5A  0E00               	movlw	0
  1719  001B5C  6E04               	movwf	(pinMode@type+1)^0,c
  1720  001B5E  0E00               	movlw	0
  1721  001B60  6E03               	movwf	pinMode@type^0,c
  1722  001B62  ECED  F006         	call	_pinMode	;wreg free
  1723                           
  1724                           ;so.c: 6:  pinMode(PIN_D6, 0);
  1725  001B66  0E00               	movlw	0
  1726  001B68  6E02               	movwf	(pinMode@pin+1)^0,c
  1727  001B6A  0E1E               	movlw	30
  1728  001B6C  6E01               	movwf	pinMode@pin^0,c
  1729  001B6E  0E00               	movlw	0
  1730  001B70  6E04               	movwf	(pinMode@type+1)^0,c
  1731  001B72  0E00               	movlw	0
  1732  001B74  6E03               	movwf	pinMode@type^0,c
  1733  001B76  ECED  F006         	call	_pinMode	;wreg free
  1734  001B7A  0012               	return		;funcret
  1735  001B7C                     __end_of_soInit:
  1736                           	callstack 0
  1737                           
  1738 ;; *************** function _pinMode *****************
  1739 ;; Defined at:
  1740 ;;		line 54 in file "io.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;  pin             2    0[COMRAM] int 
  1743 ;;  type            2    2[COMRAM] int 
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;		None
  1746 ;; Return value:  Size  Location     Type
  1747 ;;                  1    wreg      void 
  1748 ;; Registers used:
  1749 ;;		wreg, status,2, status,0
  1750 ;; Tracked objects:
  1751 ;;		On entry : 0/0
  1752 ;;		On exit  : 0/0
  1753 ;;		Unchanged: 0/0
  1754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1755 ;;      Params:         4       0       0       0       0       0       0
  1756 ;;      Locals:         0       0       0       0       0       0       0
  1757 ;;      Temps:          2       0       0       0       0       0       0
  1758 ;;      Totals:         6       0       0       0       0       0       0
  1759 ;;Total ram usage:        6 bytes
  1760 ;; Hardware stack levels used: 1
  1761 ;; This function calls:
  1762 ;;		Nothing
  1763 ;; This function is called by:
  1764 ;;		_ssdInit
  1765 ;;		_soInit
  1766 ;;		_lcdInit
  1767 ;;		_kpInit
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text14
  1772  000DDA                     __ptext14:
  1773                           	callstack 0
  1774  000DDA                     _pinMode:
  1775                           	callstack 28
  1776  000DDA                     
  1777                           ;io.c: 56:     if(pin <8){
  1778  000DDA  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1779  000DDC  EFFB  F006         	goto	u1540
  1780  000DE0  5002               	movf	(pinMode@pin+1)^0,w,c
  1781  000DE2  E107               	bnz	u1541
  1782  000DE4  0E08               	movlw	8
  1783  000DE6  5C01               	subwf	pinMode@pin^0,w,c
  1784  000DE8  B0D8               	btfsc	status,0,c
  1785  000DEA  EFF9  F006         	goto	u1541
  1786  000DEE  EFFB  F006         	goto	u1540
  1787  000DF2                     u1541:
  1788  000DF2  EF25  F007         	goto	l1800
  1789  000DF6                     u1540:
  1790  000DF6                     
  1791                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  1792  000DF6  5003               	movf	pinMode@type^0,w,c
  1793  000DF8  1004               	iorwf	(pinMode@type+1)^0,w,c
  1794  000DFA  B4D8               	btfsc	status,2,c
  1795  000DFC  EF02  F007         	goto	u1551
  1796  000E00  EF04  F007         	goto	u1550
  1797  000E04                     u1551:
  1798  000E04  EF14  F007         	goto	l1798
  1799  000E08                     u1550:
  1800  000E08  C001  F005         	movff	pinMode@pin,??_pinMode
  1801  000E0C  0E01               	movlw	1
  1802  000E0E  6E06               	movwf	(??_pinMode+1)^0,c
  1803  000E10  2A05               	incf	??_pinMode^0,f,c
  1804  000E12  EF0D  F007         	goto	u1564
  1805  000E16                     u1565:
  1806  000E16  90D8               	bcf	status,0,c
  1807  000E18  3606               	rlcf	(??_pinMode+1)^0,f,c
  1808  000E1A                     u1564:
  1809  000E1A  2E05               	decfsz	??_pinMode^0,f,c
  1810  000E1C  EF0B  F007         	goto	u1565
  1811  000E20  5006               	movf	(??_pinMode+1)^0,w,c
  1812  000E22  1292               	iorwf	146,f,c	;volatile
  1813  000E24  EF13  F008         	goto	l173
  1814  000E28                     l1798:
  1815  000E28  C001  F005         	movff	pinMode@pin,??_pinMode
  1816  000E2C  0E01               	movlw	1
  1817  000E2E  6E06               	movwf	(??_pinMode+1)^0,c
  1818  000E30  2A05               	incf	??_pinMode^0,f,c
  1819  000E32  EF1D  F007         	goto	u1574
  1820  000E36                     u1575:
  1821  000E36  90D8               	bcf	status,0,c
  1822  000E38  3606               	rlcf	(??_pinMode+1)^0,f,c
  1823  000E3A                     u1574:
  1824  000E3A  2E05               	decfsz	??_pinMode^0,f,c
  1825  000E3C  EF1B  F007         	goto	u1575
  1826  000E40  5006               	movf	(??_pinMode+1)^0,w,c
  1827  000E42  0AFF               	xorlw	255
  1828  000E44  1692               	andwf	146,f,c	;volatile
  1829  000E46  EF13  F008         	goto	l173
  1830  000E4A                     l1800:
  1831  000E4A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1832  000E4C  EF33  F007         	goto	u1580
  1833  000E50  5002               	movf	(pinMode@pin+1)^0,w,c
  1834  000E52  E107               	bnz	u1581
  1835  000E54  0E10               	movlw	16
  1836  000E56  5C01               	subwf	pinMode@pin^0,w,c
  1837  000E58  B0D8               	btfsc	status,0,c
  1838  000E5A  EF31  F007         	goto	u1581
  1839  000E5E  EF33  F007         	goto	u1580
  1840  000E62                     u1581:
  1841  000E62  EF61  F007         	goto	l1808
  1842  000E66                     u1580:
  1843  000E66                     
  1844                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  1845  000E66  5003               	movf	pinMode@type^0,w,c
  1846  000E68  1004               	iorwf	(pinMode@type+1)^0,w,c
  1847  000E6A  B4D8               	btfsc	status,2,c
  1848  000E6C  EF3A  F007         	goto	u1591
  1849  000E70  EF3C  F007         	goto	u1590
  1850  000E74                     u1591:
  1851  000E74  EF4E  F007         	goto	l1806
  1852  000E78                     u1590:
  1853  000E78  C001  F005         	movff	pinMode@pin,??_pinMode
  1854  000E7C  0EF8               	movlw	-8
  1855  000E7E  2605               	addwf	??_pinMode^0,f,c
  1856  000E80  0E01               	movlw	1
  1857  000E82  6E06               	movwf	(??_pinMode+1)^0,c
  1858  000E84  2A05               	incf	??_pinMode^0,f,c
  1859  000E86  EF47  F007         	goto	u1604
  1860  000E8A                     u1605:
  1861  000E8A  90D8               	bcf	status,0,c
  1862  000E8C  3606               	rlcf	(??_pinMode+1)^0,f,c
  1863  000E8E                     u1604:
  1864  000E8E  2E05               	decfsz	??_pinMode^0,f,c
  1865  000E90  EF45  F007         	goto	u1605
  1866  000E94  5006               	movf	(??_pinMode+1)^0,w,c
  1867  000E96  1293               	iorwf	147,f,c	;volatile
  1868  000E98  EF13  F008         	goto	l173
  1869  000E9C                     l1806:
  1870  000E9C  C001  F005         	movff	pinMode@pin,??_pinMode
  1871  000EA0  0EF8               	movlw	-8
  1872  000EA2  2605               	addwf	??_pinMode^0,f,c
  1873  000EA4  0E01               	movlw	1
  1874  000EA6  6E06               	movwf	(??_pinMode+1)^0,c
  1875  000EA8  2A05               	incf	??_pinMode^0,f,c
  1876  000EAA  EF59  F007         	goto	u1614
  1877  000EAE                     u1615:
  1878  000EAE  90D8               	bcf	status,0,c
  1879  000EB0  3606               	rlcf	(??_pinMode+1)^0,f,c
  1880  000EB2                     u1614:
  1881  000EB2  2E05               	decfsz	??_pinMode^0,f,c
  1882  000EB4  EF57  F007         	goto	u1615
  1883  000EB8  5006               	movf	(??_pinMode+1)^0,w,c
  1884  000EBA  0AFF               	xorlw	255
  1885  000EBC  1693               	andwf	147,f,c	;volatile
  1886  000EBE  EF13  F008         	goto	l173
  1887  000EC2                     l1808:
  1888  000EC2  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1889  000EC4  EF6F  F007         	goto	u1620
  1890  000EC8  5002               	movf	(pinMode@pin+1)^0,w,c
  1891  000ECA  E107               	bnz	u1621
  1892  000ECC  0E18               	movlw	24
  1893  000ECE  5C01               	subwf	pinMode@pin^0,w,c
  1894  000ED0  B0D8               	btfsc	status,0,c
  1895  000ED2  EF6D  F007         	goto	u1621
  1896  000ED6  EF6F  F007         	goto	u1620
  1897  000EDA                     u1621:
  1898  000EDA  EF9D  F007         	goto	l1816
  1899  000EDE                     u1620:
  1900  000EDE                     
  1901                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  1902  000EDE  5003               	movf	pinMode@type^0,w,c
  1903  000EE0  1004               	iorwf	(pinMode@type+1)^0,w,c
  1904  000EE2  B4D8               	btfsc	status,2,c
  1905  000EE4  EF76  F007         	goto	u1631
  1906  000EE8  EF78  F007         	goto	u1630
  1907  000EEC                     u1631:
  1908  000EEC  EF8A  F007         	goto	l1814
  1909  000EF0                     u1630:
  1910  000EF0  C001  F005         	movff	pinMode@pin,??_pinMode
  1911  000EF4  0EF0               	movlw	-16
  1912  000EF6  2605               	addwf	??_pinMode^0,f,c
  1913  000EF8  0E01               	movlw	1
  1914  000EFA  6E06               	movwf	(??_pinMode+1)^0,c
  1915  000EFC  2A05               	incf	??_pinMode^0,f,c
  1916  000EFE  EF83  F007         	goto	u1644
  1917  000F02                     u1645:
  1918  000F02  90D8               	bcf	status,0,c
  1919  000F04  3606               	rlcf	(??_pinMode+1)^0,f,c
  1920  000F06                     u1644:
  1921  000F06  2E05               	decfsz	??_pinMode^0,f,c
  1922  000F08  EF81  F007         	goto	u1645
  1923  000F0C  5006               	movf	(??_pinMode+1)^0,w,c
  1924  000F0E  1294               	iorwf	148,f,c	;volatile
  1925  000F10  EF13  F008         	goto	l173
  1926  000F14                     l1814:
  1927  000F14  C001  F005         	movff	pinMode@pin,??_pinMode
  1928  000F18  0EF0               	movlw	-16
  1929  000F1A  2605               	addwf	??_pinMode^0,f,c
  1930  000F1C  0E01               	movlw	1
  1931  000F1E  6E06               	movwf	(??_pinMode+1)^0,c
  1932  000F20  2A05               	incf	??_pinMode^0,f,c
  1933  000F22  EF95  F007         	goto	u1654
  1934  000F26                     u1655:
  1935  000F26  90D8               	bcf	status,0,c
  1936  000F28  3606               	rlcf	(??_pinMode+1)^0,f,c
  1937  000F2A                     u1654:
  1938  000F2A  2E05               	decfsz	??_pinMode^0,f,c
  1939  000F2C  EF93  F007         	goto	u1655
  1940  000F30  5006               	movf	(??_pinMode+1)^0,w,c
  1941  000F32  0AFF               	xorlw	255
  1942  000F34  1694               	andwf	148,f,c	;volatile
  1943  000F36  EF13  F008         	goto	l173
  1944  000F3A                     l1816:
  1945  000F3A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1946  000F3C  EFAB  F007         	goto	u1660
  1947  000F40  5002               	movf	(pinMode@pin+1)^0,w,c
  1948  000F42  E107               	bnz	u1661
  1949  000F44  0E20               	movlw	32
  1950  000F46  5C01               	subwf	pinMode@pin^0,w,c
  1951  000F48  B0D8               	btfsc	status,0,c
  1952  000F4A  EFA9  F007         	goto	u1661
  1953  000F4E  EFAB  F007         	goto	u1660
  1954  000F52                     u1661:
  1955  000F52  EFD9  F007         	goto	l1824
  1956  000F56                     u1660:
  1957  000F56                     
  1958                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  1959  000F56  5003               	movf	pinMode@type^0,w,c
  1960  000F58  1004               	iorwf	(pinMode@type+1)^0,w,c
  1961  000F5A  B4D8               	btfsc	status,2,c
  1962  000F5C  EFB2  F007         	goto	u1671
  1963  000F60  EFB4  F007         	goto	u1670
  1964  000F64                     u1671:
  1965  000F64  EFC6  F007         	goto	l1822
  1966  000F68                     u1670:
  1967  000F68  C001  F005         	movff	pinMode@pin,??_pinMode
  1968  000F6C  0EE8               	movlw	-24
  1969  000F6E  2605               	addwf	??_pinMode^0,f,c
  1970  000F70  0E01               	movlw	1
  1971  000F72  6E06               	movwf	(??_pinMode+1)^0,c
  1972  000F74  2A05               	incf	??_pinMode^0,f,c
  1973  000F76  EFBF  F007         	goto	u1684
  1974  000F7A                     u1685:
  1975  000F7A  90D8               	bcf	status,0,c
  1976  000F7C  3606               	rlcf	(??_pinMode+1)^0,f,c
  1977  000F7E                     u1684:
  1978  000F7E  2E05               	decfsz	??_pinMode^0,f,c
  1979  000F80  EFBD  F007         	goto	u1685
  1980  000F84  5006               	movf	(??_pinMode+1)^0,w,c
  1981  000F86  1295               	iorwf	149,f,c	;volatile
  1982  000F88  EF13  F008         	goto	l173
  1983  000F8C                     l1822:
  1984  000F8C  C001  F005         	movff	pinMode@pin,??_pinMode
  1985  000F90  0EE8               	movlw	-24
  1986  000F92  2605               	addwf	??_pinMode^0,f,c
  1987  000F94  0E01               	movlw	1
  1988  000F96  6E06               	movwf	(??_pinMode+1)^0,c
  1989  000F98  2A05               	incf	??_pinMode^0,f,c
  1990  000F9A  EFD1  F007         	goto	u1694
  1991  000F9E                     u1695:
  1992  000F9E  90D8               	bcf	status,0,c
  1993  000FA0  3606               	rlcf	(??_pinMode+1)^0,f,c
  1994  000FA2                     u1694:
  1995  000FA2  2E05               	decfsz	??_pinMode^0,f,c
  1996  000FA4  EFCF  F007         	goto	u1695
  1997  000FA8  5006               	movf	(??_pinMode+1)^0,w,c
  1998  000FAA  0AFF               	xorlw	255
  1999  000FAC  1695               	andwf	149,f,c	;volatile
  2000  000FAE  EF13  F008         	goto	l173
  2001  000FB2                     l1824:
  2002  000FB2  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2003  000FB4  EFE7  F007         	goto	u1700
  2004  000FB8  5002               	movf	(pinMode@pin+1)^0,w,c
  2005  000FBA  E107               	bnz	u1701
  2006  000FBC  0E28               	movlw	40
  2007  000FBE  5C01               	subwf	pinMode@pin^0,w,c
  2008  000FC0  B0D8               	btfsc	status,0,c
  2009  000FC2  EFE5  F007         	goto	u1701
  2010  000FC6  EFE7  F007         	goto	u1700
  2011  000FCA                     u1701:
  2012  000FCA  EF13  F008         	goto	l173
  2013  000FCE                     u1700:
  2014  000FCE                     
  2015                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  2016  000FCE  5003               	movf	pinMode@type^0,w,c
  2017  000FD0  1004               	iorwf	(pinMode@type+1)^0,w,c
  2018  000FD2  B4D8               	btfsc	status,2,c
  2019  000FD4  EFEE  F007         	goto	u1711
  2020  000FD8  EFF0  F007         	goto	u1710
  2021  000FDC                     u1711:
  2022  000FDC  EF02  F008         	goto	l1830
  2023  000FE0                     u1710:
  2024  000FE0  C001  F005         	movff	pinMode@pin,??_pinMode
  2025  000FE4  0EE0               	movlw	-32
  2026  000FE6  2605               	addwf	??_pinMode^0,f,c
  2027  000FE8  0E01               	movlw	1
  2028  000FEA  6E06               	movwf	(??_pinMode+1)^0,c
  2029  000FEC  2A05               	incf	??_pinMode^0,f,c
  2030  000FEE  EFFB  F007         	goto	u1724
  2031  000FF2                     u1725:
  2032  000FF2  90D8               	bcf	status,0,c
  2033  000FF4  3606               	rlcf	(??_pinMode+1)^0,f,c
  2034  000FF6                     u1724:
  2035  000FF6  2E05               	decfsz	??_pinMode^0,f,c
  2036  000FF8  EFF9  F007         	goto	u1725
  2037  000FFC  5006               	movf	(??_pinMode+1)^0,w,c
  2038  000FFE  1296               	iorwf	150,f,c	;volatile
  2039  001000  EF13  F008         	goto	l173
  2040  001004                     l1830:
  2041  001004  C001  F005         	movff	pinMode@pin,??_pinMode
  2042  001008  0EE0               	movlw	-32
  2043  00100A  2605               	addwf	??_pinMode^0,f,c
  2044  00100C  0E01               	movlw	1
  2045  00100E  6E06               	movwf	(??_pinMode+1)^0,c
  2046  001010  2A05               	incf	??_pinMode^0,f,c
  2047  001012  EF0D  F008         	goto	u1734
  2048  001016                     u1735:
  2049  001016  90D8               	bcf	status,0,c
  2050  001018  3606               	rlcf	(??_pinMode+1)^0,f,c
  2051  00101A                     u1734:
  2052  00101A  2E05               	decfsz	??_pinMode^0,f,c
  2053  00101C  EF0B  F008         	goto	u1735
  2054  001020  5006               	movf	(??_pinMode+1)^0,w,c
  2055  001022  0AFF               	xorlw	255
  2056  001024  1696               	andwf	150,f,c	;volatile
  2057  001026                     l173:
  2058  001026  0012               	return		;funcret
  2059  001028                     __end_of_pinMode:
  2060                           	callstack 0
  2061                           
  2062 ;; *************** function _kpDebounce *****************
  2063 ;; Defined at:
  2064 ;;		line 27 in file "keypad.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;		None
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;  i               2   12[COMRAM] int 
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      void 
  2071 ;; Registers used:
  2072 ;;		wreg, status,2, status,0, cstack
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2078 ;;      Params:         0       0       0       0       0       0       0
  2079 ;;      Locals:         2       0       0       0       0       0       0
  2080 ;;      Temps:          3       0       0       0       0       0       0
  2081 ;;      Totals:         5       0       0       0       0       0       0
  2082 ;;Total ram usage:        5 bytes
  2083 ;; Hardware stack levels used: 1
  2084 ;; Hardware stack levels required when called: 3
  2085 ;; This function calls:
  2086 ;;		_digitalRead
  2087 ;;		_soWrite
  2088 ;; This function is called by:
  2089 ;;		_main
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           	psect	text15
  2094  0013E0                     __ptext15:
  2095                           	callstack 0
  2096  0013E0                     _kpDebounce:
  2097                           	callstack 27
  2098  0013E0                     
  2099                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  2100  0013E0  0E00               	movlw	0
  2101  0013E2  6E21               	movwf	(kpDebounce@newRead+1)^0,c
  2102  0013E4  0E00               	movlw	0
  2103  0013E6  6E20               	movwf	kpDebounce@newRead^0,c
  2104                           
  2105                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  2106  0013E8  0E00               	movlw	0
  2107  0013EA  6E0E               	movwf	(kpDebounce@i+1)^0,c
  2108  0013EC  0E00               	movlw	0
  2109  0013EE  6E0D               	movwf	kpDebounce@i^0,c
  2110  0013F0                     l2272:
  2111  0013F0  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  2112  0013F2  EF04  F00A         	goto	u2451
  2113  0013F6  500E               	movf	(kpDebounce@i+1)^0,w,c
  2114  0013F8  E109               	bnz	u2450
  2115  0013FA  0E05               	movlw	5
  2116  0013FC  5C0D               	subwf	kpDebounce@i^0,w,c
  2117  0013FE  A0D8               	btfss	status,0,c
  2118  001400  EF04  F00A         	goto	u2451
  2119  001404  EF06  F00A         	goto	u2450
  2120  001408                     u2451:
  2121  001408  EF08  F00A         	goto	l2276
  2122  00140C                     u2450:
  2123  00140C  EF69  F00A         	goto	l2288
  2124  001410                     l2276:
  2125                           
  2126                           ;keypad.c: 35:       soWrite(1<<(i+3));
  2127  001410  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  2128  001414  0E03               	movlw	3
  2129  001416  260A               	addwf	??_kpDebounce^0,f,c
  2130  001418  0E01               	movlw	1
  2131  00141A  6E0B               	movwf	(??_kpDebounce+1)^0,c
  2132  00141C  0E00               	movlw	0
  2133  00141E  6E0C               	movwf	(??_kpDebounce+2)^0,c
  2134  001420  2A0A               	incf	??_kpDebounce^0,f,c
  2135  001422  EF16  F00A         	goto	u2464
  2136  001426                     u2465:
  2137  001426  90D8               	bcf	status,0,c
  2138  001428  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  2139  00142A  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  2140  00142C                     u2464:
  2141  00142C  2E0A               	decfsz	??_kpDebounce^0,f,c
  2142  00142E  EF13  F00A         	goto	u2465
  2143  001432  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  2144  001436  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  2145  00143A  EC57  F00D         	call	_soWrite	;wreg free
  2146                           
  2147                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  2148  00143E  0E00               	movlw	0
  2149  001440  6E02               	movwf	(digitalRead@pin+1)^0,c
  2150  001442  0E0A               	movlw	10
  2151  001444  6E01               	movwf	digitalRead@pin^0,c
  2152  001446  EC3B  F009         	call	_digitalRead	;wreg free
  2153  00144A  5001               	movf	?_digitalRead^0,w,c
  2154  00144C  1002               	iorwf	(?_digitalRead+1)^0,w,c
  2155  00144E  B4D8               	btfsc	status,2,c
  2156  001450  EF2C  F00A         	goto	u2471
  2157  001454  EF2E  F00A         	goto	u2470
  2158  001458                     u2471:
  2159  001458  EF41  F00A         	goto	l2280
  2160  00145C                     u2470:
  2161  00145C                     
  2162                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  2163  00145C  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  2164  001460  0E01               	movlw	1
  2165  001462  6E0B               	movwf	(??_kpDebounce+1)^0,c
  2166  001464  0E00               	movlw	0
  2167  001466  6E0C               	movwf	(??_kpDebounce+2)^0,c
  2168  001468  2A0A               	incf	??_kpDebounce^0,f,c
  2169  00146A  EF3A  F00A         	goto	u2484
  2170  00146E                     u2485:
  2171  00146E  90D8               	bcf	status,0,c
  2172  001470  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  2173  001472  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  2174  001474                     u2484:
  2175  001474  2E0A               	decfsz	??_kpDebounce^0,f,c
  2176  001476  EF37  F00A         	goto	u2485
  2177  00147A  500B               	movf	(??_kpDebounce+1)^0,w,c
  2178  00147C  1220               	iorwf	kpDebounce@newRead^0,f,c
  2179  00147E  500C               	movf	(??_kpDebounce+2)^0,w,c
  2180  001480  1221               	iorwf	(kpDebounce@newRead+1)^0,f,c
  2181  001482                     l2280:
  2182                           
  2183                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  2184  001482  0E00               	movlw	0
  2185  001484  6E02               	movwf	(digitalRead@pin+1)^0,c
  2186  001486  0E09               	movlw	9
  2187  001488  6E01               	movwf	digitalRead@pin^0,c
  2188  00148A  EC3B  F009         	call	_digitalRead	;wreg free
  2189  00148E  5001               	movf	?_digitalRead^0,w,c
  2190  001490  1002               	iorwf	(?_digitalRead+1)^0,w,c
  2191  001492  B4D8               	btfsc	status,2,c
  2192  001494  EF4E  F00A         	goto	u2491
  2193  001498  EF50  F00A         	goto	u2490
  2194  00149C                     u2491:
  2195  00149C  EF65  F00A         	goto	l2284
  2196  0014A0                     u2490:
  2197  0014A0                     
  2198                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  2199  0014A0  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  2200  0014A4  0E05               	movlw	5
  2201  0014A6  260A               	addwf	??_kpDebounce^0,f,c
  2202  0014A8  0E01               	movlw	1
  2203  0014AA  6E0B               	movwf	(??_kpDebounce+1)^0,c
  2204  0014AC  0E00               	movlw	0
  2205  0014AE  6E0C               	movwf	(??_kpDebounce+2)^0,c
  2206  0014B0  2A0A               	incf	??_kpDebounce^0,f,c
  2207  0014B2  EF5E  F00A         	goto	u2504
  2208  0014B6                     u2505:
  2209  0014B6  90D8               	bcf	status,0,c
  2210  0014B8  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  2211  0014BA  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  2212  0014BC                     u2504:
  2213  0014BC  2E0A               	decfsz	??_kpDebounce^0,f,c
  2214  0014BE  EF5B  F00A         	goto	u2505
  2215  0014C2  500B               	movf	(??_kpDebounce+1)^0,w,c
  2216  0014C4  1220               	iorwf	kpDebounce@newRead^0,f,c
  2217  0014C6  500C               	movf	(??_kpDebounce+2)^0,w,c
  2218  0014C8  1221               	iorwf	(kpDebounce@newRead+1)^0,f,c
  2219  0014CA                     l2284:
  2220                           
  2221                           ;keypad.c: 42:     }
  2222  0014CA  4A0D               	infsnz	kpDebounce@i^0,f,c
  2223  0014CC  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  2224  0014CE  EFF8  F009         	goto	l2272
  2225  0014D2                     l2288:
  2226                           
  2227                           ;keypad.c: 43:     if (oldRead == newRead) {
  2228  0014D2  5020               	movf	kpDebounce@newRead^0,w,c
  2229  0014D4  181E               	xorwf	kpDebounce@oldRead^0,w,c
  2230  0014D6  E107               	bnz	u2511
  2231  0014D8  5021               	movf	(kpDebounce@newRead+1)^0,w,c
  2232  0014DA  181F               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  2233  0014DC  A4D8               	btfss	status,2,c
  2234  0014DE  EF73  F00A         	goto	u2511
  2235  0014E2  EF75  F00A         	goto	u2510
  2236  0014E6                     u2511:
  2237  0014E6  EF78  F00A         	goto	l2292
  2238  0014EA                     u2510:
  2239  0014EA                     
  2240                           ;keypad.c: 44:         tempo--;
  2241  0014EA  0626               	decf	kpDebounce@tempo^0,f,c
  2242                           
  2243                           ;keypad.c: 45:     } else {
  2244  0014EC  EF7E  F00A         	goto	l280
  2245  0014F0                     l2292:
  2246                           
  2247                           ;keypad.c: 46:         tempo = 1;
  2248  0014F0  0E01               	movlw	1
  2249  0014F2  6E26               	movwf	kpDebounce@tempo^0,c
  2250  0014F4                     
  2251                           ;keypad.c: 47:         oldRead = newRead;
  2252  0014F4  C020  F01E         	movff	kpDebounce@newRead,kpDebounce@oldRead
  2253  0014F8  C021  F01F         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  2254  0014FC                     l280:
  2255                           
  2256                           ;keypad.c: 49:     if (tempo == 0) {
  2257  0014FC  5026               	movf	kpDebounce@tempo^0,w,c
  2258  0014FE  A4D8               	btfss	status,2,c
  2259  001500  EF84  F00A         	goto	u2521
  2260  001504  EF86  F00A         	goto	u2520
  2261  001508                     u2521:
  2262  001508  EF8A  F00A         	goto	l282
  2263  00150C                     u2520:
  2264  00150C                     
  2265                           ;keypad.c: 50:         keys = oldRead;
  2266  00150C  C01E  F022         	movff	kpDebounce@oldRead,_keys
  2267  001510  C01F  F023         	movff	kpDebounce@oldRead+1,_keys+1
  2268  001514                     l282:
  2269  001514  0012               	return		;funcret
  2270  001516                     __end_of_kpDebounce:
  2271                           	callstack 0
  2272                           
  2273 ;; *************** function _digitalRead *****************
  2274 ;; Defined at:
  2275 ;;		line 39 in file "io.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;  pin             2    0[COMRAM] int 
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;		None
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  2    0[COMRAM] int 
  2282 ;; Registers used:
  2283 ;;		wreg, status,2, status,0
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2289 ;;      Params:         2       0       0       0       0       0       0
  2290 ;;      Locals:         0       0       0       0       0       0       0
  2291 ;;      Temps:          3       0       0       0       0       0       0
  2292 ;;      Totals:         5       0       0       0       0       0       0
  2293 ;;Total ram usage:        5 bytes
  2294 ;; Hardware stack levels used: 1
  2295 ;; This function calls:
  2296 ;;		Nothing
  2297 ;; This function is called by:
  2298 ;;		_kpDebounce
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302                           	psect	text16
  2303  001276                     __ptext16:
  2304                           	callstack 0
  2305  001276                     _digitalRead:
  2306                           	callstack 29
  2307  001276                     
  2308                           ;io.c: 40:     if(pin <8){
  2309  001276  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  2310  001278  EF49  F009         	goto	u1750
  2311  00127C  5002               	movf	(digitalRead@pin+1)^0,w,c
  2312  00127E  E107               	bnz	u1751
  2313  001280  0E08               	movlw	8
  2314  001282  5C01               	subwf	digitalRead@pin^0,w,c
  2315  001284  B0D8               	btfsc	status,0,c
  2316  001286  EF47  F009         	goto	u1751
  2317  00128A  EF49  F009         	goto	u1750
  2318  00128E                     u1751:
  2319  00128E  EF5D  F009         	goto	l1852
  2320  001292                     u1750:
  2321  001292                     
  2322                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  2323  001292  C001  F003         	movff	digitalRead@pin,??_digitalRead
  2324  001296  0E01               	movlw	1
  2325  001298  6E04               	movwf	(??_digitalRead+1)^0,c
  2326  00129A  2A03               	incf	??_digitalRead^0,f,c
  2327  00129C  EF52  F009         	goto	u1764
  2328  0012A0                     u1765:
  2329  0012A0  90D8               	bcf	status,0,c
  2330  0012A2  3604               	rlcf	(??_digitalRead+1)^0,f,c
  2331  0012A4                     u1764:
  2332  0012A4  2E03               	decfsz	??_digitalRead^0,f,c
  2333  0012A6  EF50  F009         	goto	u1765
  2334  0012AA  5004               	movf	(??_digitalRead+1)^0,w,c
  2335  0012AC  1480               	andwf	128,w,c	;volatile
  2336  0012AE  6E05               	movwf	(??_digitalRead+2)^0,c
  2337  0012B0  5005               	movf	(??_digitalRead+2)^0,w,c
  2338  0012B2  6E01               	movwf	?_digitalRead^0,c
  2339  0012B4  6A02               	clrf	(?_digitalRead+1)^0,c
  2340  0012B6  EFEF  F009         	goto	l143
  2341  0012BA                     l1852:
  2342  0012BA  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  2343  0012BC  EF6B  F009         	goto	u1770
  2344  0012C0  5002               	movf	(digitalRead@pin+1)^0,w,c
  2345  0012C2  E107               	bnz	u1771
  2346  0012C4  0E10               	movlw	16
  2347  0012C6  5C01               	subwf	digitalRead@pin^0,w,c
  2348  0012C8  B0D8               	btfsc	status,0,c
  2349  0012CA  EF69  F009         	goto	u1771
  2350  0012CE  EF6B  F009         	goto	u1770
  2351  0012D2                     u1771:
  2352  0012D2  EF81  F009         	goto	l1860
  2353  0012D6                     u1770:
  2354  0012D6                     
  2355                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  2356  0012D6  C001  F003         	movff	digitalRead@pin,??_digitalRead
  2357  0012DA  0EF8               	movlw	-8
  2358  0012DC  2603               	addwf	??_digitalRead^0,f,c
  2359  0012DE  0E01               	movlw	1
  2360  0012E0  6E04               	movwf	(??_digitalRead+1)^0,c
  2361  0012E2  2A03               	incf	??_digitalRead^0,f,c
  2362  0012E4  EF76  F009         	goto	u1784
  2363  0012E8                     u1785:
  2364  0012E8  90D8               	bcf	status,0,c
  2365  0012EA  3604               	rlcf	(??_digitalRead+1)^0,f,c
  2366  0012EC                     u1784:
  2367  0012EC  2E03               	decfsz	??_digitalRead^0,f,c
  2368  0012EE  EF74  F009         	goto	u1785
  2369  0012F2  5004               	movf	(??_digitalRead+1)^0,w,c
  2370  0012F4  1481               	andwf	129,w,c	;volatile
  2371  0012F6  6E05               	movwf	(??_digitalRead+2)^0,c
  2372  0012F8  5005               	movf	(??_digitalRead+2)^0,w,c
  2373  0012FA  6E01               	movwf	?_digitalRead^0,c
  2374  0012FC  6A02               	clrf	(?_digitalRead+1)^0,c
  2375  0012FE  EFEF  F009         	goto	l143
  2376  001302                     l1860:
  2377  001302  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  2378  001304  EF8F  F009         	goto	u1790
  2379  001308  5002               	movf	(digitalRead@pin+1)^0,w,c
  2380  00130A  E107               	bnz	u1791
  2381  00130C  0E18               	movlw	24
  2382  00130E  5C01               	subwf	digitalRead@pin^0,w,c
  2383  001310  B0D8               	btfsc	status,0,c
  2384  001312  EF8D  F009         	goto	u1791
  2385  001316  EF8F  F009         	goto	u1790
  2386  00131A                     u1791:
  2387  00131A  EFA5  F009         	goto	l1868
  2388  00131E                     u1790:
  2389  00131E                     
  2390                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  2391  00131E  C001  F003         	movff	digitalRead@pin,??_digitalRead
  2392  001322  0EF0               	movlw	-16
  2393  001324  2603               	addwf	??_digitalRead^0,f,c
  2394  001326  0E01               	movlw	1
  2395  001328  6E04               	movwf	(??_digitalRead+1)^0,c
  2396  00132A  2A03               	incf	??_digitalRead^0,f,c
  2397  00132C  EF9A  F009         	goto	u1804
  2398  001330                     u1805:
  2399  001330  90D8               	bcf	status,0,c
  2400  001332  3604               	rlcf	(??_digitalRead+1)^0,f,c
  2401  001334                     u1804:
  2402  001334  2E03               	decfsz	??_digitalRead^0,f,c
  2403  001336  EF98  F009         	goto	u1805
  2404  00133A  5004               	movf	(??_digitalRead+1)^0,w,c
  2405  00133C  1482               	andwf	130,w,c	;volatile
  2406  00133E  6E05               	movwf	(??_digitalRead+2)^0,c
  2407  001340  5005               	movf	(??_digitalRead+2)^0,w,c
  2408  001342  6E01               	movwf	?_digitalRead^0,c
  2409  001344  6A02               	clrf	(?_digitalRead+1)^0,c
  2410  001346  EFEF  F009         	goto	l143
  2411  00134A                     l1868:
  2412  00134A  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  2413  00134C  EFB3  F009         	goto	u1810
  2414  001350  5002               	movf	(digitalRead@pin+1)^0,w,c
  2415  001352  E107               	bnz	u1811
  2416  001354  0E20               	movlw	32
  2417  001356  5C01               	subwf	digitalRead@pin^0,w,c
  2418  001358  B0D8               	btfsc	status,0,c
  2419  00135A  EFB1  F009         	goto	u1811
  2420  00135E  EFB3  F009         	goto	u1810
  2421  001362                     u1811:
  2422  001362  EFC9  F009         	goto	l1876
  2423  001366                     u1810:
  2424  001366                     
  2425                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  2426  001366  C001  F003         	movff	digitalRead@pin,??_digitalRead
  2427  00136A  0EE8               	movlw	-24
  2428  00136C  2603               	addwf	??_digitalRead^0,f,c
  2429  00136E  0E01               	movlw	1
  2430  001370  6E04               	movwf	(??_digitalRead+1)^0,c
  2431  001372  2A03               	incf	??_digitalRead^0,f,c
  2432  001374  EFBE  F009         	goto	u1824
  2433  001378                     u1825:
  2434  001378  90D8               	bcf	status,0,c
  2435  00137A  3604               	rlcf	(??_digitalRead+1)^0,f,c
  2436  00137C                     u1824:
  2437  00137C  2E03               	decfsz	??_digitalRead^0,f,c
  2438  00137E  EFBC  F009         	goto	u1825
  2439  001382  5004               	movf	(??_digitalRead+1)^0,w,c
  2440  001384  1483               	andwf	131,w,c	;volatile
  2441  001386  6E05               	movwf	(??_digitalRead+2)^0,c
  2442  001388  5005               	movf	(??_digitalRead+2)^0,w,c
  2443  00138A  6E01               	movwf	?_digitalRead^0,c
  2444  00138C  6A02               	clrf	(?_digitalRead+1)^0,c
  2445  00138E  EFEF  F009         	goto	l143
  2446  001392                     l1876:
  2447  001392  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  2448  001394  EFD7  F009         	goto	u1830
  2449  001398  5002               	movf	(digitalRead@pin+1)^0,w,c
  2450  00139A  E107               	bnz	u1831
  2451  00139C  0E28               	movlw	40
  2452  00139E  5C01               	subwf	digitalRead@pin^0,w,c
  2453  0013A0  B0D8               	btfsc	status,0,c
  2454  0013A2  EFD5  F009         	goto	u1831
  2455  0013A6  EFD7  F009         	goto	u1830
  2456  0013AA                     u1831:
  2457  0013AA  EFED  F009         	goto	l148
  2458  0013AE                     u1830:
  2459  0013AE                     
  2460                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  2461  0013AE  C001  F003         	movff	digitalRead@pin,??_digitalRead
  2462  0013B2  0EE0               	movlw	-32
  2463  0013B4  2603               	addwf	??_digitalRead^0,f,c
  2464  0013B6  0E01               	movlw	1
  2465  0013B8  6E04               	movwf	(??_digitalRead+1)^0,c
  2466  0013BA  2A03               	incf	??_digitalRead^0,f,c
  2467  0013BC  EFE2  F009         	goto	u1844
  2468  0013C0                     u1845:
  2469  0013C0  90D8               	bcf	status,0,c
  2470  0013C2  3604               	rlcf	(??_digitalRead+1)^0,f,c
  2471  0013C4                     u1844:
  2472  0013C4  2E03               	decfsz	??_digitalRead^0,f,c
  2473  0013C6  EFE0  F009         	goto	u1845
  2474  0013CA  5004               	movf	(??_digitalRead+1)^0,w,c
  2475  0013CC  1484               	andwf	132,w,c	;volatile
  2476  0013CE  6E05               	movwf	(??_digitalRead+2)^0,c
  2477  0013D0  5005               	movf	(??_digitalRead+2)^0,w,c
  2478  0013D2  6E01               	movwf	?_digitalRead^0,c
  2479  0013D4  6A02               	clrf	(?_digitalRead+1)^0,c
  2480  0013D6  EFEF  F009         	goto	l143
  2481  0013DA                     l148:
  2482  0013DA                     
  2483                           ;io.c: 51:     return -1;
  2484  0013DA  6801               	setf	?_digitalRead^0,c
  2485  0013DC  6802               	setf	(?_digitalRead+1)^0,c
  2486  0013DE                     l143:
  2487  0013DE  0012               	return		;funcret
  2488  0013E0                     __end_of_digitalRead:
  2489                           	callstack 0
  2490                           
  2491 ;; *************** function _cronometro *****************
  2492 ;; Defined at:
  2493 ;;		line 17 in file "newmain.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;  contador        2   16[COMRAM] int 
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;  tempo           4   20[COMRAM] float 
  2498 ;;  cont            2   24[COMRAM] int 
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      void 
  2501 ;; Registers used:
  2502 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2508 ;;      Params:         2       0       0       0       0       0       0
  2509 ;;      Locals:         6       0       0       0       0       0       0
  2510 ;;      Temps:          2       0       0       0       0       0       0
  2511 ;;      Totals:        10       0       0       0       0       0       0
  2512 ;;Total ram usage:       10 bytes
  2513 ;; Hardware stack levels used: 1
  2514 ;; Hardware stack levels required when called: 3
  2515 ;; This function calls:
  2516 ;;		___awdiv
  2517 ;;		___awmod
  2518 ;;		___fladd
  2519 ;;		___flge
  2520 ;;		_digitalWrite
  2521 ;;		_soWrite
  2522 ;; This function is called by:
  2523 ;;		_main
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527                           	psect	text17
  2528  000B4E                     __ptext17:
  2529                           	callstack 0
  2530  000B4E                     _cronometro:
  2531                           	callstack 27
  2532  000B4E                     
  2533                           ;newmain.c: 18:     float tempo;;newmain.c: 19:     int cont;;newmain.c: 21:     for (co
      +                          nt = contador; cont >= 0; cont--) {
  2534  000B4E  C011  F019         	movff	cronometro@contador,cronometro@cont
  2535  000B52  C012  F01A         	movff	cronometro@contador+1,cronometro@cont+1
  2536  000B56                     l2194:
  2537  000B56  BE1A               	btfsc	(cronometro@cont+1)^0,7,c
  2538  000B58  EFB2  F005         	goto	u2410
  2539  000B5C  EFB0  F005         	goto	u2411
  2540  000B60                     u2411:
  2541  000B60  EFB4  F005         	goto	l2198
  2542  000B64                     u2410:
  2543  000B64  EFEC  F006         	goto	l45
  2544  000B68                     l2198:
  2545                           
  2546                           ;newmain.c: 22:             v0 = ((cont / 100) % 10);
  2547  000B68  0E00               	movlw	0
  2548  000B6A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2549  000B6C  0E64               	movlw	100
  2550  000B6E  6E03               	movwf	___awdiv@divisor^0,c
  2551  000B70  C019  F001         	movff	cronometro@cont,___awdiv@dividend
  2552  000B74  C01A  F002         	movff	cronometro@cont+1,___awdiv@dividend+1
  2553  000B78  EC84  F00B         	call	___awdiv	;wreg free
  2554  000B7C  C001  F009         	movff	?___awdiv,___awmod@dividend
  2555  000B80  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  2556  000B84  0E00               	movlw	0
  2557  000B86  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2558  000B88  0E0A               	movlw	10
  2559  000B8A  6E0B               	movwf	___awmod@divisor^0,c
  2560  000B8C  EC40  F00C         	call	___awmod	;wreg free
  2561  000B90  5009               	movf	?___awmod^0,w,c
  2562  000B92  6E2E               	movwf	_v0^0,c
  2563                           
  2564                           ;newmain.c: 23:             v1 = ((cont / 1000) % 10);
  2565  000B94  0E03               	movlw	3
  2566  000B96  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2567  000B98  0EE8               	movlw	232
  2568  000B9A  6E03               	movwf	___awdiv@divisor^0,c
  2569  000B9C  C019  F001         	movff	cronometro@cont,___awdiv@dividend
  2570  000BA0  C01A  F002         	movff	cronometro@cont+1,___awdiv@dividend+1
  2571  000BA4  EC84  F00B         	call	___awdiv	;wreg free
  2572  000BA8  C001  F009         	movff	?___awdiv,___awmod@dividend
  2573  000BAC  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  2574  000BB0  0E00               	movlw	0
  2575  000BB2  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2576  000BB4  0E0A               	movlw	10
  2577  000BB6  6E0B               	movwf	___awmod@divisor^0,c
  2578  000BB8  EC40  F00C         	call	___awmod	;wreg free
  2579  000BBC  5009               	movf	?___awmod^0,w,c
  2580  000BBE  6E2D               	movwf	_v1^0,c
  2581                           
  2582                           ;newmain.c: 24:             v2 = ((cont / 10000) % 10);
  2583  000BC0  0E27               	movlw	39
  2584  000BC2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2585  000BC4  0E10               	movlw	16
  2586  000BC6  6E03               	movwf	___awdiv@divisor^0,c
  2587  000BC8  C019  F001         	movff	cronometro@cont,___awdiv@dividend
  2588  000BCC  C01A  F002         	movff	cronometro@cont+1,___awdiv@dividend+1
  2589  000BD0  EC84  F00B         	call	___awdiv	;wreg free
  2590  000BD4  C001  F009         	movff	?___awdiv,___awmod@dividend
  2591  000BD8  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  2592  000BDC  0E00               	movlw	0
  2593  000BDE  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2594  000BE0  0E0A               	movlw	10
  2595  000BE2  6E0B               	movwf	___awmod@divisor^0,c
  2596  000BE4  EC40  F00C         	call	___awmod	;wreg free
  2597  000BE8  5009               	movf	?___awmod^0,w,c
  2598  000BEA  6E2C               	movwf	_v2^0,c
  2599                           
  2600                           ;newmain.c: 26:             digitalWrite(PIN_D0, 0);
  2601  000BEC  0E00               	movlw	0
  2602  000BEE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2603  000BF0  0E18               	movlw	24
  2604  000BF2  6E01               	movwf	digitalWrite@pin^0,c
  2605  000BF4  0E00               	movlw	0
  2606  000BF6  6E04               	movwf	(digitalWrite@value+1)^0,c
  2607  000BF8  0E00               	movlw	0
  2608  000BFA  6E03               	movwf	digitalWrite@value^0,c
  2609  000BFC  EC14  F008         	call	_digitalWrite	;wreg free
  2610                           
  2611                           ;newmain.c: 27:             digitalWrite(PIN_D1, 0);
  2612  000C00  0E00               	movlw	0
  2613  000C02  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2614  000C04  0E19               	movlw	25
  2615  000C06  6E01               	movwf	digitalWrite@pin^0,c
  2616  000C08  0E00               	movlw	0
  2617  000C0A  6E04               	movwf	(digitalWrite@value+1)^0,c
  2618  000C0C  0E00               	movlw	0
  2619  000C0E  6E03               	movwf	digitalWrite@value^0,c
  2620  000C10  EC14  F008         	call	_digitalWrite	;wreg free
  2621                           
  2622                           ;newmain.c: 28:             digitalWrite(PIN_D2, 0);
  2623  000C14  0E00               	movlw	0
  2624  000C16  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2625  000C18  0E1A               	movlw	26
  2626  000C1A  6E01               	movwf	digitalWrite@pin^0,c
  2627  000C1C  0E00               	movlw	0
  2628  000C1E  6E04               	movwf	(digitalWrite@value+1)^0,c
  2629  000C20  0E00               	movlw	0
  2630  000C22  6E03               	movwf	digitalWrite@value^0,c
  2631  000C24  EC14  F008         	call	_digitalWrite	;wreg free
  2632                           
  2633                           ;newmain.c: 29:             digitalWrite(PIN_D3, 0);
  2634  000C28  0E00               	movlw	0
  2635  000C2A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2636  000C2C  0E1B               	movlw	27
  2637  000C2E  6E01               	movwf	digitalWrite@pin^0,c
  2638  000C30  0E00               	movlw	0
  2639  000C32  6E04               	movwf	(digitalWrite@value+1)^0,c
  2640  000C34  0E00               	movlw	0
  2641  000C36  6E03               	movwf	digitalWrite@value^0,c
  2642  000C38  EC14  F008         	call	_digitalWrite	;wreg free
  2643                           
  2644                           ;newmain.c: 31:             soWrite(0x00);
  2645  000C3C  0E00               	movlw	0
  2646  000C3E  6E08               	movwf	(soWrite@value+1)^0,c
  2647  000C40  0E00               	movlw	0
  2648  000C42  6E07               	movwf	soWrite@value^0,c
  2649  000C44  EC57  F00D         	call	_soWrite	;wreg free
  2650                           
  2651                           ;newmain.c: 33:             switch (display) {
  2652  000C48  EF78  F006         	goto	l2222
  2653  000C4C                     l2200:
  2654                           
  2655                           ;newmain.c: 35:                     soWrite(valor[v2]);
  2656  000C4C  0E11               	movlw	low _valor
  2657  000C4E  242C               	addwf	_v2^0,w,c
  2658  000C50  6EF6               	movwf	tblptrl,c
  2659  000C52  6AF7               	clrf	tblptrh,c
  2660  000C54  0E06               	movlw	high _valor
  2661  000C56  22F7               	addwfc	tblptrh,f,c
  2662  000C58                     	if	0	;There are less than 3 active tblptr bytes
  2663  000C58                     	endif
  2664  000C58  0008               	tblrd		*
  2665  000C5A  50F5               	movf	tablat,w,c
  2666  000C5C  6E07               	movwf	soWrite@value^0,c
  2667  000C5E  6A08               	clrf	(soWrite@value+1)^0,c
  2668  000C60  EC57  F00D         	call	_soWrite	;wreg free
  2669  000C64                     
  2670                           ;newmain.c: 36:                     digitalWrite(PIN_D1, 1);
  2671  000C64  0E00               	movlw	0
  2672  000C66  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2673  000C68  0E19               	movlw	25
  2674  000C6A  6E01               	movwf	digitalWrite@pin^0,c
  2675  000C6C  0E00               	movlw	0
  2676  000C6E  6E04               	movwf	(digitalWrite@value+1)^0,c
  2677  000C70  0E01               	movlw	1
  2678  000C72  6E03               	movwf	digitalWrite@value^0,c
  2679  000C74  EC14  F008         	call	_digitalWrite	;wreg free
  2680  000C78                     
  2681                           ;newmain.c: 37:                     display = 1;
  2682  000C78  0E01               	movlw	1
  2683  000C7A  6E2F               	movwf	_display^0,c
  2684                           
  2685                           ;newmain.c: 38:                     break;
  2686  000C7C  EF91  F006         	goto	l2224
  2687  000C80                     l2206:
  2688                           
  2689                           ;newmain.c: 40:                     soWrite(valor[v1]);
  2690  000C80  0E11               	movlw	low _valor
  2691  000C82  242D               	addwf	_v1^0,w,c
  2692  000C84  6EF6               	movwf	tblptrl,c
  2693  000C86  6AF7               	clrf	tblptrh,c
  2694  000C88  0E06               	movlw	high _valor
  2695  000C8A  22F7               	addwfc	tblptrh,f,c
  2696  000C8C                     	if	0	;There are less than 3 active tblptr bytes
  2697  000C8C                     	endif
  2698  000C8C  0008               	tblrd		*
  2699  000C8E  50F5               	movf	tablat,w,c
  2700  000C90  6E07               	movwf	soWrite@value^0,c
  2701  000C92  6A08               	clrf	(soWrite@value+1)^0,c
  2702  000C94  EC57  F00D         	call	_soWrite	;wreg free
  2703  000C98                     
  2704                           ;newmain.c: 41:                     digitalWrite(PIN_D2, 1);
  2705  000C98  0E00               	movlw	0
  2706  000C9A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2707  000C9C  0E1A               	movlw	26
  2708  000C9E  6E01               	movwf	digitalWrite@pin^0,c
  2709  000CA0  0E00               	movlw	0
  2710  000CA2  6E04               	movwf	(digitalWrite@value+1)^0,c
  2711  000CA4  0E01               	movlw	1
  2712  000CA6  6E03               	movwf	digitalWrite@value^0,c
  2713  000CA8  EC14  F008         	call	_digitalWrite	;wreg free
  2714  000CAC                     
  2715                           ;newmain.c: 42:                     display = 2;
  2716  000CAC  0E02               	movlw	2
  2717  000CAE  6E2F               	movwf	_display^0,c
  2718                           
  2719                           ;newmain.c: 43:                     break;
  2720  000CB0  EF91  F006         	goto	l2224
  2721  000CB4                     l2212:
  2722                           
  2723                           ;newmain.c: 45:                     soWrite(valor[v0]);
  2724  000CB4  0E11               	movlw	low _valor
  2725  000CB6  242E               	addwf	_v0^0,w,c
  2726  000CB8  6EF6               	movwf	tblptrl,c
  2727  000CBA  6AF7               	clrf	tblptrh,c
  2728  000CBC  0E06               	movlw	high _valor
  2729  000CBE  22F7               	addwfc	tblptrh,f,c
  2730  000CC0                     	if	0	;There are less than 3 active tblptr bytes
  2731  000CC0                     	endif
  2732  000CC0  0008               	tblrd		*
  2733  000CC2  50F5               	movf	tablat,w,c
  2734  000CC4  6E07               	movwf	soWrite@value^0,c
  2735  000CC6  6A08               	clrf	(soWrite@value+1)^0,c
  2736  000CC8  EC57  F00D         	call	_soWrite	;wreg free
  2737  000CCC                     
  2738                           ;newmain.c: 46:                     digitalWrite(PIN_D3, 1);
  2739  000CCC  0E00               	movlw	0
  2740  000CCE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2741  000CD0  0E1B               	movlw	27
  2742  000CD2  6E01               	movwf	digitalWrite@pin^0,c
  2743  000CD4  0E00               	movlw	0
  2744  000CD6  6E04               	movwf	(digitalWrite@value+1)^0,c
  2745  000CD8  0E01               	movlw	1
  2746  000CDA  6E03               	movwf	digitalWrite@value^0,c
  2747  000CDC  EC14  F008         	call	_digitalWrite	;wreg free
  2748  000CE0                     
  2749                           ;newmain.c: 47:                     display = 3;
  2750  000CE0  0E03               	movlw	3
  2751  000CE2  6E2F               	movwf	_display^0,c
  2752                           
  2753                           ;newmain.c: 48:                     break;
  2754  000CE4  EF91  F006         	goto	l2224
  2755  000CE8                     l2218:
  2756                           
  2757                           ;newmain.c: 50:                     display = 0;
  2758  000CE8  0E00               	movlw	0
  2759  000CEA  6E2F               	movwf	_display^0,c
  2760                           
  2761                           ;newmain.c: 51:                     break;
  2762  000CEC  EF91  F006         	goto	l2224
  2763  000CF0                     l2222:
  2764  000CF0  502F               	movf	_display^0,w,c
  2765  000CF2  6E13               	movwf	??_cronometro^0,c
  2766  000CF4  6A14               	clrf	(??_cronometro+1)^0,c
  2767                           
  2768                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2769                           ; Switch size 1, requested type "simple"
  2770                           ; Number of cases is 1, Range of values is 0 to 0
  2771                           ; switch strategies available:
  2772                           ; Name         Instructions Cycles
  2773                           ; simple_byte            4     3 (average)
  2774                           ;	Chosen strategy is simple_byte
  2775  000CF6  5014               	movf	(??_cronometro+1)^0,w,c
  2776  000CF8  0A00               	xorlw	0	; case 0
  2777  000CFA  B4D8               	btfsc	status,2,c
  2778  000CFC  EF82  F006         	goto	l2406
  2779  000D00  EF74  F006         	goto	l2218
  2780  000D04                     l2406:
  2781                           
  2782                           ; Switch size 1, requested type "simple"
  2783                           ; Number of cases is 3, Range of values is 0 to 2
  2784                           ; switch strategies available:
  2785                           ; Name         Instructions Cycles
  2786                           ; simple_byte           10     6 (average)
  2787                           ;	Chosen strategy is simple_byte
  2788  000D04  5013               	movf	??_cronometro^0,w,c
  2789  000D06  0A00               	xorlw	0	; case 0
  2790  000D08  B4D8               	btfsc	status,2,c
  2791  000D0A  EF26  F006         	goto	l2200
  2792  000D0E  0A01               	xorlw	1	; case 1
  2793  000D10  B4D8               	btfsc	status,2,c
  2794  000D12  EF40  F006         	goto	l2206
  2795  000D16  0A03               	xorlw	3	; case 2
  2796  000D18  B4D8               	btfsc	status,2,c
  2797  000D1A  EF5A  F006         	goto	l2212
  2798  000D1E  EF74  F006         	goto	l2218
  2799  000D22                     l2224:
  2800                           
  2801                           ;newmain.c: 53:             for (tempo = 0; tempo < 50; tempo++);
  2802  000D22  0E00               	movlw	0
  2803  000D24  6E15               	movwf	cronometro@tempo^0,c
  2804  000D26  0E00               	movlw	0
  2805  000D28  6E16               	movwf	(cronometro@tempo+1)^0,c
  2806  000D2A  0E00               	movlw	0
  2807  000D2C  6E17               	movwf	(cronometro@tempo+2)^0,c
  2808  000D2E  0E00               	movlw	0
  2809  000D30  6E18               	movwf	(cronometro@tempo+3)^0,c
  2810  000D32  C015  F001         	movff	cronometro@tempo,___flge@ff1
  2811  000D36  C016  F002         	movff	cronometro@tempo+1,___flge@ff1+1
  2812  000D3A  C017  F003         	movff	cronometro@tempo+2,___flge@ff1+2
  2813  000D3E  C018  F004         	movff	cronometro@tempo+3,___flge@ff1+3
  2814  000D42  0E00               	movlw	0
  2815  000D44  6E05               	movwf	___flge@ff2^0,c
  2816  000D46  0E00               	movlw	0
  2817  000D48  6E06               	movwf	(___flge@ff2+1)^0,c
  2818  000D4A  0E48               	movlw	72
  2819  000D4C  6E07               	movwf	(___flge@ff2+2)^0,c
  2820  000D4E  0E42               	movlw	66
  2821  000D50  6E08               	movwf	(___flge@ff2+3)^0,c
  2822  000D52  EC8B  F00A         	call	___flge	;wreg free
  2823  000D56  A0D8               	btfss	status,0,c
  2824  000D58  EFB0  F006         	goto	u2421
  2825  000D5C  EFB2  F006         	goto	u2420
  2826  000D60                     u2421:
  2827  000D60  EFB4  F006         	goto	l2230
  2828  000D64                     u2420:
  2829  000D64  EFE7  F006         	goto	l2232
  2830  000D68                     l2230:
  2831  000D68  C015  F001         	movff	cronometro@tempo,___fladd@b
  2832  000D6C  C016  F002         	movff	cronometro@tempo+1,___fladd@b+1
  2833  000D70  C017  F003         	movff	cronometro@tempo+2,___fladd@b+2
  2834  000D74  C018  F004         	movff	cronometro@tempo+3,___fladd@b+3
  2835  000D78  0E00               	movlw	0
  2836  000D7A  6E05               	movwf	___fladd@a^0,c
  2837  000D7C  0E00               	movlw	0
  2838  000D7E  6E06               	movwf	(___fladd@a+1)^0,c
  2839  000D80  0E80               	movlw	128
  2840  000D82  6E07               	movwf	(___fladd@a+2)^0,c
  2841  000D84  0E3F               	movlw	63
  2842  000D86  6E08               	movwf	(___fladd@a+3)^0,c
  2843  000D88  EC47  F003         	call	___fladd	;wreg free
  2844  000D8C  C001  F015         	movff	?___fladd,cronometro@tempo
  2845  000D90  C002  F016         	movff	?___fladd+1,cronometro@tempo+1
  2846  000D94  C003  F017         	movff	?___fladd+2,cronometro@tempo+2
  2847  000D98  C004  F018         	movff	?___fladd+3,cronometro@tempo+3
  2848  000D9C  C015  F001         	movff	cronometro@tempo,___flge@ff1
  2849  000DA0  C016  F002         	movff	cronometro@tempo+1,___flge@ff1+1
  2850  000DA4  C017  F003         	movff	cronometro@tempo+2,___flge@ff1+2
  2851  000DA8  C018  F004         	movff	cronometro@tempo+3,___flge@ff1+3
  2852  000DAC  0E00               	movlw	0
  2853  000DAE  6E05               	movwf	___flge@ff2^0,c
  2854  000DB0  0E00               	movlw	0
  2855  000DB2  6E06               	movwf	(___flge@ff2+1)^0,c
  2856  000DB4  0E48               	movlw	72
  2857  000DB6  6E07               	movwf	(___flge@ff2+2)^0,c
  2858  000DB8  0E42               	movlw	66
  2859  000DBA  6E08               	movwf	(___flge@ff2+3)^0,c
  2860  000DBC  EC8B  F00A         	call	___flge	;wreg free
  2861  000DC0  A0D8               	btfss	status,0,c
  2862  000DC2  EFE5  F006         	goto	u2431
  2863  000DC6  EFE7  F006         	goto	u2430
  2864  000DCA                     u2431:
  2865  000DCA  EFB4  F006         	goto	l2230
  2866  000DCE                     u2430:
  2867  000DCE                     l2232:
  2868                           
  2869                           ;newmain.c: 54:         }
  2870  000DCE  0619               	decf	cronometro@cont^0,f,c
  2871  000DD0  A0D8               	btfss	status,0,c
  2872  000DD2  061A               	decf	(cronometro@cont+1)^0,f,c
  2873  000DD4  EFAB  F005         	goto	l2194
  2874  000DD8                     l45:
  2875  000DD8  0012               	return		;funcret
  2876  000DDA                     __end_of_cronometro:
  2877                           	callstack 0
  2878                           
  2879 ;; *************** function _soWrite *****************
  2880 ;; Defined at:
  2881 ;;		line 18 in file "so.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;  value           2    6[COMRAM] int 
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;  i               1    8[COMRAM] unsigned char 
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      void 
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, status,0, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2895 ;;      Params:         2       0       0       0       0       0       0
  2896 ;;      Locals:         1       0       0       0       0       0       0
  2897 ;;      Temps:          0       0       0       0       0       0       0
  2898 ;;      Totals:         3       0       0       0       0       0       0
  2899 ;;Total ram usage:        3 bytes
  2900 ;; Hardware stack levels used: 1
  2901 ;; Hardware stack levels required when called: 2
  2902 ;; This function calls:
  2903 ;;		_PulseClockData
  2904 ;;		_PulseEnClock
  2905 ;;		_digitalWrite
  2906 ;; This function is called by:
  2907 ;;		_cronometro
  2908 ;;		_pushNibble
  2909 ;;		_pushByte
  2910 ;;		_kpDebounce
  2911 ;;		_ssdUpdate
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915                           	psect	text18
  2916  001AAE                     __ptext18:
  2917                           	callstack 0
  2918  001AAE                     _soWrite:
  2919                           	callstack 25
  2920  001AAE                     
  2921                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  2922  001AAE  0E00               	movlw	0
  2923  001AB0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2924  001AB2  0E08               	movlw	8
  2925  001AB4  6E01               	movwf	digitalWrite@pin^0,c
  2926  001AB6  0E00               	movlw	0
  2927  001AB8  6E04               	movwf	(digitalWrite@value+1)^0,c
  2928  001ABA  0E00               	movlw	0
  2929  001ABC  6E03               	movwf	digitalWrite@value^0,c
  2930  001ABE  EC14  F008         	call	_digitalWrite	;wreg free
  2931  001AC2                     
  2932                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  2933  001AC2  0E00               	movlw	0
  2934  001AC4  6E09               	movwf	soWrite@i^0,c
  2935  001AC6                     l1776:
  2936                           
  2937                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  2938  001AC6  0E00               	movlw	0
  2939  001AC8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2940  001ACA  0E1E               	movlw	30
  2941  001ACC  6E01               	movwf	digitalWrite@pin^0,c
  2942  001ACE  0E80               	movlw	128
  2943  001AD0  1407               	andwf	soWrite@value^0,w,c
  2944  001AD2  6E03               	movwf	digitalWrite@value^0,c
  2945  001AD4  6A04               	clrf	(digitalWrite@value+1)^0,c
  2946  001AD6  EC14  F008         	call	_digitalWrite	;wreg free
  2947                           
  2948                           ;so.c: 23:   PulseClockData();
  2949  001ADA  EC04  F00E         	call	_PulseClockData	;wreg free
  2950  001ADE                     
  2951                           ;so.c: 24:   value <<= 1;
  2952  001ADE  90D8               	bcf	status,0,c
  2953  001AE0  3607               	rlcf	soWrite@value^0,f,c
  2954  001AE2  3608               	rlcf	(soWrite@value+1)^0,f,c
  2955  001AE4                     
  2956                           ;so.c: 25:  }
  2957  001AE4  2A09               	incf	soWrite@i^0,f,c
  2958  001AE6  0E07               	movlw	7
  2959  001AE8  6409               	cpfsgt	soWrite@i^0,c
  2960  001AEA  EF79  F00D         	goto	u1531
  2961  001AEE  EF7B  F00D         	goto	u1530
  2962  001AF2                     u1531:
  2963  001AF2  EF63  F00D         	goto	l1776
  2964  001AF6                     u1530:
  2965  001AF6                     
  2966                           ;so.c: 26:  PulseEnClock();
  2967  001AF6  ECEF  F00D         	call	_PulseEnClock	;wreg free
  2968  001AFA  0012               	return		;funcret
  2969  001AFC                     __end_of_soWrite:
  2970                           	callstack 0
  2971                           
  2972 ;; *************** function _PulseEnClock *****************
  2973 ;; Defined at:
  2974 ;;		line 9 in file "so.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;		None
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;		None
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg, status,2, status,0, cstack
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2988 ;;      Params:         0       0       0       0       0       0       0
  2989 ;;      Locals:         0       0       0       0       0       0       0
  2990 ;;      Temps:          0       0       0       0       0       0       0
  2991 ;;      Totals:         0       0       0       0       0       0       0
  2992 ;;Total ram usage:        0 bytes
  2993 ;; Hardware stack levels used: 1
  2994 ;; Hardware stack levels required when called: 1
  2995 ;; This function calls:
  2996 ;;		_digitalWrite
  2997 ;; This function is called by:
  2998 ;;		_soWrite
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           	psect	text19
  3003  001BDE                     __ptext19:
  3004                           	callstack 0
  3005  001BDE                     _PulseEnClock:
  3006                           	callstack 25
  3007  001BDE                     
  3008                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  3009  001BDE  0E00               	movlw	0
  3010  001BE0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3011  001BE2  0E1F               	movlw	31
  3012  001BE4  6E01               	movwf	digitalWrite@pin^0,c
  3013  001BE6  0E00               	movlw	0
  3014  001BE8  6E04               	movwf	(digitalWrite@value+1)^0,c
  3015  001BEA  0E01               	movlw	1
  3016  001BEC  6E03               	movwf	digitalWrite@value^0,c
  3017  001BEE  EC14  F008         	call	_digitalWrite	;wreg free
  3018                           
  3019                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  3020  001BF2  0E00               	movlw	0
  3021  001BF4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3022  001BF6  0E1F               	movlw	31
  3023  001BF8  6E01               	movwf	digitalWrite@pin^0,c
  3024  001BFA  0E00               	movlw	0
  3025  001BFC  6E04               	movwf	(digitalWrite@value+1)^0,c
  3026  001BFE  0E00               	movlw	0
  3027  001C00  6E03               	movwf	digitalWrite@value^0,c
  3028  001C02  EC14  F008         	call	_digitalWrite	;wreg free
  3029  001C06  0012               	return		;funcret
  3030  001C08                     __end_of_PulseEnClock:
  3031                           	callstack 0
  3032                           
  3033 ;; *************** function _PulseClockData *****************
  3034 ;; Defined at:
  3035 ;;		line 14 in file "so.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;		None
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;		None
  3040 ;; Return value:  Size  Location     Type
  3041 ;;                  1    wreg      void 
  3042 ;; Registers used:
  3043 ;;		wreg, status,2, status,0, cstack
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3049 ;;      Params:         0       0       0       0       0       0       0
  3050 ;;      Locals:         0       0       0       0       0       0       0
  3051 ;;      Temps:          0       0       0       0       0       0       0
  3052 ;;      Totals:         0       0       0       0       0       0       0
  3053 ;;Total ram usage:        0 bytes
  3054 ;; Hardware stack levels used: 1
  3055 ;; Hardware stack levels required when called: 1
  3056 ;; This function calls:
  3057 ;;		_digitalWrite
  3058 ;; This function is called by:
  3059 ;;		_soWrite
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063                           	psect	text20
  3064  001C08                     __ptext20:
  3065                           	callstack 0
  3066  001C08                     _PulseClockData:
  3067                           	callstack 25
  3068  001C08                     
  3069                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  3070  001C08  0E00               	movlw	0
  3071  001C0A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3072  001C0C  0E08               	movlw	8
  3073  001C0E  6E01               	movwf	digitalWrite@pin^0,c
  3074  001C10  0E00               	movlw	0
  3075  001C12  6E04               	movwf	(digitalWrite@value+1)^0,c
  3076  001C14  0E01               	movlw	1
  3077  001C16  6E03               	movwf	digitalWrite@value^0,c
  3078  001C18  EC14  F008         	call	_digitalWrite	;wreg free
  3079                           
  3080                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  3081  001C1C  0E00               	movlw	0
  3082  001C1E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3083  001C20  0E08               	movlw	8
  3084  001C22  6E01               	movwf	digitalWrite@pin^0,c
  3085  001C24  0E00               	movlw	0
  3086  001C26  6E04               	movwf	(digitalWrite@value+1)^0,c
  3087  001C28  0E00               	movlw	0
  3088  001C2A  6E03               	movwf	digitalWrite@value^0,c
  3089  001C2C  EC14  F008         	call	_digitalWrite	;wreg free
  3090  001C30  0012               	return		;funcret
  3091  001C32                     __end_of_PulseClockData:
  3092                           	callstack 0
  3093                           
  3094 ;; *************** function _digitalWrite *****************
  3095 ;; Defined at:
  3096 ;;		line 14 in file "io.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;  pin             2    0[COMRAM] int 
  3099 ;;  value           2    2[COMRAM] int 
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;		None
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      void 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2, status,0
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3111 ;;      Params:         4       0       0       0       0       0       0
  3112 ;;      Locals:         0       0       0       0       0       0       0
  3113 ;;      Temps:          2       0       0       0       0       0       0
  3114 ;;      Totals:         6       0       0       0       0       0       0
  3115 ;;Total ram usage:        6 bytes
  3116 ;; Hardware stack levels used: 1
  3117 ;; This function calls:
  3118 ;;		Nothing
  3119 ;; This function is called by:
  3120 ;;		_cronometro
  3121 ;;		_PulseEnClock
  3122 ;;		_PulseClockData
  3123 ;;		_soWrite
  3124 ;;		_pulseEnablePin
  3125 ;;		_pushNibble
  3126 ;;		_pushByte
  3127 ;;		_ssdUpdate
  3128 ;; This function uses a non-reentrant model
  3129 ;;
  3130                           
  3131                           	psect	text21
  3132  001028                     __ptext21:
  3133                           	callstack 0
  3134  001028                     _digitalWrite:
  3135                           	callstack 26
  3136  001028                     
  3137                           ;io.c: 16:     if(pin <8){
  3138  001028  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3139  00102A  EF22  F008         	goto	u1330
  3140  00102E  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3141  001030  E107               	bnz	u1331
  3142  001032  0E08               	movlw	8
  3143  001034  5C01               	subwf	digitalWrite@pin^0,w,c
  3144  001036  B0D8               	btfsc	status,0,c
  3145  001038  EF20  F008         	goto	u1331
  3146  00103C  EF22  F008         	goto	u1330
  3147  001040                     u1331:
  3148  001040  EF4C  F008         	goto	l1732
  3149  001044                     u1330:
  3150  001044                     
  3151                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  3152  001044  5003               	movf	digitalWrite@value^0,w,c
  3153  001046  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3154  001048  B4D8               	btfsc	status,2,c
  3155  00104A  EF29  F008         	goto	u1341
  3156  00104E  EF2B  F008         	goto	u1340
  3157  001052                     u1341:
  3158  001052  EF3B  F008         	goto	l1730
  3159  001056                     u1340:
  3160  001056  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3161  00105A  0E01               	movlw	1
  3162  00105C  6E06               	movwf	(??_digitalWrite+1)^0,c
  3163  00105E  2A05               	incf	??_digitalWrite^0,f,c
  3164  001060  EF34  F008         	goto	u1354
  3165  001064                     u1355:
  3166  001064  90D8               	bcf	status,0,c
  3167  001066  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3168  001068                     u1354:
  3169  001068  2E05               	decfsz	??_digitalWrite^0,f,c
  3170  00106A  EF32  F008         	goto	u1355
  3171  00106E  5006               	movf	(??_digitalWrite+1)^0,w,c
  3172  001070  1280               	iorwf	128,f,c	;volatile
  3173  001072  EF3A  F009         	goto	l139
  3174  001076                     l1730:
  3175  001076  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3176  00107A  0E01               	movlw	1
  3177  00107C  6E06               	movwf	(??_digitalWrite+1)^0,c
  3178  00107E  2A05               	incf	??_digitalWrite^0,f,c
  3179  001080  EF44  F008         	goto	u1364
  3180  001084                     u1365:
  3181  001084  90D8               	bcf	status,0,c
  3182  001086  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3183  001088                     u1364:
  3184  001088  2E05               	decfsz	??_digitalWrite^0,f,c
  3185  00108A  EF42  F008         	goto	u1365
  3186  00108E  5006               	movf	(??_digitalWrite+1)^0,w,c
  3187  001090  0AFF               	xorlw	255
  3188  001092  1680               	andwf	128,f,c	;volatile
  3189  001094  EF3A  F009         	goto	l139
  3190  001098                     l1732:
  3191  001098  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3192  00109A  EF5A  F008         	goto	u1370
  3193  00109E  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3194  0010A0  E107               	bnz	u1371
  3195  0010A2  0E10               	movlw	16
  3196  0010A4  5C01               	subwf	digitalWrite@pin^0,w,c
  3197  0010A6  B0D8               	btfsc	status,0,c
  3198  0010A8  EF58  F008         	goto	u1371
  3199  0010AC  EF5A  F008         	goto	u1370
  3200  0010B0                     u1371:
  3201  0010B0  EF88  F008         	goto	l1740
  3202  0010B4                     u1370:
  3203  0010B4                     
  3204                           ;io.c: 20:         pin -=8;
  3205  0010B4  0EF8               	movlw	248
  3206  0010B6  2601               	addwf	digitalWrite@pin^0,f,c
  3207  0010B8  0EFF               	movlw	255
  3208  0010BA  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3209                           
  3210                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  3211  0010BC  5003               	movf	digitalWrite@value^0,w,c
  3212  0010BE  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3213  0010C0  B4D8               	btfsc	status,2,c
  3214  0010C2  EF65  F008         	goto	u1381
  3215  0010C6  EF67  F008         	goto	u1380
  3216  0010CA                     u1381:
  3217  0010CA  EF77  F008         	goto	l1738
  3218  0010CE                     u1380:
  3219  0010CE  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3220  0010D2  0E01               	movlw	1
  3221  0010D4  6E06               	movwf	(??_digitalWrite+1)^0,c
  3222  0010D6  2A05               	incf	??_digitalWrite^0,f,c
  3223  0010D8  EF70  F008         	goto	u1394
  3224  0010DC                     u1395:
  3225  0010DC  90D8               	bcf	status,0,c
  3226  0010DE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3227  0010E0                     u1394:
  3228  0010E0  2E05               	decfsz	??_digitalWrite^0,f,c
  3229  0010E2  EF6E  F008         	goto	u1395
  3230  0010E6  5006               	movf	(??_digitalWrite+1)^0,w,c
  3231  0010E8  1281               	iorwf	129,f,c	;volatile
  3232  0010EA  EF3A  F009         	goto	l139
  3233  0010EE                     l1738:
  3234  0010EE  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3235  0010F2  0E01               	movlw	1
  3236  0010F4  6E06               	movwf	(??_digitalWrite+1)^0,c
  3237  0010F6  2A05               	incf	??_digitalWrite^0,f,c
  3238  0010F8  EF80  F008         	goto	u1404
  3239  0010FC                     u1405:
  3240  0010FC  90D8               	bcf	status,0,c
  3241  0010FE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3242  001100                     u1404:
  3243  001100  2E05               	decfsz	??_digitalWrite^0,f,c
  3244  001102  EF7E  F008         	goto	u1405
  3245  001106  5006               	movf	(??_digitalWrite+1)^0,w,c
  3246  001108  0AFF               	xorlw	255
  3247  00110A  1681               	andwf	129,f,c	;volatile
  3248  00110C  EF3A  F009         	goto	l139
  3249  001110                     l1740:
  3250  001110  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3251  001112  EF96  F008         	goto	u1410
  3252  001116  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3253  001118  E107               	bnz	u1411
  3254  00111A  0E18               	movlw	24
  3255  00111C  5C01               	subwf	digitalWrite@pin^0,w,c
  3256  00111E  B0D8               	btfsc	status,0,c
  3257  001120  EF94  F008         	goto	u1411
  3258  001124  EF96  F008         	goto	u1410
  3259  001128                     u1411:
  3260  001128  EFC4  F008         	goto	l1748
  3261  00112C                     u1410:
  3262  00112C                     
  3263                           ;io.c: 24:         pin -=16;
  3264  00112C  0EF0               	movlw	240
  3265  00112E  2601               	addwf	digitalWrite@pin^0,f,c
  3266  001130  0EFF               	movlw	255
  3267  001132  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3268                           
  3269                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  3270  001134  5003               	movf	digitalWrite@value^0,w,c
  3271  001136  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3272  001138  B4D8               	btfsc	status,2,c
  3273  00113A  EFA1  F008         	goto	u1421
  3274  00113E  EFA3  F008         	goto	u1420
  3275  001142                     u1421:
  3276  001142  EFB3  F008         	goto	l1746
  3277  001146                     u1420:
  3278  001146  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3279  00114A  0E01               	movlw	1
  3280  00114C  6E06               	movwf	(??_digitalWrite+1)^0,c
  3281  00114E  2A05               	incf	??_digitalWrite^0,f,c
  3282  001150  EFAC  F008         	goto	u1434
  3283  001154                     u1435:
  3284  001154  90D8               	bcf	status,0,c
  3285  001156  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3286  001158                     u1434:
  3287  001158  2E05               	decfsz	??_digitalWrite^0,f,c
  3288  00115A  EFAA  F008         	goto	u1435
  3289  00115E  5006               	movf	(??_digitalWrite+1)^0,w,c
  3290  001160  1282               	iorwf	130,f,c	;volatile
  3291  001162  EF3A  F009         	goto	l139
  3292  001166                     l1746:
  3293  001166  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3294  00116A  0E01               	movlw	1
  3295  00116C  6E06               	movwf	(??_digitalWrite+1)^0,c
  3296  00116E  2A05               	incf	??_digitalWrite^0,f,c
  3297  001170  EFBC  F008         	goto	u1444
  3298  001174                     u1445:
  3299  001174  90D8               	bcf	status,0,c
  3300  001176  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3301  001178                     u1444:
  3302  001178  2E05               	decfsz	??_digitalWrite^0,f,c
  3303  00117A  EFBA  F008         	goto	u1445
  3304  00117E  5006               	movf	(??_digitalWrite+1)^0,w,c
  3305  001180  0AFF               	xorlw	255
  3306  001182  1682               	andwf	130,f,c	;volatile
  3307  001184  EF3A  F009         	goto	l139
  3308  001188                     l1748:
  3309  001188  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3310  00118A  EFD2  F008         	goto	u1450
  3311  00118E  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3312  001190  E107               	bnz	u1451
  3313  001192  0E20               	movlw	32
  3314  001194  5C01               	subwf	digitalWrite@pin^0,w,c
  3315  001196  B0D8               	btfsc	status,0,c
  3316  001198  EFD0  F008         	goto	u1451
  3317  00119C  EFD2  F008         	goto	u1450
  3318  0011A0                     u1451:
  3319  0011A0  EF00  F009         	goto	l1756
  3320  0011A4                     u1450:
  3321  0011A4                     
  3322                           ;io.c: 28:         pin -=24;
  3323  0011A4  0EE8               	movlw	232
  3324  0011A6  2601               	addwf	digitalWrite@pin^0,f,c
  3325  0011A8  0EFF               	movlw	255
  3326  0011AA  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3327                           
  3328                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  3329  0011AC  5003               	movf	digitalWrite@value^0,w,c
  3330  0011AE  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3331  0011B0  B4D8               	btfsc	status,2,c
  3332  0011B2  EFDD  F008         	goto	u1461
  3333  0011B6  EFDF  F008         	goto	u1460
  3334  0011BA                     u1461:
  3335  0011BA  EFEF  F008         	goto	l1754
  3336  0011BE                     u1460:
  3337  0011BE  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3338  0011C2  0E01               	movlw	1
  3339  0011C4  6E06               	movwf	(??_digitalWrite+1)^0,c
  3340  0011C6  2A05               	incf	??_digitalWrite^0,f,c
  3341  0011C8  EFE8  F008         	goto	u1474
  3342  0011CC                     u1475:
  3343  0011CC  90D8               	bcf	status,0,c
  3344  0011CE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3345  0011D0                     u1474:
  3346  0011D0  2E05               	decfsz	??_digitalWrite^0,f,c
  3347  0011D2  EFE6  F008         	goto	u1475
  3348  0011D6  5006               	movf	(??_digitalWrite+1)^0,w,c
  3349  0011D8  1283               	iorwf	131,f,c	;volatile
  3350  0011DA  EF3A  F009         	goto	l139
  3351  0011DE                     l1754:
  3352  0011DE  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3353  0011E2  0E01               	movlw	1
  3354  0011E4  6E06               	movwf	(??_digitalWrite+1)^0,c
  3355  0011E6  2A05               	incf	??_digitalWrite^0,f,c
  3356  0011E8  EFF8  F008         	goto	u1484
  3357  0011EC                     u1485:
  3358  0011EC  90D8               	bcf	status,0,c
  3359  0011EE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3360  0011F0                     u1484:
  3361  0011F0  2E05               	decfsz	??_digitalWrite^0,f,c
  3362  0011F2  EFF6  F008         	goto	u1485
  3363  0011F6  5006               	movf	(??_digitalWrite+1)^0,w,c
  3364  0011F8  0AFF               	xorlw	255
  3365  0011FA  1683               	andwf	131,f,c	;volatile
  3366  0011FC  EF3A  F009         	goto	l139
  3367  001200                     l1756:
  3368  001200  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3369  001202  EF0E  F009         	goto	u1490
  3370  001206  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3371  001208  E107               	bnz	u1491
  3372  00120A  0E28               	movlw	40
  3373  00120C  5C01               	subwf	digitalWrite@pin^0,w,c
  3374  00120E  B0D8               	btfsc	status,0,c
  3375  001210  EF0C  F009         	goto	u1491
  3376  001214  EF0E  F009         	goto	u1490
  3377  001218                     u1491:
  3378  001218  EF3A  F009         	goto	l139
  3379  00121C                     u1490:
  3380  00121C                     
  3381                           ;io.c: 32:         pin -=32;
  3382  00121C  0EE0               	movlw	224
  3383  00121E  2601               	addwf	digitalWrite@pin^0,f,c
  3384  001220  0EFF               	movlw	255
  3385  001222  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3386                           
  3387                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  3388  001224  5003               	movf	digitalWrite@value^0,w,c
  3389  001226  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3390  001228  B4D8               	btfsc	status,2,c
  3391  00122A  EF19  F009         	goto	u1501
  3392  00122E  EF1B  F009         	goto	u1500
  3393  001232                     u1501:
  3394  001232  EF2B  F009         	goto	l1762
  3395  001236                     u1500:
  3396  001236  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3397  00123A  0E01               	movlw	1
  3398  00123C  6E06               	movwf	(??_digitalWrite+1)^0,c
  3399  00123E  2A05               	incf	??_digitalWrite^0,f,c
  3400  001240  EF24  F009         	goto	u1514
  3401  001244                     u1515:
  3402  001244  90D8               	bcf	status,0,c
  3403  001246  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3404  001248                     u1514:
  3405  001248  2E05               	decfsz	??_digitalWrite^0,f,c
  3406  00124A  EF22  F009         	goto	u1515
  3407  00124E  5006               	movf	(??_digitalWrite+1)^0,w,c
  3408  001250  1284               	iorwf	132,f,c	;volatile
  3409  001252  EF3A  F009         	goto	l139
  3410  001256                     l1762:
  3411  001256  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3412  00125A  0E01               	movlw	1
  3413  00125C  6E06               	movwf	(??_digitalWrite+1)^0,c
  3414  00125E  2A05               	incf	??_digitalWrite^0,f,c
  3415  001260  EF34  F009         	goto	u1524
  3416  001264                     u1525:
  3417  001264  90D8               	bcf	status,0,c
  3418  001266  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3419  001268                     u1524:
  3420  001268  2E05               	decfsz	??_digitalWrite^0,f,c
  3421  00126A  EF32  F009         	goto	u1525
  3422  00126E  5006               	movf	(??_digitalWrite+1)^0,w,c
  3423  001270  0AFF               	xorlw	255
  3424  001272  1684               	andwf	132,f,c	;volatile
  3425  001274                     l139:
  3426  001274  0012               	return		;funcret
  3427  001276                     __end_of_digitalWrite:
  3428                           	callstack 0
  3429                           
  3430 ;; *************** function ___flge *****************
  3431 ;; Defined at:
  3432 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  3433 ;; Parameters:    Size  Location     Type
  3434 ;;  ff1             4    0[COMRAM] void 
  3435 ;;  ff2             4    4[COMRAM] void 
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;		None
  3438 ;; Return value:  Size  Location     Type
  3439 ;;		None               void
  3440 ;; Registers used:
  3441 ;;		wreg, status,2, status,0
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/0
  3444 ;;		On exit  : 0/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3447 ;;      Params:         8       0       0       0       0       0       0
  3448 ;;      Locals:         0       0       0       0       0       0       0
  3449 ;;      Temps:          4       0       0       0       0       0       0
  3450 ;;      Totals:        12       0       0       0       0       0       0
  3451 ;;Total ram usage:       12 bytes
  3452 ;; Hardware stack levels used: 1
  3453 ;; This function calls:
  3454 ;;		Nothing
  3455 ;; This function is called by:
  3456 ;;		_cronometro
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           
  3460                           	psect	text22
  3461  001516                     __ptext22:
  3462                           	callstack 0
  3463  001516                     ___flge:
  3464                           	callstack 29
  3465  001516  0E00               	movlw	0
  3466  001518  1401               	andwf	___flge@ff1^0,w,c
  3467  00151A  6E09               	movwf	??___flge^0,c
  3468  00151C  0E00               	movlw	0
  3469  00151E  1402               	andwf	(___flge@ff1+1)^0,w,c
  3470  001520  6E0A               	movwf	(??___flge+1)^0,c
  3471  001522  0E80               	movlw	128
  3472  001524  1403               	andwf	(___flge@ff1+2)^0,w,c
  3473  001526  6E0B               	movwf	(??___flge+2)^0,c
  3474  001528  0E7F               	movlw	127
  3475  00152A  1404               	andwf	(___flge@ff1+3)^0,w,c
  3476  00152C  6E0C               	movwf	(??___flge+3)^0,c
  3477  00152E  5009               	movf	??___flge^0,w,c
  3478  001530  100A               	iorwf	(??___flge+1)^0,w,c
  3479  001532  100B               	iorwf	(??___flge+2)^0,w,c
  3480  001534  100C               	iorwf	(??___flge+3)^0,w,c
  3481  001536  A4D8               	btfss	status,2,c
  3482  001538  EFA0  F00A         	goto	u2361
  3483  00153C  EFA2  F00A         	goto	u2360
  3484  001540                     u2361:
  3485  001540  EFAA  F00A         	goto	l2174
  3486  001544                     u2360:
  3487  001544  0E00               	movlw	0
  3488  001546  6E01               	movwf	___flge@ff1^0,c
  3489  001548  0E00               	movlw	0
  3490  00154A  6E02               	movwf	(___flge@ff1+1)^0,c
  3491  00154C  0E00               	movlw	0
  3492  00154E  6E03               	movwf	(___flge@ff1+2)^0,c
  3493  001550  0E00               	movlw	0
  3494  001552  6E04               	movwf	(___flge@ff1+3)^0,c
  3495  001554                     l2174:
  3496  001554  0E00               	movlw	0
  3497  001556  1405               	andwf	___flge@ff2^0,w,c
  3498  001558  6E09               	movwf	??___flge^0,c
  3499  00155A  0E00               	movlw	0
  3500  00155C  1406               	andwf	(___flge@ff2+1)^0,w,c
  3501  00155E  6E0A               	movwf	(??___flge+1)^0,c
  3502  001560  0E80               	movlw	128
  3503  001562  1407               	andwf	(___flge@ff2+2)^0,w,c
  3504  001564  6E0B               	movwf	(??___flge+2)^0,c
  3505  001566  0E7F               	movlw	127
  3506  001568  1408               	andwf	(___flge@ff2+3)^0,w,c
  3507  00156A  6E0C               	movwf	(??___flge+3)^0,c
  3508  00156C  5009               	movf	??___flge^0,w,c
  3509  00156E  100A               	iorwf	(??___flge+1)^0,w,c
  3510  001570  100B               	iorwf	(??___flge+2)^0,w,c
  3511  001572  100C               	iorwf	(??___flge+3)^0,w,c
  3512  001574  A4D8               	btfss	status,2,c
  3513  001576  EFBF  F00A         	goto	u2371
  3514  00157A  EFC1  F00A         	goto	u2370
  3515  00157E                     u2371:
  3516  00157E  EFC9  F00A         	goto	l2178
  3517  001582                     u2370:
  3518  001582  0E00               	movlw	0
  3519  001584  6E05               	movwf	___flge@ff2^0,c
  3520  001586  0E00               	movlw	0
  3521  001588  6E06               	movwf	(___flge@ff2+1)^0,c
  3522  00158A  0E00               	movlw	0
  3523  00158C  6E07               	movwf	(___flge@ff2+2)^0,c
  3524  00158E  0E00               	movlw	0
  3525  001590  6E08               	movwf	(___flge@ff2+3)^0,c
  3526  001592                     l2178:
  3527  001592  AE04               	btfss	(___flge@ff1+3)^0,7,c
  3528  001594  EFCE  F00A         	goto	u2381
  3529  001598  EFD0  F00A         	goto	u2380
  3530  00159C                     u2381:
  3531  00159C  EFD9  F00A         	goto	l2182
  3532  0015A0                     u2380:
  3533  0015A0  6C01               	negf	___flge@ff1^0,c
  3534  0015A2  1E02               	comf	(___flge@ff1+1)^0,f,c
  3535  0015A4  B0D8               	btfsc	status,0,c
  3536  0015A6  2A02               	incf	(___flge@ff1+1)^0,f,c
  3537  0015A8  1E03               	comf	(___flge@ff1+2)^0,f,c
  3538  0015AA  B0D8               	btfsc	status,0,c
  3539  0015AC  2A03               	incf	(___flge@ff1+2)^0,f,c
  3540  0015AE  0E80               	movlw	128
  3541  0015B0  5604               	subfwb	(___flge@ff1+3)^0,f,c
  3542  0015B2                     l2182:
  3543  0015B2  AE08               	btfss	(___flge@ff2+3)^0,7,c
  3544  0015B4  EFDE  F00A         	goto	u2391
  3545  0015B8  EFE0  F00A         	goto	u2390
  3546  0015BC                     u2391:
  3547  0015BC  EFE9  F00A         	goto	l576
  3548  0015C0                     u2390:
  3549  0015C0  6C05               	negf	___flge@ff2^0,c
  3550  0015C2  1E06               	comf	(___flge@ff2+1)^0,f,c
  3551  0015C4  B0D8               	btfsc	status,0,c
  3552  0015C6  2A06               	incf	(___flge@ff2+1)^0,f,c
  3553  0015C8  1E07               	comf	(___flge@ff2+2)^0,f,c
  3554  0015CA  B0D8               	btfsc	status,0,c
  3555  0015CC  2A07               	incf	(___flge@ff2+2)^0,f,c
  3556  0015CE  0E80               	movlw	128
  3557  0015D0  5608               	subfwb	(___flge@ff2+3)^0,f,c
  3558  0015D2                     l576:
  3559  0015D2  0E00               	movlw	0
  3560  0015D4  1A01               	xorwf	___flge@ff1^0,f,c
  3561  0015D6  0E00               	movlw	0
  3562  0015D8  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  3563  0015DA  0E00               	movlw	0
  3564  0015DC  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  3565  0015DE  0E80               	movlw	128
  3566  0015E0  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  3567  0015E2  0E00               	movlw	0
  3568  0015E4  1A05               	xorwf	___flge@ff2^0,f,c
  3569  0015E6  0E00               	movlw	0
  3570  0015E8  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  3571  0015EA  0E00               	movlw	0
  3572  0015EC  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  3573  0015EE  0E80               	movlw	128
  3574  0015F0  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  3575  0015F2  5005               	movf	___flge@ff2^0,w,c
  3576  0015F4  5C01               	subwf	___flge@ff1^0,w,c
  3577  0015F6  5006               	movf	(___flge@ff2+1)^0,w,c
  3578  0015F8  5802               	subwfb	(___flge@ff1+1)^0,w,c
  3579  0015FA  5007               	movf	(___flge@ff2+2)^0,w,c
  3580  0015FC  5803               	subwfb	(___flge@ff1+2)^0,w,c
  3581  0015FE  5008               	movf	(___flge@ff2+3)^0,w,c
  3582  001600  5804               	subwfb	(___flge@ff1+3)^0,w,c
  3583  001602  B0D8               	btfsc	status,0,c
  3584  001604  EF06  F00B         	goto	u2401
  3585  001608  EF08  F00B         	goto	u2400
  3586  00160C                     u2401:
  3587  00160C  EF0B  F00B         	goto	l2188
  3588  001610                     u2400:
  3589  001610  90D8               	bcf	status,0,c
  3590  001612  EF0C  F00B         	goto	l581
  3591  001616                     l2188:
  3592  001616  80D8               	bsf	status,0,c
  3593  001618                     l581:
  3594  001618  0012               	return		;funcret
  3595  00161A                     __end_of___flge:
  3596                           	callstack 0
  3597                           
  3598 ;; *************** function ___fladd *****************
  3599 ;; Defined at:
  3600 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;  b               4    0[COMRAM] void 
  3603 ;;  a               4    4[COMRAM] void 
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;  grs             1   15[COMRAM] unsigned char 
  3606 ;;  bexp            1   14[COMRAM] unsigned char 
  3607 ;;  aexp            1   13[COMRAM] unsigned char 
  3608 ;;  signs           1   12[COMRAM] unsigned char 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  4    0[COMRAM] unsigned char 
  3611 ;; Registers used:
  3612 ;;		wreg, status,2, status,0
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3618 ;;      Params:         8       0       0       0       0       0       0
  3619 ;;      Locals:         4       0       0       0       0       0       0
  3620 ;;      Temps:          4       0       0       0       0       0       0
  3621 ;;      Totals:        16       0       0       0       0       0       0
  3622 ;;Total ram usage:       16 bytes
  3623 ;; Hardware stack levels used: 1
  3624 ;; This function calls:
  3625 ;;		Nothing
  3626 ;; This function is called by:
  3627 ;;		_cronometro
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text23
  3632  00068E                     __ptext23:
  3633                           	callstack 0
  3634  00068E                     ___fladd:
  3635                           	callstack 29
  3636  00068E  5004               	movf	(___fladd@b+3)^0,w,c
  3637  000690  0B80               	andlw	128
  3638  000692  6E0D               	movwf	___fladd@signs^0,c
  3639  000694  5004               	movf	(___fladd@b+3)^0,w,c
  3640  000696  2404               	addwf	(___fladd@b+3)^0,w,c
  3641  000698  6E0F               	movwf	___fladd@bexp^0,c
  3642  00069A  AE03               	btfss	(___fladd@b+2)^0,7,c
  3643  00069C  EF52  F003         	goto	u1851
  3644  0006A0  EF54  F003         	goto	u1850
  3645  0006A4                     u1851:
  3646  0006A4  EF55  F003         	goto	l1894
  3647  0006A8                     u1850:
  3648  0006A8  800F               	bsf	___fladd@bexp^0,0,c
  3649  0006AA                     l1894:
  3650  0006AA  500F               	movf	___fladd@bexp^0,w,c
  3651  0006AC  B4D8               	btfsc	status,2,c
  3652  0006AE  EF5B  F003         	goto	u1861
  3653  0006B2  EF5D  F003         	goto	u1860
  3654  0006B6                     u1861:
  3655  0006B6  EF72  F003         	goto	l1904
  3656  0006BA                     u1860:
  3657  0006BA  280F               	incf	___fladd@bexp^0,w,c
  3658  0006BC  A4D8               	btfss	status,2,c
  3659  0006BE  EF63  F003         	goto	u1871
  3660  0006C2  EF65  F003         	goto	u1870
  3661  0006C6                     u1871:
  3662  0006C6  EF6D  F003         	goto	l1900
  3663  0006CA                     u1870:
  3664  0006CA  0E00               	movlw	0
  3665  0006CC  6E01               	movwf	___fladd@b^0,c
  3666  0006CE  0E00               	movlw	0
  3667  0006D0  6E02               	movwf	(___fladd@b+1)^0,c
  3668  0006D2  0E00               	movlw	0
  3669  0006D4  6E03               	movwf	(___fladd@b+2)^0,c
  3670  0006D6  0E00               	movlw	0
  3671  0006D8  6E04               	movwf	(___fladd@b+3)^0,c
  3672  0006DA                     l1900:
  3673  0006DA  8E03               	bsf	(___fladd@b+2)^0,7,c
  3674  0006DC  0E00               	movlw	0
  3675  0006DE  6E04               	movwf	(___fladd@b+3)^0,c
  3676  0006E0  EF7A  F003         	goto	l1906
  3677  0006E4                     l1904:
  3678  0006E4  0E00               	movlw	0
  3679  0006E6  6E01               	movwf	___fladd@b^0,c
  3680  0006E8  0E00               	movlw	0
  3681  0006EA  6E02               	movwf	(___fladd@b+1)^0,c
  3682  0006EC  0E00               	movlw	0
  3683  0006EE  6E03               	movwf	(___fladd@b+2)^0,c
  3684  0006F0  0E00               	movlw	0
  3685  0006F2  6E04               	movwf	(___fladd@b+3)^0,c
  3686  0006F4                     l1906:
  3687  0006F4  5008               	movf	(___fladd@a+3)^0,w,c
  3688  0006F6  0B80               	andlw	128
  3689  0006F8  6E0E               	movwf	___fladd@aexp^0,c
  3690  0006FA  500D               	movf	___fladd@signs^0,w,c
  3691  0006FC  180E               	xorwf	___fladd@aexp^0,w,c
  3692  0006FE  B4D8               	btfsc	status,2,c
  3693  000700  EF84  F003         	goto	u1881
  3694  000704  EF86  F003         	goto	u1880
  3695  000708                     u1881:
  3696  000708  EF87  F003         	goto	l1912
  3697  00070C                     u1880:
  3698  00070C  8C0D               	bsf	___fladd@signs^0,6,c
  3699  00070E                     l1912:
  3700  00070E  5008               	movf	(___fladd@a+3)^0,w,c
  3701  000710  2408               	addwf	(___fladd@a+3)^0,w,c
  3702  000712  6E0E               	movwf	___fladd@aexp^0,c
  3703  000714  AE07               	btfss	(___fladd@a+2)^0,7,c
  3704  000716  EF8F  F003         	goto	u1891
  3705  00071A  EF91  F003         	goto	u1890
  3706  00071E                     u1891:
  3707  00071E  EF92  F003         	goto	l1918
  3708  000722                     u1890:
  3709  000722  800E               	bsf	___fladd@aexp^0,0,c
  3710  000724                     l1918:
  3711  000724  500E               	movf	___fladd@aexp^0,w,c
  3712  000726  B4D8               	btfsc	status,2,c
  3713  000728  EF98  F003         	goto	u1901
  3714  00072C  EF9A  F003         	goto	u1900
  3715  000730                     u1901:
  3716  000730  EFAF  F003         	goto	l1928
  3717  000734                     u1900:
  3718  000734  280E               	incf	___fladd@aexp^0,w,c
  3719  000736  A4D8               	btfss	status,2,c
  3720  000738  EFA0  F003         	goto	u1911
  3721  00073C  EFA2  F003         	goto	u1910
  3722  000740                     u1911:
  3723  000740  EFAA  F003         	goto	l1924
  3724  000744                     u1910:
  3725  000744  0E00               	movlw	0
  3726  000746  6E05               	movwf	___fladd@a^0,c
  3727  000748  0E00               	movlw	0
  3728  00074A  6E06               	movwf	(___fladd@a+1)^0,c
  3729  00074C  0E00               	movlw	0
  3730  00074E  6E07               	movwf	(___fladd@a+2)^0,c
  3731  000750  0E00               	movlw	0
  3732  000752  6E08               	movwf	(___fladd@a+3)^0,c
  3733  000754                     l1924:
  3734  000754  8E07               	bsf	(___fladd@a+2)^0,7,c
  3735  000756  0E00               	movlw	0
  3736  000758  6E08               	movwf	(___fladd@a+3)^0,c
  3737  00075A  EFB7  F003         	goto	l1930
  3738  00075E                     l1928:
  3739  00075E  0E00               	movlw	0
  3740  000760  6E05               	movwf	___fladd@a^0,c
  3741  000762  0E00               	movlw	0
  3742  000764  6E06               	movwf	(___fladd@a+1)^0,c
  3743  000766  0E00               	movlw	0
  3744  000768  6E07               	movwf	(___fladd@a+2)^0,c
  3745  00076A  0E00               	movlw	0
  3746  00076C  6E08               	movwf	(___fladd@a+3)^0,c
  3747  00076E                     l1930:
  3748  00076E  500F               	movf	___fladd@bexp^0,w,c
  3749  000770  5C0E               	subwf	___fladd@aexp^0,w,c
  3750  000772  B0D8               	btfsc	status,0,c
  3751  000774  EFBE  F003         	goto	u1921
  3752  000778  EFC0  F003         	goto	u1920
  3753  00077C                     u1921:
  3754  00077C  EFE7  F003         	goto	l1966
  3755  000780                     u1920:
  3756  000780  AC0D               	btfss	___fladd@signs^0,6,c
  3757  000782  EFC5  F003         	goto	u1931
  3758  000786  EFC7  F003         	goto	u1930
  3759  00078A                     u1931:
  3760  00078A  EFC9  F003         	goto	l1936
  3761  00078E                     u1930:
  3762  00078E  0E80               	movlw	128
  3763  000790  1A0D               	xorwf	___fladd@signs^0,f,c
  3764  000792                     l1936:
  3765  000792  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  3766  000796  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3767  00079A  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  3768  00079E  C001  F010         	movff	___fladd@b,___fladd@grs
  3769  0007A2  C005  F001         	movff	___fladd@a,___fladd@b
  3770  0007A6  C010  F005         	movff	___fladd@grs,___fladd@a
  3771  0007AA  C002  F010         	movff	___fladd@b+1,___fladd@grs
  3772  0007AE  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  3773  0007B2  C010  F006         	movff	___fladd@grs,___fladd@a+1
  3774  0007B6  C003  F010         	movff	___fladd@b+2,___fladd@grs
  3775  0007BA  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  3776  0007BE  C010  F007         	movff	___fladd@grs,___fladd@a+2
  3777  0007C2  C004  F010         	movff	___fladd@b+3,___fladd@grs
  3778  0007C6  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  3779  0007CA  C010  F008         	movff	___fladd@grs,___fladd@a+3
  3780  0007CE                     l1966:
  3781  0007CE  0E00               	movlw	0
  3782  0007D0  6E10               	movwf	___fladd@grs^0,c
  3783  0007D2  500F               	movf	___fladd@bexp^0,w,c
  3784  0007D4  C00E  F009         	movff	___fladd@aexp,??___fladd
  3785  0007D8  6A0A               	clrf	(??___fladd+1)^0,c
  3786  0007DA  5E09               	subwf	??___fladd^0,f,c
  3787  0007DC  0E00               	movlw	0
  3788  0007DE  5A0A               	subwfb	(??___fladd+1)^0,f,c
  3789  0007E0  BE0A               	btfsc	(??___fladd+1)^0,7,c
  3790  0007E2  EFFC  F003         	goto	u1941
  3791  0007E6  500A               	movf	(??___fladd+1)^0,w,c
  3792  0007E8  E109               	bnz	u1940
  3793  0007EA  0E1A               	movlw	26
  3794  0007EC  5C09               	subwf	??___fladd^0,w,c
  3795  0007EE  A0D8               	btfss	status,0,c
  3796  0007F0  EFFC  F003         	goto	u1941
  3797  0007F4  EFFE  F003         	goto	u1940
  3798  0007F8                     u1941:
  3799  0007F8  EF35  F004         	goto	l840
  3800  0007FC                     u1940:
  3801  0007FC  5001               	movf	___fladd@b^0,w,c
  3802  0007FE  1002               	iorwf	(___fladd@b+1)^0,w,c
  3803  000800  1003               	iorwf	(___fladd@b+2)^0,w,c
  3804  000802  1004               	iorwf	(___fladd@b+3)^0,w,c
  3805  000804  A4D8               	btfss	status,2,c
  3806  000806  EF07  F004         	goto	u1951
  3807  00080A  EF0A  F004         	goto	u1950
  3808  00080E                     u1951:
  3809  00080E  0E01               	movlw	1
  3810  000810  EF0B  F004         	goto	u1960
  3811  000814                     u1950:
  3812  000814  0E00               	movlw	0
  3813  000816                     u1960:
  3814  000816  6E10               	movwf	___fladd@grs^0,c
  3815  000818  0E00               	movlw	0
  3816  00081A  6E01               	movwf	___fladd@b^0,c
  3817  00081C  0E00               	movlw	0
  3818  00081E  6E02               	movwf	(___fladd@b+1)^0,c
  3819  000820  0E00               	movlw	0
  3820  000822  6E03               	movwf	(___fladd@b+2)^0,c
  3821  000824  0E00               	movlw	0
  3822  000826  6E04               	movwf	(___fladd@b+3)^0,c
  3823  000828  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3824  00082C  EF3E  F004         	goto	l839
  3825  000830                     l841:
  3826  000830  A010               	btfss	___fladd@grs^0,0,c
  3827  000832  EF1D  F004         	goto	u1971
  3828  000836  EF1F  F004         	goto	u1970
  3829  00083A                     u1971:
  3830  00083A  EF25  F004         	goto	l1978
  3831  00083E                     u1970:
  3832  00083E  90D8               	bcf	status,0,c
  3833  000840  3010               	rrcf	___fladd@grs^0,w,c
  3834  000842  0901               	iorlw	1
  3835  000844  6E10               	movwf	___fladd@grs^0,c
  3836  000846  EF27  F004         	goto	l1980
  3837  00084A                     l1978:
  3838  00084A  90D8               	bcf	status,0,c
  3839  00084C  3210               	rrcf	___fladd@grs^0,f,c
  3840  00084E                     l1980:
  3841  00084E  A001               	btfss	___fladd@b^0,0,c
  3842  000850  EF2C  F004         	goto	u1981
  3843  000854  EF2E  F004         	goto	u1980
  3844  000858                     u1981:
  3845  000858  EF2F  F004         	goto	l1984
  3846  00085C                     u1980:
  3847  00085C  8E10               	bsf	___fladd@grs^0,7,c
  3848  00085E                     l1984:
  3849  00085E  3404               	rlcf	(___fladd@b+3)^0,w,c
  3850  000860  3204               	rrcf	(___fladd@b+3)^0,f,c
  3851  000862  3203               	rrcf	(___fladd@b+2)^0,f,c
  3852  000864  3202               	rrcf	(___fladd@b+1)^0,f,c
  3853  000866  3201               	rrcf	___fladd@b^0,f,c
  3854  000868  2A0F               	incf	___fladd@bexp^0,f,c
  3855  00086A                     l840:
  3856  00086A  500E               	movf	___fladd@aexp^0,w,c
  3857  00086C  5C0F               	subwf	___fladd@bexp^0,w,c
  3858  00086E  A0D8               	btfss	status,0,c
  3859  000870  EF3C  F004         	goto	u1991
  3860  000874  EF3E  F004         	goto	u1990
  3861  000878                     u1991:
  3862  000878  EF18  F004         	goto	l841
  3863  00087C                     u1990:
  3864  00087C                     l839:
  3865  00087C  BC0D               	btfsc	___fladd@signs^0,6,c
  3866  00087E  EF43  F004         	goto	u2001
  3867  000882  EF45  F004         	goto	u2000
  3868  000886                     u2001:
  3869  000886  EF85  F004         	goto	l2012
  3870  00088A                     u2000:
  3871  00088A  500F               	movf	___fladd@bexp^0,w,c
  3872  00088C  A4D8               	btfss	status,2,c
  3873  00088E  EF4B  F004         	goto	u2011
  3874  000892  EF4D  F004         	goto	u2010
  3875  000896                     u2011:
  3876  000896  EF57  F004         	goto	l1994
  3877  00089A                     u2010:
  3878  00089A  0E00               	movlw	0
  3879  00089C  6E01               	movwf	?___fladd^0,c
  3880  00089E  0E00               	movlw	0
  3881  0008A0  6E02               	movwf	(?___fladd+1)^0,c
  3882  0008A2  0E00               	movlw	0
  3883  0008A4  6E03               	movwf	(?___fladd+2)^0,c
  3884  0008A6  0E00               	movlw	0
  3885  0008A8  6E04               	movwf	(?___fladd+3)^0,c
  3886  0008AA  EFA6  F005         	goto	l848
  3887  0008AE                     l1994:
  3888  0008AE  5005               	movf	___fladd@a^0,w,c
  3889  0008B0  2601               	addwf	___fladd@b^0,f,c
  3890  0008B2  5006               	movf	(___fladd@a+1)^0,w,c
  3891  0008B4  2202               	addwfc	(___fladd@b+1)^0,f,c
  3892  0008B6  5007               	movf	(___fladd@a+2)^0,w,c
  3893  0008B8  2203               	addwfc	(___fladd@b+2)^0,f,c
  3894  0008BA  5008               	movf	(___fladd@a+3)^0,w,c
  3895  0008BC  2204               	addwfc	(___fladd@b+3)^0,f,c
  3896  0008BE  A004               	btfss	(___fladd@b+3)^0,0,c
  3897  0008C0  EF64  F004         	goto	u2021
  3898  0008C4  EF66  F004         	goto	u2020
  3899  0008C8                     u2021:
  3900  0008C8  EF12  F005         	goto	l2048
  3901  0008CC                     u2020:
  3902  0008CC  A010               	btfss	___fladd@grs^0,0,c
  3903  0008CE  EF6B  F004         	goto	u2031
  3904  0008D2  EF6D  F004         	goto	u2030
  3905  0008D6                     u2031:
  3906  0008D6  EF73  F004         	goto	l2002
  3907  0008DA                     u2030:
  3908  0008DA  90D8               	bcf	status,0,c
  3909  0008DC  3010               	rrcf	___fladd@grs^0,w,c
  3910  0008DE  0901               	iorlw	1
  3911  0008E0  6E10               	movwf	___fladd@grs^0,c
  3912  0008E2  EF75  F004         	goto	l2004
  3913  0008E6                     l2002:
  3914  0008E6  90D8               	bcf	status,0,c
  3915  0008E8  3210               	rrcf	___fladd@grs^0,f,c
  3916  0008EA                     l2004:
  3917  0008EA  A001               	btfss	___fladd@b^0,0,c
  3918  0008EC  EF7A  F004         	goto	u2041
  3919  0008F0  EF7C  F004         	goto	u2040
  3920  0008F4                     u2041:
  3921  0008F4  EF7D  F004         	goto	l2008
  3922  0008F8                     u2040:
  3923  0008F8  8E10               	bsf	___fladd@grs^0,7,c
  3924  0008FA                     l2008:
  3925  0008FA  3404               	rlcf	(___fladd@b+3)^0,w,c
  3926  0008FC  3204               	rrcf	(___fladd@b+3)^0,f,c
  3927  0008FE  3203               	rrcf	(___fladd@b+2)^0,f,c
  3928  000900  3202               	rrcf	(___fladd@b+1)^0,f,c
  3929  000902  3201               	rrcf	___fladd@b^0,f,c
  3930  000904  2A0F               	incf	___fladd@bexp^0,f,c
  3931  000906  EF12  F005         	goto	l2048
  3932  00090A                     l2012:
  3933  00090A  5005               	movf	___fladd@a^0,w,c
  3934  00090C  5C01               	subwf	___fladd@b^0,w,c
  3935  00090E  5006               	movf	(___fladd@a+1)^0,w,c
  3936  000910  5802               	subwfb	(___fladd@b+1)^0,w,c
  3937  000912  5007               	movf	(___fladd@a+2)^0,w,c
  3938  000914  5803               	subwfb	(___fladd@b+2)^0,w,c
  3939  000916  5004               	movf	(___fladd@b+3)^0,w,c
  3940  000918  0A80               	xorlw	128
  3941  00091A  6E09               	movwf	??___fladd^0,c
  3942  00091C  5008               	movf	(___fladd@a+3)^0,w,c
  3943  00091E  0A80               	xorlw	128
  3944  000920  5809               	subwfb	??___fladd^0,w,c
  3945  000922  B0D8               	btfsc	status,0,c
  3946  000924  EF96  F004         	goto	u2051
  3947  000928  EF98  F004         	goto	u2050
  3948  00092C                     u2051:
  3949  00092C  EFC3  F004         	goto	l2022
  3950  000930                     u2050:
  3951  000930  5001               	movf	___fladd@b^0,w,c
  3952  000932  5C05               	subwf	___fladd@a^0,w,c
  3953  000934  6E09               	movwf	??___fladd^0,c
  3954  000936  5002               	movf	(___fladd@b+1)^0,w,c
  3955  000938  5806               	subwfb	(___fladd@a+1)^0,w,c
  3956  00093A  6E0A               	movwf	(??___fladd+1)^0,c
  3957  00093C  5003               	movf	(___fladd@b+2)^0,w,c
  3958  00093E  5807               	subwfb	(___fladd@a+2)^0,w,c
  3959  000940  6E0B               	movwf	(??___fladd+2)^0,c
  3960  000942  5004               	movf	(___fladd@b+3)^0,w,c
  3961  000944  5808               	subwfb	(___fladd@a+3)^0,w,c
  3962  000946  6E0C               	movwf	(??___fladd+3)^0,c
  3963  000948  0EFF               	movlw	255
  3964  00094A  2409               	addwf	??___fladd^0,w,c
  3965  00094C  6E01               	movwf	___fladd@b^0,c
  3966  00094E  0EFF               	movlw	255
  3967  000950  200A               	addwfc	(??___fladd+1)^0,w,c
  3968  000952  6E02               	movwf	(___fladd@b+1)^0,c
  3969  000954  0EFF               	movlw	255
  3970  000956  200B               	addwfc	(??___fladd+2)^0,w,c
  3971  000958  6E03               	movwf	(___fladd@b+2)^0,c
  3972  00095A  0EFF               	movlw	255
  3973  00095C  200C               	addwfc	(??___fladd+3)^0,w,c
  3974  00095E  6E04               	movwf	(___fladd@b+3)^0,c
  3975  000960  0E80               	movlw	128
  3976  000962  1A0D               	xorwf	___fladd@signs^0,f,c
  3977  000964  6C10               	negf	___fladd@grs^0,c
  3978  000966  5010               	movf	___fladd@grs^0,w,c
  3979  000968  A4D8               	btfss	status,2,c
  3980  00096A  EFB9  F004         	goto	u2061
  3981  00096E  EFBB  F004         	goto	u2060
  3982  000972                     u2061:
  3983  000972  EFCB  F004         	goto	l856
  3984  000976                     u2060:
  3985  000976  0E01               	movlw	1
  3986  000978  2601               	addwf	___fladd@b^0,f,c
  3987  00097A  0E00               	movlw	0
  3988  00097C  2202               	addwfc	(___fladd@b+1)^0,f,c
  3989  00097E  2203               	addwfc	(___fladd@b+2)^0,f,c
  3990  000980  2204               	addwfc	(___fladd@b+3)^0,f,c
  3991  000982  EFCB  F004         	goto	l856
  3992  000986                     l2022:
  3993  000986  5005               	movf	___fladd@a^0,w,c
  3994  000988  5E01               	subwf	___fladd@b^0,f,c
  3995  00098A  5006               	movf	(___fladd@a+1)^0,w,c
  3996  00098C  5A02               	subwfb	(___fladd@b+1)^0,f,c
  3997  00098E  5007               	movf	(___fladd@a+2)^0,w,c
  3998  000990  5A03               	subwfb	(___fladd@b+2)^0,f,c
  3999  000992  5008               	movf	(___fladd@a+3)^0,w,c
  4000  000994  5A04               	subwfb	(___fladd@b+3)^0,f,c
  4001  000996                     l856:
  4002  000996  5001               	movf	___fladd@b^0,w,c
  4003  000998  1002               	iorwf	(___fladd@b+1)^0,w,c
  4004  00099A  1003               	iorwf	(___fladd@b+2)^0,w,c
  4005  00099C  1004               	iorwf	(___fladd@b+3)^0,w,c
  4006  00099E  A4D8               	btfss	status,2,c
  4007  0009A0  EFD4  F004         	goto	u2071
  4008  0009A4  EFD6  F004         	goto	u2070
  4009  0009A8                     u2071:
  4010  0009A8  EF0B  F005         	goto	l2046
  4011  0009AC                     u2070:
  4012  0009AC  5010               	movf	___fladd@grs^0,w,c
  4013  0009AE  A4D8               	btfss	status,2,c
  4014  0009B0  EFDC  F004         	goto	u2081
  4015  0009B4  EFDE  F004         	goto	u2080
  4016  0009B8                     u2081:
  4017  0009B8  EF0B  F005         	goto	l2046
  4018  0009BC                     u2080:
  4019  0009BC  0E00               	movlw	0
  4020  0009BE  6E01               	movwf	?___fladd^0,c
  4021  0009C0  0E00               	movlw	0
  4022  0009C2  6E02               	movwf	(?___fladd+1)^0,c
  4023  0009C4  0E00               	movlw	0
  4024  0009C6  6E03               	movwf	(?___fladd+2)^0,c
  4025  0009C8  0E00               	movlw	0
  4026  0009CA  6E04               	movwf	(?___fladd+3)^0,c
  4027  0009CC  EFA6  F005         	goto	l848
  4028  0009D0                     l2030:
  4029  0009D0  90D8               	bcf	status,0,c
  4030  0009D2  3601               	rlcf	___fladd@b^0,f,c
  4031  0009D4  3602               	rlcf	(___fladd@b+1)^0,f,c
  4032  0009D6  3603               	rlcf	(___fladd@b+2)^0,f,c
  4033  0009D8  3604               	rlcf	(___fladd@b+3)^0,f,c
  4034  0009DA  AE10               	btfss	___fladd@grs^0,7,c
  4035  0009DC  EFF2  F004         	goto	u2091
  4036  0009E0  EFF4  F004         	goto	u2090
  4037  0009E4                     u2091:
  4038  0009E4  EFF5  F004         	goto	l2036
  4039  0009E8                     u2090:
  4040  0009E8  8001               	bsf	___fladd@b^0,0,c
  4041  0009EA                     l2036:
  4042  0009EA  A010               	btfss	___fladd@grs^0,0,c
  4043  0009EC  EFFA  F004         	goto	u2101
  4044  0009F0  EFFC  F004         	goto	u2100
  4045  0009F4                     u2101:
  4046  0009F4  EF00  F005         	goto	l2040
  4047  0009F8                     u2100:
  4048  0009F8  80D8               	bsf	status,0,c
  4049  0009FA  3610               	rlcf	___fladd@grs^0,f,c
  4050  0009FC  EF02  F005         	goto	l2042
  4051  000A00                     l2040:
  4052  000A00  90D8               	bcf	status,0,c
  4053  000A02  3610               	rlcf	___fladd@grs^0,f,c
  4054  000A04                     l2042:
  4055  000A04  500F               	movf	___fladd@bexp^0,w,c
  4056  000A06  B4D8               	btfsc	status,2,c
  4057  000A08  EF08  F005         	goto	u2111
  4058  000A0C  EF0A  F005         	goto	u2110
  4059  000A10                     u2111:
  4060  000A10  EF0B  F005         	goto	l2046
  4061  000A14                     u2110:
  4062  000A14  060F               	decf	___fladd@bexp^0,f,c
  4063  000A16                     l2046:
  4064  000A16  AE03               	btfss	(___fladd@b+2)^0,7,c
  4065  000A18  EF10  F005         	goto	u2121
  4066  000A1C  EF12  F005         	goto	u2120
  4067  000A20                     u2121:
  4068  000A20  EFE8  F004         	goto	l2030
  4069  000A24                     u2120:
  4070  000A24                     l2048:
  4071  000A24  0E00               	movlw	0
  4072  000A26  6E0E               	movwf	___fladd@aexp^0,c
  4073  000A28  AE10               	btfss	___fladd@grs^0,7,c
  4074  000A2A  EF19  F005         	goto	u2131
  4075  000A2E  EF1B  F005         	goto	u2130
  4076  000A32                     u2131:
  4077  000A32  EF33  F005         	goto	l865
  4078  000A36                     u2130:
  4079  000A36  C010  F009         	movff	___fladd@grs,??___fladd
  4080  000A3A  0E7F               	movlw	127
  4081  000A3C  1609               	andwf	??___fladd^0,f,c
  4082  000A3E  B4D8               	btfsc	status,2,c
  4083  000A40  EF24  F005         	goto	u2141
  4084  000A44  EF26  F005         	goto	u2140
  4085  000A48                     u2141:
  4086  000A48  EF2A  F005         	goto	l866
  4087  000A4C                     u2140:
  4088  000A4C                     l2054:
  4089  000A4C  0E01               	movlw	1
  4090  000A4E  6E0E               	movwf	___fladd@aexp^0,c
  4091  000A50  EF33  F005         	goto	l865
  4092  000A54                     l866:
  4093  000A54  A001               	btfss	___fladd@b^0,0,c
  4094  000A56  EF2F  F005         	goto	u2151
  4095  000A5A  EF31  F005         	goto	u2150
  4096  000A5E                     u2151:
  4097  000A5E  EF33  F005         	goto	l865
  4098  000A62                     u2150:
  4099  000A62  EF26  F005         	goto	l2054
  4100  000A66                     l865:
  4101  000A66  500E               	movf	___fladd@aexp^0,w,c
  4102  000A68  B4D8               	btfsc	status,2,c
  4103  000A6A  EF39  F005         	goto	u2161
  4104  000A6E  EF3B  F005         	goto	u2160
  4105  000A72                     u2161:
  4106  000A72  EF66  F005         	goto	l2066
  4107  000A76                     u2160:
  4108  000A76  0E01               	movlw	1
  4109  000A78  2601               	addwf	___fladd@b^0,f,c
  4110  000A7A  0E00               	movlw	0
  4111  000A7C  2202               	addwfc	(___fladd@b+1)^0,f,c
  4112  000A7E  2203               	addwfc	(___fladd@b+2)^0,f,c
  4113  000A80  2204               	addwfc	(___fladd@b+3)^0,f,c
  4114  000A82  A004               	btfss	(___fladd@b+3)^0,0,c
  4115  000A84  EF46  F005         	goto	u2171
  4116  000A88  EF48  F005         	goto	u2170
  4117  000A8C                     u2171:
  4118  000A8C  EF66  F005         	goto	l2066
  4119  000A90                     u2170:
  4120  000A90  C001  F009         	movff	___fladd@b,??___fladd
  4121  000A94  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  4122  000A98  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  4123  000A9C  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  4124  000AA0  340C               	rlcf	(??___fladd+3)^0,w,c
  4125  000AA2  320C               	rrcf	(??___fladd+3)^0,f,c
  4126  000AA4  320B               	rrcf	(??___fladd+2)^0,f,c
  4127  000AA6  320A               	rrcf	(??___fladd+1)^0,f,c
  4128  000AA8  3209               	rrcf	??___fladd^0,f,c
  4129  000AAA  C009  F001         	movff	??___fladd,___fladd@b
  4130  000AAE  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  4131  000AB2  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  4132  000AB6  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  4133  000ABA  280F               	incf	___fladd@bexp^0,w,c
  4134  000ABC  B4D8               	btfsc	status,2,c
  4135  000ABE  EF63  F005         	goto	u2181
  4136  000AC2  EF65  F005         	goto	u2180
  4137  000AC6                     u2181:
  4138  000AC6  EF66  F005         	goto	l2066
  4139  000ACA                     u2180:
  4140  000ACA  2A0F               	incf	___fladd@bexp^0,f,c
  4141  000ACC                     l2066:
  4142  000ACC  280F               	incf	___fladd@bexp^0,w,c
  4143  000ACE  B4D8               	btfsc	status,2,c
  4144  000AD0  EF6C  F005         	goto	u2191
  4145  000AD4  EF6E  F005         	goto	u2190
  4146  000AD8                     u2191:
  4147  000AD8  EF76  F005         	goto	l2070
  4148  000ADC                     u2190:
  4149  000ADC  500F               	movf	___fladd@bexp^0,w,c
  4150  000ADE  A4D8               	btfss	status,2,c
  4151  000AE0  EF74  F005         	goto	u2201
  4152  000AE4  EF76  F005         	goto	u2200
  4153  000AE8                     u2201:
  4154  000AE8  EF88  F005         	goto	l2074
  4155  000AEC                     u2200:
  4156  000AEC                     l2070:
  4157  000AEC  0E00               	movlw	0
  4158  000AEE  6E01               	movwf	___fladd@b^0,c
  4159  000AF0  0E00               	movlw	0
  4160  000AF2  6E02               	movwf	(___fladd@b+1)^0,c
  4161  000AF4  0E00               	movlw	0
  4162  000AF6  6E03               	movwf	(___fladd@b+2)^0,c
  4163  000AF8  0E00               	movlw	0
  4164  000AFA  6E04               	movwf	(___fladd@b+3)^0,c
  4165  000AFC  500F               	movf	___fladd@bexp^0,w,c
  4166  000AFE  A4D8               	btfss	status,2,c
  4167  000B00  EF84  F005         	goto	u2211
  4168  000B04  EF86  F005         	goto	u2210
  4169  000B08                     u2211:
  4170  000B08  EF88  F005         	goto	l2074
  4171  000B0C                     u2210:
  4172  000B0C  0E00               	movlw	0
  4173  000B0E  6E0D               	movwf	___fladd@signs^0,c
  4174  000B10                     l2074:
  4175  000B10  A00F               	btfss	___fladd@bexp^0,0,c
  4176  000B12  EF8D  F005         	goto	u2221
  4177  000B16  EF8F  F005         	goto	u2220
  4178  000B1A                     u2221:
  4179  000B1A  EF92  F005         	goto	l2078
  4180  000B1E                     u2220:
  4181  000B1E  8E03               	bsf	(___fladd@b+2)^0,7,c
  4182  000B20  EF93  F005         	goto	l2080
  4183  000B24                     l2078:
  4184  000B24  9E03               	bcf	(___fladd@b+2)^0,7,c
  4185  000B26                     l2080:
  4186  000B26  90D8               	bcf	status,0,c
  4187  000B28  300F               	rrcf	___fladd@bexp^0,w,c
  4188  000B2A  6E04               	movwf	(___fladd@b+3)^0,c
  4189  000B2C  AE0D               	btfss	___fladd@signs^0,7,c
  4190  000B2E  EF9B  F005         	goto	u2231
  4191  000B32  EF9D  F005         	goto	u2230
  4192  000B36                     u2231:
  4193  000B36  EF9E  F005         	goto	l2086
  4194  000B3A                     u2230:
  4195  000B3A  8E04               	bsf	(___fladd@b+3)^0,7,c
  4196  000B3C                     l2086:
  4197  000B3C  C001  F001         	movff	___fladd@b,?___fladd
  4198  000B40  C002  F002         	movff	___fladd@b+1,?___fladd+1
  4199  000B44  C003  F003         	movff	___fladd@b+2,?___fladd+2
  4200  000B48  C004  F004         	movff	___fladd@b+3,?___fladd+3
  4201  000B4C                     l848:
  4202  000B4C  0012               	return		;funcret
  4203  000B4E                     __end_of___fladd:
  4204                           	callstack 0
  4205                           
  4206 ;; *************** function ___awmod *****************
  4207 ;; Defined at:
  4208 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;  dividend        2    8[COMRAM] int 
  4211 ;;  divisor         2   10[COMRAM] int 
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;  sign            1   13[COMRAM] unsigned char 
  4214 ;;  counter         1   12[COMRAM] unsigned char 
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  2    8[COMRAM] int 
  4217 ;; Registers used:
  4218 ;;		wreg, status,2, status,0
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4224 ;;      Params:         4       0       0       0       0       0       0
  4225 ;;      Locals:         2       0       0       0       0       0       0
  4226 ;;      Temps:          0       0       0       0       0       0       0
  4227 ;;      Totals:         6       0       0       0       0       0       0
  4228 ;;Total ram usage:        6 bytes
  4229 ;; Hardware stack levels used: 1
  4230 ;; This function calls:
  4231 ;;		Nothing
  4232 ;; This function is called by:
  4233 ;;		_cronometro
  4234 ;;		_lcdNumber
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           	psect	text24
  4239  001880                     __ptext24:
  4240                           	callstack 0
  4241  001880                     ___awmod:
  4242                           	callstack 29
  4243  001880  0E00               	movlw	0
  4244  001882  6E0E               	movwf	___awmod@sign^0,c
  4245  001884  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  4246  001886  EF49  F00C         	goto	u2300
  4247  00188A  EF47  F00C         	goto	u2301
  4248  00188E                     u2301:
  4249  00188E  EF4F  F00C         	goto	l2142
  4250  001892                     u2300:
  4251  001892  6C09               	negf	___awmod@dividend^0,c
  4252  001894  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4253  001896  B0D8               	btfsc	status,0,c
  4254  001898  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4255  00189A  0E01               	movlw	1
  4256  00189C  6E0E               	movwf	___awmod@sign^0,c
  4257  00189E                     l2142:
  4258  00189E  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  4259  0018A0  EF56  F00C         	goto	u2310
  4260  0018A4  EF54  F00C         	goto	u2311
  4261  0018A8                     u2311:
  4262  0018A8  EF5A  F00C         	goto	l2146
  4263  0018AC                     u2310:
  4264  0018AC  6C0B               	negf	___awmod@divisor^0,c
  4265  0018AE  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  4266  0018B0  B0D8               	btfsc	status,0,c
  4267  0018B2  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  4268  0018B4                     l2146:
  4269  0018B4  500B               	movf	___awmod@divisor^0,w,c
  4270  0018B6  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  4271  0018B8  B4D8               	btfsc	status,2,c
  4272  0018BA  EF61  F00C         	goto	u2321
  4273  0018BE  EF63  F00C         	goto	u2320
  4274  0018C2                     u2321:
  4275  0018C2  EF87  F00C         	goto	l2162
  4276  0018C6                     u2320:
  4277  0018C6  0E01               	movlw	1
  4278  0018C8  6E0D               	movwf	___awmod@counter^0,c
  4279  0018CA  EF6B  F00C         	goto	l2152
  4280  0018CE                     l2150:
  4281  0018CE  90D8               	bcf	status,0,c
  4282  0018D0  360B               	rlcf	___awmod@divisor^0,f,c
  4283  0018D2  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  4284  0018D4  2A0D               	incf	___awmod@counter^0,f,c
  4285  0018D6                     l2152:
  4286  0018D6  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  4287  0018D8  EF70  F00C         	goto	u2331
  4288  0018DC  EF72  F00C         	goto	u2330
  4289  0018E0                     u2331:
  4290  0018E0  EF67  F00C         	goto	l2150
  4291  0018E4                     u2330:
  4292  0018E4                     l2154:
  4293  0018E4  500B               	movf	___awmod@divisor^0,w,c
  4294  0018E6  5C09               	subwf	___awmod@dividend^0,w,c
  4295  0018E8  500C               	movf	(___awmod@divisor+1)^0,w,c
  4296  0018EA  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  4297  0018EC  A0D8               	btfss	status,0,c
  4298  0018EE  EF7B  F00C         	goto	u2341
  4299  0018F2  EF7D  F00C         	goto	u2340
  4300  0018F6                     u2341:
  4301  0018F6  EF81  F00C         	goto	l2158
  4302  0018FA                     u2340:
  4303  0018FA  500B               	movf	___awmod@divisor^0,w,c
  4304  0018FC  5E09               	subwf	___awmod@dividend^0,f,c
  4305  0018FE  500C               	movf	(___awmod@divisor+1)^0,w,c
  4306  001900  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  4307  001902                     l2158:
  4308  001902  90D8               	bcf	status,0,c
  4309  001904  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  4310  001906  320B               	rrcf	___awmod@divisor^0,f,c
  4311  001908  2E0D               	decfsz	___awmod@counter^0,f,c
  4312  00190A  EF72  F00C         	goto	l2154
  4313  00190E                     l2162:
  4314  00190E  500E               	movf	___awmod@sign^0,w,c
  4315  001910  B4D8               	btfsc	status,2,c
  4316  001912  EF8D  F00C         	goto	u2351
  4317  001916  EF8F  F00C         	goto	u2350
  4318  00191A                     u2351:
  4319  00191A  EF93  F00C         	goto	l2166
  4320  00191E                     u2350:
  4321  00191E  6C09               	negf	___awmod@dividend^0,c
  4322  001920  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4323  001922  B0D8               	btfsc	status,0,c
  4324  001924  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4325  001926                     l2166:
  4326  001926  C009  F009         	movff	___awmod@dividend,?___awmod
  4327  00192A  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  4328  00192E  0012               	return		;funcret
  4329  001930                     __end_of___awmod:
  4330                           	callstack 0
  4331                           
  4332 ;; *************** function ___awdiv *****************
  4333 ;; Defined at:
  4334 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;  dividend        2    0[COMRAM] int 
  4337 ;;  divisor         2    2[COMRAM] int 
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;  quotient        2    6[COMRAM] int 
  4340 ;;  sign            1    5[COMRAM] unsigned char 
  4341 ;;  counter         1    4[COMRAM] unsigned char 
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  2    0[COMRAM] int 
  4344 ;; Registers used:
  4345 ;;		wreg, status,2, status,0
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4351 ;;      Params:         4       0       0       0       0       0       0
  4352 ;;      Locals:         4       0       0       0       0       0       0
  4353 ;;      Temps:          0       0       0       0       0       0       0
  4354 ;;      Totals:         8       0       0       0       0       0       0
  4355 ;;Total ram usage:        8 bytes
  4356 ;; Hardware stack levels used: 1
  4357 ;; This function calls:
  4358 ;;		Nothing
  4359 ;; This function is called by:
  4360 ;;		_cronometro
  4361 ;;		_lcdNumber
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           	psect	text25
  4366  001708                     __ptext25:
  4367                           	callstack 0
  4368  001708                     ___awdiv:
  4369                           	callstack 29
  4370  001708  0E00               	movlw	0
  4371  00170A  6E06               	movwf	___awdiv@sign^0,c
  4372  00170C  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4373  00170E  EF8D  F00B         	goto	u2240
  4374  001712  EF8B  F00B         	goto	u2241
  4375  001716                     u2241:
  4376  001716  EF93  F00B         	goto	l2098
  4377  00171A                     u2240:
  4378  00171A  6C03               	negf	___awdiv@divisor^0,c
  4379  00171C  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4380  00171E  B0D8               	btfsc	status,0,c
  4381  001720  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4382  001722  0E01               	movlw	1
  4383  001724  6E06               	movwf	___awdiv@sign^0,c
  4384  001726                     l2098:
  4385  001726  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4386  001728  EF9A  F00B         	goto	u2250
  4387  00172C  EF98  F00B         	goto	u2251
  4388  001730                     u2251:
  4389  001730  EFA0  F00B         	goto	l2104
  4390  001734                     u2250:
  4391  001734  6C01               	negf	___awdiv@dividend^0,c
  4392  001736  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4393  001738  B0D8               	btfsc	status,0,c
  4394  00173A  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4395  00173C  0E01               	movlw	1
  4396  00173E  1A06               	xorwf	___awdiv@sign^0,f,c
  4397  001740                     l2104:
  4398  001740  0E00               	movlw	0
  4399  001742  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4400  001744  0E00               	movlw	0
  4401  001746  6E07               	movwf	___awdiv@quotient^0,c
  4402  001748  5003               	movf	___awdiv@divisor^0,w,c
  4403  00174A  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4404  00174C  B4D8               	btfsc	status,2,c
  4405  00174E  EFAB  F00B         	goto	u2261
  4406  001752  EFAD  F00B         	goto	u2260
  4407  001756                     u2261:
  4408  001756  EFD5  F00B         	goto	l2126
  4409  00175A                     u2260:
  4410  00175A  0E01               	movlw	1
  4411  00175C  6E05               	movwf	___awdiv@counter^0,c
  4412  00175E  EFB5  F00B         	goto	l2112
  4413  001762                     l2110:
  4414  001762  90D8               	bcf	status,0,c
  4415  001764  3603               	rlcf	___awdiv@divisor^0,f,c
  4416  001766  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4417  001768  2A05               	incf	___awdiv@counter^0,f,c
  4418  00176A                     l2112:
  4419  00176A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4420  00176C  EFBA  F00B         	goto	u2271
  4421  001770  EFBC  F00B         	goto	u2270
  4422  001774                     u2271:
  4423  001774  EFB1  F00B         	goto	l2110
  4424  001778                     u2270:
  4425  001778                     l2114:
  4426  001778  90D8               	bcf	status,0,c
  4427  00177A  3607               	rlcf	___awdiv@quotient^0,f,c
  4428  00177C  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4429  00177E  5003               	movf	___awdiv@divisor^0,w,c
  4430  001780  5C01               	subwf	___awdiv@dividend^0,w,c
  4431  001782  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4432  001784  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4433  001786  A0D8               	btfss	status,0,c
  4434  001788  EFC8  F00B         	goto	u2281
  4435  00178C  EFCA  F00B         	goto	u2280
  4436  001790                     u2281:
  4437  001790  EFCF  F00B         	goto	l2122
  4438  001794                     u2280:
  4439  001794  5003               	movf	___awdiv@divisor^0,w,c
  4440  001796  5E01               	subwf	___awdiv@dividend^0,f,c
  4441  001798  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4442  00179A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4443  00179C  8007               	bsf	___awdiv@quotient^0,0,c
  4444  00179E                     l2122:
  4445  00179E  90D8               	bcf	status,0,c
  4446  0017A0  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4447  0017A2  3203               	rrcf	___awdiv@divisor^0,f,c
  4448  0017A4  2E05               	decfsz	___awdiv@counter^0,f,c
  4449  0017A6  EFBC  F00B         	goto	l2114
  4450  0017AA                     l2126:
  4451  0017AA  5006               	movf	___awdiv@sign^0,w,c
  4452  0017AC  B4D8               	btfsc	status,2,c
  4453  0017AE  EFDB  F00B         	goto	u2291
  4454  0017B2  EFDD  F00B         	goto	u2290
  4455  0017B6                     u2291:
  4456  0017B6  EFE1  F00B         	goto	l2130
  4457  0017BA                     u2290:
  4458  0017BA  6C07               	negf	___awdiv@quotient^0,c
  4459  0017BC  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4460  0017BE  B0D8               	btfsc	status,0,c
  4461  0017C0  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4462  0017C2                     l2130:
  4463  0017C2  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4464  0017C6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4465  0017CA  0012               	return		;funcret
  4466  0017CC                     __end_of___awdiv:
  4467                           	callstack 0
  4468                           
  4469                           	psect	rparam
  4470  0000                     
  4471                           	psect	idloc
  4472                           
  4473                           ;Config register IDLOC0 @ 0x200000
  4474                           ;	unspecified, using default values
  4475  200000                     	org	2097152
  4476  200000  FF                 	db	255
  4477                           
  4478                           ;Config register IDLOC1 @ 0x200001
  4479                           ;	unspecified, using default values
  4480  200001                     	org	2097153
  4481  200001  FF                 	db	255
  4482                           
  4483                           ;Config register IDLOC2 @ 0x200002
  4484                           ;	unspecified, using default values
  4485  200002                     	org	2097154
  4486  200002  FF                 	db	255
  4487                           
  4488                           ;Config register IDLOC3 @ 0x200003
  4489                           ;	unspecified, using default values
  4490  200003                     	org	2097155
  4491  200003  FF                 	db	255
  4492                           
  4493                           ;Config register IDLOC4 @ 0x200004
  4494                           ;	unspecified, using default values
  4495  200004                     	org	2097156
  4496  200004  FF                 	db	255
  4497                           
  4498                           ;Config register IDLOC5 @ 0x200005
  4499                           ;	unspecified, using default values
  4500  200005                     	org	2097157
  4501  200005  FF                 	db	255
  4502                           
  4503                           ;Config register IDLOC6 @ 0x200006
  4504                           ;	unspecified, using default values
  4505  200006                     	org	2097158
  4506  200006  FF                 	db	255
  4507                           
  4508                           ;Config register IDLOC7 @ 0x200007
  4509                           ;	unspecified, using default values
  4510  200007                     	org	2097159
  4511  200007  FF                 	db	255
  4512                           
  4513                           	psect	config
  4514                           
  4515                           ; Padding undefined space
  4516  300000                     	org	3145728
  4517  300000  FF                 	db	255
  4518                           
  4519                           ;Config register CONFIG1H @ 0x300001
  4520                           ;	Oscillator Selection bits
  4521                           ;	OSC = HS, HS oscillator
  4522                           ;	Fail-Safe Clock Monitor Enable bit
  4523                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4524                           ;	Internal/External Oscillator Switchover bit
  4525                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4526  300001                     	org	3145729
  4527  300001  02                 	db	2
  4528                           
  4529                           ;Config register CONFIG2L @ 0x300002
  4530                           ;	Power-up Timer Enable bit
  4531                           ;	PWRT = OFF, PWRT disabled
  4532                           ;	Brown-out Reset Enable bits
  4533                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4534                           ;	Brown Out Reset Voltage bits
  4535                           ;	BORV = 0x2E, user specified literal
  4536  300002                     	org	3145730
  4537  300002  71                 	db	369
  4538                           
  4539                           ;Config register CONFIG2H @ 0x300003
  4540                           ;	Watchdog Timer Enable bit
  4541                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4542                           ;	Watchdog Timer Postscale Select bits
  4543                           ;	WDTPS = 1, 1:1
  4544  300003                     	org	3145731
  4545  300003  00                 	db	0
  4546                           
  4547                           ; Padding undefined space
  4548  300004                     	org	3145732
  4549  300004  FF                 	db	255
  4550                           
  4551                           ;Config register CONFIG3H @ 0x300005
  4552                           ;	CCP2 MUX bit
  4553                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4554                           ;	PORTB A/D Enable bit
  4555                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4556                           ;	Low-Power Timer1 Oscillator Enable bit
  4557                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4558                           ;	MCLR Pin Enable bit
  4559                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4560  300005                     	org	3145733
  4561  300005  83                 	db	131
  4562                           
  4563                           ;Config register CONFIG4L @ 0x300006
  4564                           ;	Stack Full/Underflow Reset Enable bit
  4565                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  4566                           ;	Single-Supply ICSP Enable bit
  4567                           ;	LVP = OFF, Single-Supply ICSP disabled
  4568                           ;	Extended Instruction Set Enable bit
  4569                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4570                           ;	Background Debugger Enable bit
  4571                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4572  300006                     	org	3145734
  4573  300006  80                 	db	128
  4574                           
  4575                           ; Padding undefined space
  4576  300007                     	org	3145735
  4577  300007  FF                 	db	255
  4578                           
  4579                           ;Config register CONFIG5L @ 0x300008
  4580                           ;	Code Protection bit
  4581                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4582                           ;	Code Protection bit
  4583                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4584                           ;	Code Protection bit
  4585                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4586                           ;	Code Protection bit
  4587                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4588  300008                     	org	3145736
  4589  300008  0F                 	db	15
  4590                           
  4591                           ;Config register CONFIG5H @ 0x300009
  4592                           ;	Boot Block Code Protection bit
  4593                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4594                           ;	Data EEPROM Code Protection bit
  4595                           ;	CPD = OFF, Data EEPROM not code-protected
  4596  300009                     	org	3145737
  4597  300009  C0                 	db	192
  4598                           
  4599                           ;Config register CONFIG6L @ 0x30000A
  4600                           ;	Write Protection bit
  4601                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4602                           ;	Write Protection bit
  4603                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4604                           ;	Write Protection bit
  4605                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4606                           ;	Write Protection bit
  4607                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4608  30000A                     	org	3145738
  4609  30000A  0F                 	db	15
  4610                           
  4611                           ;Config register CONFIG6H @ 0x30000B
  4612                           ;	Configuration Register Write Protection bit
  4613                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4614                           ;	Boot Block Write Protection bit
  4615                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4616                           ;	Data EEPROM Write Protection bit
  4617                           ;	WRTD = OFF, Data EEPROM not write-protected
  4618  30000B                     	org	3145739
  4619  30000B  E0                 	db	224
  4620                           
  4621                           ;Config register CONFIG7L @ 0x30000C
  4622                           ;	Table Read Protection bit
  4623                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4624                           ;	Table Read Protection bit
  4625                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4626                           ;	Table Read Protection bit
  4627                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4628                           ;	Table Read Protection bit
  4629                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4630  30000C                     	org	3145740
  4631  30000C  0F                 	db	15
  4632                           
  4633                           ;Config register CONFIG7H @ 0x30000D
  4634                           ;	Boot Block Table Read Protection bit
  4635                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4636  30000D                     	org	3145741
  4637  30000D  40                 	db	64
  4638                           tosu	equ	0xFFF
  4639                           tosh	equ	0xFFE
  4640                           tosl	equ	0xFFD
  4641                           stkptr	equ	0xFFC
  4642                           pclatu	equ	0xFFB
  4643                           pclath	equ	0xFFA
  4644                           pcl	equ	0xFF9
  4645                           tblptru	equ	0xFF8
  4646                           tblptrh	equ	0xFF7
  4647                           tblptrl	equ	0xFF6
  4648                           tablat	equ	0xFF5
  4649                           prodh	equ	0xFF4
  4650                           prodl	equ	0xFF3
  4651                           indf0	equ	0xFEF
  4652                           postinc0	equ	0xFEE
  4653                           postdec0	equ	0xFED
  4654                           preinc0	equ	0xFEC
  4655                           plusw0	equ	0xFEB
  4656                           fsr0h	equ	0xFEA
  4657                           fsr0l	equ	0xFE9
  4658                           wreg	equ	0xFE8
  4659                           indf1	equ	0xFE7
  4660                           postinc1	equ	0xFE6
  4661                           postdec1	equ	0xFE5
  4662                           preinc1	equ	0xFE4
  4663                           plusw1	equ	0xFE3
  4664                           fsr1h	equ	0xFE2
  4665                           fsr1l	equ	0xFE1
  4666                           bsr	equ	0xFE0
  4667                           indf2	equ	0xFDF
  4668                           postinc2	equ	0xFDE
  4669                           postdec2	equ	0xFDD
  4670                           preinc2	equ	0xFDC
  4671                           plusw2	equ	0xFDB
  4672                           fsr2h	equ	0xFDA
  4673                           fsr2l	equ	0xFD9
  4674                           status	equ	0xFD8

Data Sizes:
    Strings     98
    Constant    42
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     29      47
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[15]), 
		 -> STR_2(CODE[16]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_cronometro
    _ssdInit->_pinMode
    _lcdString->_lcdChar
    _lcdChar->_pushByte
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _pulseEnablePin->_digitalWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _kpDebounce->_soWrite
    _cronometro->___fladd
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  148499
                                             26 COMRAM     3     3      0
                         _cronometro
                         _kpDebounce
                             _kpInit
                          _kpReadKey
                         _lcdCommand
                            _lcdInit
                          _lcdString
                            _ssdInit
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    4224
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _lcdString                                            6     4      2   24605
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (2) _lcdChar                                              1     1      0   24059
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   52748
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   23765
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   24029
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) _pushByte                                             4     2      2   23657
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (4) _pulseEnablePin                                       0     0      0    4776
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _kpReadKey                                            5     5      0      60
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    4224
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    2112
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    2112
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                           5     5      0   14729
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          5     3      2     372
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _cronometro                                          10     8      2   23833
                                             16 COMRAM    10     8      2
                            ___awdiv
                            ___awmod
                            ___fladd
                             ___flge
                       _digitalWrite
                            _soWrite
 ---------------------------------------------------------------------------------
 (4) _soWrite                                              3     1      2   14245
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _PulseEnClock                                         0     0      0    4396
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _PulseClockData                                       0     0      0    4396
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _digitalWrite                                         6     2      4    4396
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2388
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     904
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1060
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cronometro
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     ___fladd
     ___flge
     _digitalWrite
     _soWrite
       _PulseClockData
         _digitalWrite
       _PulseEnClock
         _digitalWrite
       _digitalWrite
   _kpDebounce
     _digitalRead
     _soWrite
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _kpReadKey
   _lcdCommand
     _delayMili
     _pushByte
       _digitalWrite
       _pulseEnablePin
         _delayMicro
         _digitalWrite
       _soWrite
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _lcdString
     _lcdChar
       _delayMicro
       _pushByte
   _ssdInit
     _pinMode
     _soInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1D      2F       1       37.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2F      15        0.0%
DATA                 0      0      2F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Dec 16 21:59:35 2021

         _pulseEnablePin 1AFC             lcdString@msg 000F                       l45 0DD8  
                     l97 1A56             ___awdiv@sign 0006                       _v0 002E  
                     _v1 002D                       _v2 002C                       _v3 0027  
                    l202 1CAA                      l211 1B3C                      l220 1C92  
                    l214 1C56                      l143 13DE                      l144 13DA  
                    l208 1BDC                      l217 1A00                      l234 1AAC  
                    l139 1274                      l243 187E                      l148 13DA  
                    l180 1B7A                      l228 1C74                      l173 1026  
                    l183 1C06                      l191 1AFA                      l280 14FC  
                    l186 1C30                      l282 1514                      l266 19A6  
                    l285 1BAC                      l542 17CA                      l555 192E  
                    l581 1618                      l840 086A                      l576 15D2  
                    l841 0830                      l839 087C                      l856 0996  
                    l848 0B4C                      l865 0A66                      l866 0A54  
           ___awmod@sign 000E                      wreg 000FE8       cronometro@contador 0011  
                   l2000 08DA                     l2010 0904                     l2002 08E6  
                   l2100 1734                     l2020 0976                     l2004 08EA  
                   l2012 090A                     l2110 1762                     l2102 173C  
                   l2030 09D0                     l2014 0930                     l2022 0986  
                   l2006 08F8                     l2120 179C                     l2112 176A  
                   l2104 1740                     l2040 0A00                     l2032 09DA  
                   l2024 09AC                     l2016 0964                     l2008 08FA  
                   l2200 0C4C                     l2130 17C2                     l2122 179E  
                   l2114 1778                     l2106 1748                     l2050 0A28  
                   l2042 0A04                     l2034 09E8                     l2026 09BC  
                   l2018 0966                     l2210 0CAC                     l2202 0C64  
                   l2124 17A4                     l2116 177E                     l2108 175A  
                   l2140 189A                     l2060 0A82                     l2052 0A36  
                   l2044 0A14                     l2036 09EA                     l2212 0CB4  
                   l2204 0C78                     l2300 1626                     l2118 1794  
                   l2126 17AA                     l2150 18CE                     l2142 189E  
                   l2134 1880                     l2070 0AEC                     l2062 0A90  
                   l2054 0A4C                     l2038 09F8                     l2046 0A16  
                   l2230 0D68                     l2214 0CCC                     l2206 0C80  
                   l2222 0CF0                     l2310 1656                     l2302 162A  
                   l2128 17BA                     l2160 1908                     l2152 18D6  
                   l2144 18AC                     l2136 1884                     l2080 0B26  
                   l2072 0B0C                     l2064 0ACA                     l2048 0A24  
                   l2232 0DCE                     l2216 0CE0                     l2208 0C98  
                   l2224 0D22                     l2240 17CC                     l2320 168A  
                   l2312 166A                     l2304 1634                     l2090 1708  
                   l2154 18E4                     l2162 190E                     l2146 18B4  
                   l2138 1892                     l2082 0B2C                     l2074 0B10  
                   l2058 0A76                     l2066 0ACC                     l2170 1516  
                   l2226 0D32                     l2218 0CE8                     l2250 186C  
                   l2242 182C                     l2330 16BA                     l2322 1690  
                   l2314 1674                     l2306 1640                     l2092 170C  
                   l2164 191E                     l2156 18FA                     l2148 18C6  
                   l2084 0B3A                     l2076 0B1E                     l2068 0ADC  
                   l2180 15A0                     l2172 1544                     l2252 1872  
                   l2244 1838                     l2260 1A02                     l2404 16F6  
                   l2332 16C0                     l2324 169C                     l2316 1678  
                   l2340 16E2                     l2308 1652                     l2094 171A  
                   l2166 1926                     l2158 1902                     l2086 0B3C  
                   l2078 0B24                     l2182 15B2                     l2174 1554  
                   l2406 0D04                     l2270 13E0                     l2254 1878  
                   l2246 1852                     l2262 1A58                     l2334 16CC  
                   l2326 16A8                     l2318 167E                     l2096 1722  
                   l2184 15C0                     l2176 1582                     l2192 0B4E  
                   l2280 1482                     l2272 13F0                     l1800 0E4A  
                   l2256 1B7C                     l2248 1860                     l2264 1A64  
                   l2336 16D8                     l2328 16AE                     l2098 1726  
                   l2186 1610                     l2178 1592                     l1730 1076  
                   l2194 0B56                     l2290 14EA                     l2282 14A0  
                   l1810 0EDE                     l1802 0E66                     l2258 1BA8  
                   l1570 1984                     l2266 1A80                     l1900 06DA  
                   l2188 1616                     l1740 1110                     l1732 1098  
                   l1724 1028                     l2292 14F0                     l2284 14CA  
                   l2276 1410                     l1820 0F68                     l1812 0EF0  
                   l1804 0E78                     l1572 1988                     l1564 1938  
                   l2268 1A84                     l1910 070C                     l1902 06DC  
                   l1750 11A4                     l1742 112C                     l1734 10B4  
                   l1726 1044                     l2198 0B68                     l2294 14F4  
                   l2278 145C                     l1830 1004                     l1822 0F8C  
                   l1814 0F14                     l1806 0E9C                     l1574 19A4  
                   l1566 1970                     l1558 1930                     l1920 0734  
                   l1912 070E                     l1904 06E4                     l1760 1236  
                   l1752 11BE                     l1744 1146                     l1736 10CE  
                   l1728 1056                     l2296 150C                     l2288 14D2  
                   l1824 0FB2                     l1816 0F3A                     l1808 0EC2  
                   l1832 1BAE                     l1840 1C78                     l1930 076E  
                   l1922 0744                     l1914 0714                     l1906 06F4  
                   l1762 1256                     l1754 11DE                     l1746 1166  
                   l1738 10EE                     l1770 1AC2                     l1826 0FCE  
                   l1818 0F56                     l1842 1B3E                     l1834 1BBA  
                   l2298 161A                     l1940 079A                     l1932 0780  
                   l1924 0754                     l1916 0722                     l1908 06FA  
                   l1756 1200                     l1748 1188                     l1764 1BDE  
                   l1780 1AE4                     l1860 1302                     l1852 12BA  
                   l1844 1276                     l1828 0FE0                     l1836 1BBE  
                   l1950 07AE                     l1942 079E                     l1934 078E  
                   l1926 0756                     l1918 0724                     l1758 121C  
                   l1766 1C08                     l1782 1AE6                     l1870 1366  
                   l1862 131E                     l1854 12D6                     l1846 1292  
                   l1790 1B1C                     l1838 19AA                     l1960 07C2  
                   l1952 07B2                     l1944 07A2                     l1936 0792  
                   l1928 075E                     l1784 1AF6                     l1776 1AC6  
                   l1768 1AAE                     l1792 0DDA                     l1970 07FC  
                   l1962 07C6                     l1954 07B6                     l1946 07A6  
                   l1938 0796                     l1890 069A                     l1778 1ADE  
                   l1794 0DF6                     l1786 1AFC                     l1882 1C34  
                   l1980 084E                     l1972 0818                     l1964 07CA  
                   l1956 07BA                     l1948 07AA                     l1892 06A8  
                   l1876 1392                     l1868 134A                     l1796 0E08  
                   l1788 1B10                     l1884 1C5A                     l1990 089A  
                   l1982 085C                     l1974 0828                     l1958 07BE  
                   l1966 07CE                     l1894 06AA                     l1878 13AE  
                   l1798 0E28                     l1886 1C68                     l1984 085E  
                   l1976 083E                     l1968 07D2                     l1896 06BA  
                   l1888 068E                     l1994 08AE                     l1986 0868  
                   l1978 084A                     l1898 06CA                     l1996 08BE  
                   l1988 088A                     l1998 08CC                     STR_1 065E  
                   STR_2 066E                     STR_3 067E                     STR_4 062B  
                   STR_5 063C                     STR_6 064D                     u2000 088A  
                   u2001 0886                     u2010 089A                     u2011 0896  
                   u2100 09F8                     u2020 08CC                     u1220 1970  
                   u2101 09F4                     u2021 08C8                     u1221 196C  
                   u2110 0A14                     u2030 08DA                     u1230 19A4  
                   u1214 1950                     u2111 0A10                     u2031 08D6  
                   u1231 19A0                     u1215 194A                     u2200 0AEC  
                   u2120 0A24                     u2040 08F8                     u2201 0AE8  
                   u2121 0A20                     u2041 08F4                     u2210 0B0C  
                   u2130 0A36                     u2050 0930                     u1410 112C  
                   u1330 1044                     u2211 0B08                     u2131 0A32  
                   u2051 092C                     u1411 1128                     u1331 1040  
                   u2300 1892                     u2220 0B1E                     u2140 0A4C  
                   u2060 0976                     u1500 1236                     u1420 1146  
                   u1404 1100                     u1340 1056                     u2301 188E  
                   u2221 0B1A                     u2141 0A48                     u2061 0972  
                   u1501 1232                     u1421 1142                     u1405 10FC  
                   u1341 1052                     u2310 18AC                     u2230 0B3A  
                   u2150 0A62                     u2070 09AC                     u2311 18A8  
                   u2231 0B36                     u2151 0A5E                     u2071 09A8  
                   u2240 171A                     u2320 18C6                     u2160 0A76  
                   u2080 09BC                     u2400 1610                     u2241 1716  
                   u2321 18C2                     u2161 0A72                     u2081 09B8  
                   u2401 160C                     u2250 1734                     u2330 18E4  
                   u2170 0A90                     u2090 09E8                     u1514 1248  
                   u1450 11A4                     u1434 1158                     u1370 10B4  
                   u1354 1068                     u1530 1AF6                     u2410 0B64  
                   u2251 1730                     u2331 18E0                     u2171 0A8C  
                   u2091 09E4                     u1515 1244                     u1451 11A0  
                   u1435 1154                     u1371 10B0                     u1355 1064  
                   u1531 1AF2                     u2411 0B60                     u2260 175A  
                   u2340 18FA                     u2180 0ACA                     u1524 1268  
                   u1460 11BE                     u1444 1178                     u1380 10CE  
                   u1364 1088                     u2420 0D64                     u1700 0FCE  
                   u1620 0EDE                     u1604 0E8E                     u1540 0DF6  
                   u2261 1756                     u2341 18F6                     u2181 0AC6  
                   u1525 1264                     u1461 11BA                     u1445 1174  
                   u1381 10CA                     u1365 1084                     u2421 0D60  
                   u1701 0FCA                     u1621 0EDA                     u1605 0E8A  
                   u1541 0DF2                     u2270 1778                     u2350 191E  
                   u2190 0ADC                     u2430 0DCE                     u2510 14EA  
                   u1710 0FE0                     u1630 0EF0                     u1614 0EB2  
                   u1550 0E08                     u2271 1774                     u2351 191A  
                   u2191 0AD8                     u2431 0DCA                     u2511 14E6  
                   u1711 0FDC                     u1631 0EEC                     u1615 0EAE  
                   u1551 0E04                     u2280 1794                     u2360 1544  
                   u2520 150C                     u2504 14BC                     u2440 1AAC  
                   u2281 1790                     u2361 1540                     u2521 1508  
                   u2505 14B6                     u2441 1AA8                     u2290 17BA  
                   u2370 1582                     u1490 121C                     u1474 11D0  
                   u1394 10E0                     u1810 1366                     u2450 140C  
                   u2530 166A                     u2291 17B6                     u2371 157E  
                   u1491 1218                     u1475 11CC                     u1395 10DC  
                   u1811 1362                     u2451 1408                     u2531 1666  
                   u1900 0734                     u2380 15A0                     u1484 11F0  
                   u1804 1334                     u1724 0FF6                     u1660 0F56  
                   u1644 0F06                     u1580 0E66                     u1564 0E1A  
                   u1740 1BDC                     u1901 0730                     u2381 159C  
                   u1485 11EC                     u1805 1330                     u1725 0FF2  
                   u1661 0F52                     u1645 0F02                     u1581 0E62  
                   u1565 0E16                     u1741 1BD8                     u1910 0744  
                   u2390 15C0                     u1830 13AE                     u1750 1292  
                   u2470 145C                     u1734 101A                     u1670 0F68  
                   u1654 0F2A                     u1590 0E78                     u1574 0E3A  
                   u1911 0740                     u2391 15BC                     u1831 13AA  
                   u1751 128E                     u2471 1458                     u1735 1016  
                   u1671 0F64                     u1655 0F26                     u1591 0E74  
                   u1575 0E36                     u1920 0780                     u1824 137C  
                   u2464 142C                     u1921 077C                     u1825 1378  
                   u2465 1426                     u1930 078E                     u1850 06A8  
                   u1770 12D6                     u2490 14A0                     u1931 078A  
                   u1851 06A4                     u1771 12D2                     u2491 149C  
                   u1940 07FC                     u1860 06BA                     u1844 13C4  
                   u1764 12A4                     u2484 1474                     u1684 0F7E  
                   u1941 07F8                     u1861 06B6                     u1845 13C0  
                   u1765 12A0                     u2485 146E                     u1685 0F7A  
                   u1950 0814                     u1870 06CA                     u1790 131E  
                   u1694 0FA2                     u1951 080E                     u1871 06C6  
                   u1791 131A                     u1695 0F9E                     u1960 0816  
                   u1880 070C                     u1784 12EC                     u1881 0708  
                   u1785 12E8                     u1970 083E                     u1890 0722  
                   u1971 083A                     u1891 071E                     u1980 085C  
                   u1981 0858                     u1990 087C                     u1991 0878  
                   _main 161A                     _keys 0022         ??_PulseClockData 0007  
                   start 0000          pushNibble@value 000C             ___param_bank 000000  
 __end_of_pulseEnablePin 1B3E          __end_of___fladd 0B4E                    ?_main 0001  
        __end_of___awdiv 17CC          __end_of___awmod 1930                    _T0CON 000FD5  
        ___awdiv@divisor 0003          ___awdiv@counter 0005                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
        __end_of_charKey 062B                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
        __end_of_lcdChar 1C76          __end_of_lcdInit 1880          __end_of_pinMode 1028  
                  _valor 0611          __end_of_soWrite 1AFC                    tablat 000FF5  
        __end_of_ssdInit 1A58                    status 000FD8             pushNibble@rs 000A  
   __end_of_digitalWrite 1276          __initialization 1C94          ?_pulseEnablePin 0001  
           __end_of_main 1708                   ??_main 001B            __activetblptr 000002  
   __size_of_digitalRead 016A                   _ADCON1 000FC1         ___awdiv@dividend 0001  
                 _INTCON 000FF2           cronometro@cont 0019                   ___flge 1516  
              ??___fladd 0009                ??___awdiv 0005                ??___awmod 000D  
                 _kpInit 1B7C                   clear_0 1C9A                   _soInit 1B3E  
       ___awdiv@quotient 0007          ___awmod@divisor 000B                ??_lcdChar 000E  
                 isa$std 000001                ??_lcdInit 000F          ___awmod@counter 000D  
              ??_pinMode 0005             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_soWrite 0009  
              ??_ssdInit 0007         __end_of_pushByte 1A02               ___flge@ff1 0001  
             ___flge@ff2 0005               __accesstop 0080  __end_of__initialization 1CA0  
          ___rparam_used 000001            pushByte@value 000D              pinMode@type 0003  
         __pcstackCOMRAM 0001            __end_of_valor 0621       __size_of_delayMili 0030  
     __size_of_lcdString 0056       __size_of_kpReadKey 0078    __size_of_digitalWrite 024E  
             _delayMicro 1CAA              _v0@ssd$F185 002A                  ?___flge 0001  
             _lcdCommand 1C76              _v1@ssd$F186 0029                  ?_kpInit 0001  
                ?_soInit 0001               _kpDebounce 13E0              _v2@ssd$F187 0028  
           _digitalWrite 1028          cronometro@tempo 0015        __end_of_delayMili 1BDE  
       ??_pulseEnablePin 0007               _cronometro 0B4E                  __Hparam 0000  
                _Teclado 0024                  __Lparam 0000        __end_of_lcdString 1AAE  
        kpDebounce@tempo 0026        __end_of_kpReadKey 19A8          __size_of___flge 0104  
                ___fladd 068E                  ___awdiv 1708                  ___awmod 1880  
              ?_pushByte 000A             __psmallconst 0600          __size_of_kpInit 0032  
                _charKey 0621                  __pcinit 1C94                  _lcdChar 1C58  
                __ramtop 0600          __size_of_soInit 003E                  _lcdInit 17CC  
                __ptext0 161A                  __ptext1 1A02                  __ptext2 1A58  
                __ptext3 1C58                  __ptext4 17CC                  __ptext5 1C32  
                __ptext6 1C76                  __ptext7 19A8                  __ptext8 1AFC  
                __ptext9 1CAA                  _display 002F                  _pinMode 0DDA  
       ___awmod@dividend 0009               delayMili@a 0001               delayMili@i 0004  
                _soWrite 1AAE                  _ssdInit 1A02     end_of_initialization 1CA0  
          ?_PulseEnClock 0001            __Lmediumconst 0000           digitalRead@pin 0001  
            ?_delayMicro 0001              ?_lcdCommand 0001                  postinc0 000FEE  
             ??_pushByte 000C  __size_of_PulseClockData 002A            ??_digitalRead 0003  
            ?_kpDebounce 0001           _valor@ssd$F183 0601              ___fladd@grs 0010  
             _pushNibble 1C32               lcdString@i 0013           ??_PulseEnClock 0007  
             kpReadKey@i 0004              ?_cronometro 0011           __end_of___flge 161A  
         __end_of_kpInit 1BAE   __end_of_valor@ssd$F183 0611           __end_of_soInit 1B7C  
    __size_of_delayMicro 0002      start_initialization 1C94      __end_of_digitalRead 13E0  
    __size_of_lcdCommand 001E      __size_of_kpDebounce 0136        kpDebounce@oldRead 001E  
      kpDebounce@newRead 0020                 ??___flge 0009                 ??_kpInit 0007  
               ??_soInit 0007                ___fladd@a 0005                ___fladd@b 0001  
            __pbssCOMRAM 001E              ?_pushNibble 000A               pinMode@pin 0001  
    __size_of_cronometro 028C                _delayMili 1BAE                 ?___fladd 0001  
               ?___awdiv 0001                 ?___awmod 0009           _PulseClockData 1C08  
   __end_of_PulseEnClock 1C08                _lcdString 1A58              _digitalRead 1276  
               ?_lcdChar 0001        __size_of_pushByte 005A                 ?_lcdInit 0001  
              _kpReadKey 1930              __smallconst 0600                 ?_pinMode 0001  
               ?_soWrite 0007                 ?_ssdInit 0001         _display@ssd$F184 002B  
           ??_delayMicro 0003               ?_delayMili 0001   __end_of_PulseClockData 1C32  
    __size_of_pushNibble 0026             ??_lcdCommand 000E               ?_lcdString 000F  
           ??_kpDebounce 000A               ?_kpReadKey 0001          lcdCommand@value 000E  
              main@tecla 001D       __end_of_delayMicro 1CAC       __end_of_lcdCommand 1C94  
             pushByte@rs 000A             lcdChar@value 000E       __end_of_kpDebounce 1516  
           ??_cronometro 0013                 __Hrparam 0000                 __Lrparam 0000  
        ?_PulseClockData 0001         __size_of___fladd 04C0         __size_of___awdiv 00C4  
       __size_of___awmod 00B0  __size_of_pulseEnablePin 0042         __size_of_lcdChar 001E  
       __size_of_lcdInit 00B4         __size_of_pinMode 024E       __end_of_cronometro 0DDA  
               __ptext10 1BAE                 __ptext11 1930                 __ptext20 1C08  
               __ptext12 1B7C                 __ptext21 1028                 __ptext13 1B3E  
               __ptext22 1516                 __ptext14 0DDA                 __ptext23 068E  
               __ptext15 13E0                 __ptext24 1880                 __ptext16 1276  
               __ptext25 1708                 __ptext17 0B4E                 __ptext18 1AAE  
               __ptext19 1BDE         __size_of_soWrite 004E         __size_of_ssdInit 0056  
          __size_of_main 00EE              ??_delayMili 0003    __size_of_PulseEnClock 002A  
            delayMicro@a 0001                 isa$xinst 000000             soWrite@value 0007  
               _pushByte 19A8              ??_lcdString 0011              ??_kpReadKey 0001  
           ??_pushNibble 000C            ?_digitalWrite 0001             _PulseEnClock 1BDE  
      digitalWrite@value 0003                 soWrite@i 0009       __end_of_pushNibble 1C58  
           ?_digitalRead 0001              kpDebounce@i 000D           ??_digitalWrite 0005  
          ___fladd@signs 000D          digitalWrite@pin 0001             ___fladd@aexp 000E  
           ___fladd@bexp 000F  
